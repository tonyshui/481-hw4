(* Auto-generated from "clang_ast.atd" *)


type access_specifier = Clang_ast_t.access_specifier

type binary_operator_kind = Clang_ast_t.binary_operator_kind

type binary_operator_info = Clang_ast_t.binary_operator_info = {
  boi_kind (*atd kind *): binary_operator_kind
}

type builtin_type_kind = Clang_ast_t.builtin_type_kind

type cast_kind = Clang_ast_t.cast_kind

type cxx_base_specifier = Clang_ast_t.cxx_base_specifier = {
  xbs_name (*atd name *): string;
  xbs_virtual (*atd virtual *): bool
}

type cast_expr_info = Clang_ast_t.cast_expr_info = {
  cei_cast_kind (*atd cast_kind *): cast_kind;
  cei_base_path (*atd base_path *): cxx_base_specifier list
}

type cxx_noexcept_expr_info = Clang_ast_t.cxx_noexcept_expr_info = {
  xnee_value (*atd value *): bool
}

type decl_context_info = Clang_ast_t.decl_context_info = {
  dci_has_external_lexical_storage (*atd has_external_lexical_storage *):
    bool;
  dci_has_external_visible_storage (*atd has_external_visible_storage *):
    bool
}

type decl_kind = Clang_ast_t.decl_kind

type declaration_name_kind = Clang_ast_t.declaration_name_kind

type declaration_name = Clang_ast_t.declaration_name = {
  dn_kind (*atd kind *): declaration_name_kind;
  dn_name (*atd name *): string
}

type enum_decl_scope = Clang_ast_t.enum_decl_scope

type enum_decl_info = Clang_ast_t.enum_decl_info = {
  edi_scope (*atd scope *): enum_decl_scope option;
  edi_is_module_private (*atd is_module_private *): bool
}

type input_kind = Clang_ast_t.input_kind

type integer_literal_info = Clang_ast_t.integer_literal_info = {
  ili_is_signed (*atd is_signed *): bool;
  ili_bitwidth (*atd bitwidth *): int;
  ili_value (*atd value *): string
}

type lambda_capture_kind = Clang_ast_t.lambda_capture_kind

type named_decl_info = Clang_ast_t.named_decl_info = {
  ni_name (*atd name *): string;
  ni_qual_name (*atd qual_name *): string list
}

type obj_c_access_control = Clang_ast_t.obj_c_access_control

type obj_c_availability_check_expr_info =
  Clang_ast_t.obj_c_availability_check_expr_info = {
  oacei_version (*atd version *): string option
}

type obj_c_ivar_decl_info = Clang_ast_t.obj_c_ivar_decl_info = {
  ovdi_is_synthesize (*atd is_synthesize *): bool;
  ovdi_access_control (*atd access_control *): obj_c_access_control
}

type obj_c_property_control = Clang_ast_t.obj_c_property_control

type obj_c_subscript_kind = Clang_ast_t.obj_c_subscript_kind

type objc_lifetime_attr = Clang_ast_t.objc_lifetime_attr

type object_kind = Clang_ast_t.object_kind

type pointer = Clang_ast_t.pointer

type addr_label_expr_info = Clang_ast_t.addr_label_expr_info = {
  alei_label (*atd label *): string;
  alei_pointer (*atd pointer *): pointer
}

type cxx_new_expr_info = Clang_ast_t.cxx_new_expr_info = {
  xnei_is_array (*atd is_array *): bool;
  xnei_array_size_expr (*atd array_size_expr *): pointer option;
  xnei_initializer_expr (*atd initializer_expr *): pointer option
}

type cxx_temporary = Clang_ast_t.cxx_temporary

type cxx_bind_temporary_expr_info =
  Clang_ast_t.cxx_bind_temporary_expr_info = {
  xbtei_cxx_temporary (*atd cxx_temporary *): cxx_temporary
}

type goto_stmt_info = Clang_ast_t.goto_stmt_info = {
  gsi_label (*atd label *): string;
  gsi_pointer (*atd pointer *): pointer
}

type predefined_expr_type = Clang_ast_t.predefined_expr_type

type property_attribute = Clang_ast_t.property_attribute

type property_implementation = Clang_ast_t.property_implementation

type record_decl_info = Clang_ast_t.record_decl_info = {
  rdi_definition_ptr (*atd definition_ptr *): pointer;
  rdi_is_module_private (*atd is_module_private *): bool;
  rdi_is_complete_definition (*atd is_complete_definition *): bool;
  rdi_is_dependent_type (*atd is_dependent_type *): bool
}

type selector = Clang_ast_t.selector

type obj_c_method_ref_info = Clang_ast_t.obj_c_method_ref_info = {
  mri_getter (*atd getter *): selector option;
  mri_setter (*atd setter *): selector option
}

type obj_c_subscript_ref_expr_info =
  Clang_ast_t.obj_c_subscript_ref_expr_info = {
  osrei_kind (*atd kind *): obj_c_subscript_kind;
  osrei_getter (*atd getter *): selector option;
  osrei_setter (*atd setter *): selector option
}

type objc_boxed_expr_info = Clang_ast_t.objc_boxed_expr_info = {
  obei_boxing_method (*atd boxing_method *): selector option
}

type source_file = Clang_ast_t.source_file

type source_location = Clang_ast_t.source_location = {
  mutable sl_file (*atd file *): source_file option;
  mutable sl_line (*atd line *): int option;
  mutable sl_column (*atd column *): int option
}

type source_range = Clang_ast_t.source_range

type attribute_info = Clang_ast_t.attribute_info = {
  ai_pointer (*atd pointer *): pointer;
  ai_source_range (*atd source_range *): source_range;
  ai_parameters (*atd parameters *): string list;
  ai_is_inherited (*atd is_inherited *): bool;
  ai_is_implicit (*atd is_implicit *): bool
}

type attribute = Clang_ast_t.attribute = 
    FallThroughAttr of attribute_info
  | SuppressAttr of attribute_info
  | SwiftContextAttr of attribute_info
  | SwiftErrorResultAttr of attribute_info
  | SwiftIndirectResultAttr of attribute_info
  | AnnotateAttr of attribute_info
  | CFConsumedAttr of attribute_info
  | CarriesDependencyAttr of attribute_info
  | NSConsumedAttr of attribute_info
  | NonNullAttr of attribute_info
  | PassObjectSizeAttr of attribute_info
  | AMDGPUFlatWorkGroupSizeAttr of attribute_info
  | AMDGPUNumSGPRAttr of attribute_info
  | AMDGPUNumVGPRAttr of attribute_info
  | AMDGPUWavesPerEUAttr of attribute_info
  | ARMInterruptAttr of attribute_info
  | AVRInterruptAttr of attribute_info
  | AVRSignalAttr of attribute_info
  | AcquireCapabilityAttr of attribute_info
  | AcquiredAfterAttr of attribute_info
  | AcquiredBeforeAttr of attribute_info
  | AlignMac68kAttr of attribute_info
  | AlignedAttr of attribute_info
  | AllocAlignAttr of attribute_info
  | AllocSizeAttr of attribute_info
  | AlwaysInlineAttr of attribute_info
  | AnalyzerNoReturnAttr of attribute_info
  | AnyX86InterruptAttr of attribute_info
  | AnyX86NoCallerSavedRegistersAttr of attribute_info
  | ArcWeakrefUnavailableAttr of attribute_info
  | ArgumentWithTypeTagAttr of attribute_info
  | AsmLabelAttr of attribute_info
  | AssertCapabilityAttr of attribute_info
  | AssertExclusiveLockAttr of attribute_info
  | AssertSharedLockAttr of attribute_info
  | AssumeAlignedAttr of attribute_info
  | AvailabilityAttr of attribute_info
  | BlocksAttr of attribute_info
  | C11NoReturnAttr of attribute_info
  | CDeclAttr of attribute_info
  | CFAuditedTransferAttr of attribute_info
  | CFReturnsNotRetainedAttr of attribute_info
  | CFReturnsRetainedAttr of attribute_info
  | CFUnknownTransferAttr of attribute_info
  | CUDAConstantAttr of attribute_info
  | CUDADeviceAttr of attribute_info
  | CUDAGlobalAttr of attribute_info
  | CUDAHostAttr of attribute_info
  | CUDAInvalidTargetAttr of attribute_info
  | CUDALaunchBoundsAttr of attribute_info
  | CUDASharedAttr of attribute_info
  | CXX11NoReturnAttr of attribute_info
  | CallableWhenAttr of attribute_info
  | CapabilityAttr of attribute_info
  | CapturedRecordAttr of attribute_info
  | CleanupAttr of attribute_info
  | ColdAttr of attribute_info
  | CommonAttr of attribute_info
  | ConstAttr of attribute_info
  | ConstructorAttr of attribute_info
  | ConsumableAttr of attribute_info
  | ConsumableAutoCastAttr of attribute_info
  | ConsumableSetOnReadAttr of attribute_info
  | ConvergentAttr of attribute_info
  | DLLExportAttr of attribute_info
  | DLLImportAttr of attribute_info
  | DeprecatedAttr of attribute_info
  | DestructorAttr of attribute_info
  | DiagnoseIfAttr of attribute_info
  | DisableTailCallsAttr of attribute_info
  | EmptyBasesAttr of attribute_info
  | EnableIfAttr of attribute_info
  | EnumExtensibilityAttr of attribute_info
  | ExclusiveTrylockFunctionAttr of attribute_info
  | ExternalSourceSymbolAttr of attribute_info
  | FastCallAttr of attribute_info
  | FinalAttr of attribute_info
  | FlagEnumAttr of attribute_info
  | FlattenAttr of attribute_info
  | FormatAttr of attribute_info
  | FormatArgAttr of attribute_info
  | GNUInlineAttr of attribute_info
  | GuardedByAttr of attribute_info
  | GuardedVarAttr of attribute_info
  | HotAttr of attribute_info
  | IBActionAttr of attribute_info
  | IBOutletAttr of attribute_info
  | IBOutletCollectionAttr of attribute_info
  | InitPriorityAttr of attribute_info
  | IntelOclBiccAttr of attribute_info
  | InternalLinkageAttr of attribute_info
  | LTOVisibilityPublicAttr of attribute_info
  | LayoutVersionAttr of attribute_info
  | LockReturnedAttr of attribute_info
  | LocksExcludedAttr of attribute_info
  | MSABIAttr of attribute_info
  | MSInheritanceAttr of attribute_info
  | MSNoVTableAttr of attribute_info
  | MSP430InterruptAttr of attribute_info
  | MSStructAttr of attribute_info
  | MSVtorDispAttr of attribute_info
  | MaxFieldAlignmentAttr of attribute_info
  | MayAliasAttr of attribute_info
  | MicroMipsAttr of attribute_info
  | MinSizeAttr of attribute_info
  | Mips16Attr of attribute_info
  | MipsInterruptAttr of attribute_info
  | NSConsumesSelfAttr of attribute_info
  | NSReturnsAutoreleasedAttr of attribute_info
  | NSReturnsNotRetainedAttr of attribute_info
  | NSReturnsRetainedAttr of attribute_info
  | NakedAttr of attribute_info
  | NoAliasAttr of attribute_info
  | NoCommonAttr of attribute_info
  | NoDebugAttr of attribute_info
  | NoDuplicateAttr of attribute_info
  | NoInlineAttr of attribute_info
  | NoInstrumentFunctionAttr of attribute_info
  | NoMicroMipsAttr of attribute_info
  | NoMips16Attr of attribute_info
  | NoReturnAttr of attribute_info
  | NoSanitizeAttr of attribute_info
  | NoSplitStackAttr of attribute_info
  | NoThreadSafetyAnalysisAttr of attribute_info
  | NoThrowAttr of attribute_info
  | NotTailCalledAttr of attribute_info
  | OMPCaptureNoInitAttr of attribute_info
  | OMPThreadPrivateDeclAttr of attribute_info
  | ObjCBridgeAttr of attribute_info
  | ObjCBridgeMutableAttr of attribute_info
  | ObjCBridgeRelatedAttr of attribute_info
  | ObjCExceptionAttr of attribute_info
  | ObjCExplicitProtocolImplAttr of attribute_info
  | ObjCIndependentClassAttr of attribute_info
  | ObjCMethodFamilyAttr of attribute_info
  | ObjCNSObjectAttr of attribute_info
  | ObjCPreciseLifetimeAttr of attribute_info
  | ObjCRequiresPropertyDefsAttr of attribute_info
  | ObjCRequiresSuperAttr of attribute_info
  | ObjCReturnsInnerPointerAttr of attribute_info
  | ObjCRootClassAttr of attribute_info
  | ObjCSubclassingRestrictedAttr of attribute_info
  | OpenCLIntelReqdSubGroupSizeAttr of attribute_info
  | OpenCLKernelAttr of attribute_info
  | OpenCLUnrollHintAttr of attribute_info
  | OptimizeNoneAttr of attribute_info
  | OverrideAttr of attribute_info
  | OwnershipAttr of attribute_info
  | PackedAttr of attribute_info
  | ParamTypestateAttr of attribute_info
  | PascalAttr of attribute_info
  | PcsAttr of attribute_info
  | PragmaClangBSSSectionAttr of attribute_info
  | PragmaClangDataSectionAttr of attribute_info
  | PragmaClangRodataSectionAttr of attribute_info
  | PragmaClangTextSectionAttr of attribute_info
  | PreserveAllAttr of attribute_info
  | PreserveMostAttr of attribute_info
  | PtGuardedByAttr of attribute_info
  | PtGuardedVarAttr of attribute_info
  | PureAttr of attribute_info
  | RegCallAttr of attribute_info
  | ReleaseCapabilityAttr of attribute_info
  | ReqdWorkGroupSizeAttr of attribute_info
  | RequireConstantInitAttr of attribute_info
  | RequiresCapabilityAttr of attribute_info
  | RestrictAttr of attribute_info
  | ReturnTypestateAttr of attribute_info
  | ReturnsNonNullAttr of attribute_info
  | ReturnsTwiceAttr of attribute_info
  | ScopedLockableAttr of attribute_info
  | SectionAttr of attribute_info
  | SelectAnyAttr of attribute_info
  | SentinelAttr of attribute_info
  | SetTypestateAttr of attribute_info
  | SharedTrylockFunctionAttr of attribute_info
  | StdCallAttr of attribute_info
  | SwiftCallAttr of attribute_info
  | SysVABIAttr of attribute_info
  | TLSModelAttr of attribute_info
  | TargetAttr of attribute_info
  | TestTypestateAttr of attribute_info
  | ThisCallAttr of attribute_info
  | TransparentUnionAttr of attribute_info
  | TryAcquireCapabilityAttr of attribute_info
  | TypeTagForDatatypeAttr of attribute_info
  | TypeVisibilityAttr of attribute_info
  | UnavailableAttr of attribute_info
  | UnusedAttr of attribute_info
  | UsedAttr of attribute_info
  | UuidAttr of attribute_info
  | VecReturnAttr of attribute_info
  | VecTypeHintAttr of attribute_info
  | VectorCallAttr of attribute_info
  | VisibilityAttr of attribute_info
  | WarnUnusedAttr of attribute_info
  | WarnUnusedResultAttr of attribute_info
  | WeakAttr of attribute_info
  | WeakImportAttr of attribute_info
  | WeakRefAttr of attribute_info
  | WorkGroupSizeHintAttr of attribute_info
  | X86ForceAlignArgPointerAttr of attribute_info
  | XRayInstrumentAttr of attribute_info
  | XRayLogArgsAttr of attribute_info
  | AbiTagAttr of attribute_info
  | AliasAttr of attribute_info
  | AlignValueAttr of attribute_info
  | IFuncAttr of attribute_info
  | InitSegAttr of attribute_info
  | LoopHintAttr of attribute_info
  | ModeAttr of attribute_info
  | OMPDeclareSimdDeclAttr of attribute_info
  | OMPDeclareTargetDeclAttr of attribute_info
  | ObjCBoxableAttr of attribute_info
  | ObjCDesignatedInitializerAttr of attribute_info
  | ObjCRuntimeNameAttr of attribute_info
  | ObjCRuntimeVisibleAttr of attribute_info
  | OpenCLAccessAttr of attribute_info
  | OverloadableAttr of attribute_info
  | RenderScriptKernelAttr of attribute_info
  | ThreadAttr of attribute_info


type comment_info = Clang_ast_t.comment_info = {
  ci_parent_pointer (*atd parent_pointer *): pointer;
  ci_source_range (*atd source_range *): source_range
}

type specifier_kind = Clang_ast_t.specifier_kind

type stmt_info = Clang_ast_t.stmt_info = {
  si_pointer (*atd pointer *): pointer;
  si_source_range (*atd source_range *): source_range
}

type tag_kind = Clang_ast_t.tag_kind

type tls_kind = Clang_ast_t.tls_kind

type type_attribute_kind = Clang_ast_t.type_attribute_kind

type attr_type_info = Clang_ast_t.attr_type_info = {
  ati_attr_kind (*atd attr_kind *): type_attribute_kind;
  ati_lifetime (*atd lifetime *): objc_lifetime_attr
}

type type_ptr = Clang_ast_t.type_ptr

type qual_type = Clang_ast_t.qual_type = {
  qt_type_ptr (*atd type_ptr *): type_ptr;
  qt_is_const (*atd is_const *): bool;
  qt_is_restrict (*atd is_restrict *): bool;
  qt_is_volatile (*atd is_volatile *): bool
}

type array_type_info = Clang_ast_t.array_type_info = {
  arti_element_type (*atd element_type *): qual_type;
  arti_stride (*atd stride *): int option
}

type compound_assign_operator_info =
  Clang_ast_t.compound_assign_operator_info = {
  caoi_lhs_type (*atd lhs_type *): qual_type;
  caoi_result_type (*atd result_type *): qual_type
}

type cxx_delete_expr_info = Clang_ast_t.cxx_delete_expr_info = {
  xdei_is_array (*atd is_array *): bool;
  xdei_destroyed_type (*atd destroyed_type *): qual_type
}

type decl_ref = Clang_ast_t.decl_ref = {
  dr_kind (*atd kind *): decl_kind;
  dr_decl_pointer (*atd decl_pointer *): pointer;
  dr_name (*atd name *): named_decl_info option;
  dr_is_hidden (*atd is_hidden *): bool;
  dr_qual_type (*atd qual_type *): qual_type option
}

type cxx_construct_expr_info = Clang_ast_t.cxx_construct_expr_info = {
  xcei_decl_ref (*atd decl_ref *): decl_ref;
  xcei_is_elidable (*atd is_elidable *): bool;
  xcei_requires_zero_initialization (*atd requires_zero_initialization *):
    bool
}

type cxx_ctor_initializer_subject = Clang_ast_t.cxx_ctor_initializer_subject

type decl_ref_expr_info = Clang_ast_t.decl_ref_expr_info = {
  drti_decl_ref (*atd decl_ref *): decl_ref option;
  drti_found_decl_ref (*atd found_decl_ref *): decl_ref option
}

type expr_with_cleanups_info = Clang_ast_t.expr_with_cleanups_info = {
  ewci_decl_refs (*atd decl_refs *): decl_ref list
}

type function_type_info = Clang_ast_t.function_type_info = {
  fti_return_type (*atd return_type *): qual_type
}

type materialize_temporary_expr_info =
  Clang_ast_t.materialize_temporary_expr_info = {
  mtei_decl_ref (*atd decl_ref *): decl_ref option
}

type member_expr_info = Clang_ast_t.member_expr_info = {
  mei_is_arrow (*atd is_arrow *): bool;
  mei_performs_virtual_dispatch (*atd performs_virtual_dispatch *): bool;
  mei_name (*atd name *): named_decl_info;
  mei_decl_ref (*atd decl_ref *): decl_ref
}

type namespace_decl_info = Clang_ast_t.namespace_decl_info = {
  ndi_is_inline (*atd is_inline *): bool;
  ndi_original_namespace (*atd original_namespace *): decl_ref option
}

type nested_name_specifier_loc = Clang_ast_t.nested_name_specifier_loc = {
  nnsl_kind (*atd kind *): specifier_kind;
  nnsl_ref (*atd ref *): decl_ref option
}

type namespace_alias_decl_info = Clang_ast_t.namespace_alias_decl_info = {
  nadi_namespace_loc (*atd namespace_loc *): source_location;
  nadi_target_name_loc (*atd target_name_loc *): source_location;
  nadi_nested_name_specifier_locs (*atd nested_name_specifier_locs *):
    nested_name_specifier_loc list;
  nadi_namespace (*atd namespace *): decl_ref
}

type obj_c_category_decl_info = Clang_ast_t.obj_c_category_decl_info = {
  odi_class_interface (*atd class_interface *): decl_ref option;
  odi_implementation (*atd implementation *): decl_ref option;
  odi_protocols (*atd protocols *): decl_ref list
}

type obj_c_category_impl_decl_info =
  Clang_ast_t.obj_c_category_impl_decl_info = {
  ocidi_class_interface (*atd class_interface *): decl_ref option;
  ocidi_category_decl (*atd category_decl *): decl_ref option
}

type obj_c_compatible_alias_decl_info =
  Clang_ast_t.obj_c_compatible_alias_decl_info = {
  ocadi_class_interface (*atd class_interface *): decl_ref option
}

type obj_c_interface_decl_info = Clang_ast_t.obj_c_interface_decl_info = {
  otdi_super (*atd super *): decl_ref option;
  otdi_implementation (*atd implementation *): decl_ref option;
  otdi_protocols (*atd protocols *): decl_ref list;
  otdi_known_categories (*atd known_categories *): decl_ref list
}

type obj_c_ivar_ref_expr_info = Clang_ast_t.obj_c_ivar_ref_expr_info = {
  ovrei_decl_ref (*atd decl_ref *): decl_ref;
  ovrei_pointer (*atd pointer *): pointer;
  ovrei_is_free_ivar (*atd is_free_ivar *): bool
}

type obj_c_property_decl_info = Clang_ast_t.obj_c_property_decl_info = {
  opdi_qual_type (*atd qual_type *): qual_type;
  opdi_getter_method (*atd getter_method *): decl_ref option;
  opdi_setter_method (*atd setter_method *): decl_ref option;
  opdi_ivar_decl (*atd ivar_decl *): decl_ref option;
  opdi_property_control (*atd property_control *): obj_c_property_control;
  opdi_property_attributes (*atd property_attributes *):
    property_attribute list
}

type obj_c_property_impl_decl_info =
  Clang_ast_t.obj_c_property_impl_decl_info = {
  opidi_implementation (*atd implementation *): property_implementation;
  opidi_property_decl (*atd property_decl *): decl_ref option;
  opidi_ivar_decl (*atd ivar_decl *): decl_ref option
}

type obj_c_protocol_decl_info = Clang_ast_t.obj_c_protocol_decl_info = {
  opcdi_protocols (*atd protocols *): decl_ref list
}

type objc_encode_expr_info = Clang_ast_t.objc_encode_expr_info = {
  oeei_qual_type (*atd qual_type *): qual_type;
  oeei_raw (*atd raw *): string
}

type objc_object_type_info = Clang_ast_t.objc_object_type_info = {
  ooti_base_type (*atd base_type *): type_ptr;
  ooti_protocol_decls_ptr (*atd protocol_decls_ptr *): pointer list;
  ooti_type_args (*atd type_args *): qual_type list
}

type overload_expr_info = Clang_ast_t.overload_expr_info = {
  oei_decls (*atd decls *): decl_ref list;
  oei_name (*atd name *): declaration_name
}

type params_type_info = Clang_ast_t.params_type_info = {
  pti_params_type (*atd params_type *): qual_type list
}

type property_ref_kind = Clang_ast_t.property_ref_kind

type obj_c_property_ref_expr_info =
  Clang_ast_t.obj_c_property_ref_expr_info = {
  oprei_kind (*atd kind *): property_ref_kind;
  oprei_is_super_receiver (*atd is_super_receiver *): bool;
  oprei_is_messaging_getter (*atd is_messaging_getter *): bool;
  oprei_is_messaging_setter (*atd is_messaging_setter *): bool
}

type receiver_kind = Clang_ast_t.receiver_kind

type obj_c_message_expr_info = Clang_ast_t.obj_c_message_expr_info = {
  omei_selector (*atd selector *): string;
  omei_is_definition_found (*atd is_definition_found *): bool;
  omei_decl_pointer (*atd decl_pointer *): pointer option;
  omei_receiver_kind (*atd receiver_kind *): receiver_kind
}

type type_info = Clang_ast_t.type_info = {
  ti_pointer (*atd pointer *): pointer;
  ti_desugared_type (*atd desugared_type *): type_ptr option
}

type type_trait_info = Clang_ast_t.type_trait_info = {
  xtti_value (*atd value *): bool
}

type typedef_decl_info = Clang_ast_t.typedef_decl_info = {
  tdi_is_module_private (*atd is_module_private *): bool
}

type typedef_type_info = Clang_ast_t.typedef_type_info = {
  tti_child_type (*atd child_type *): qual_type;
  tti_decl_ptr (*atd decl_ptr *): pointer
}

type c_type = Clang_ast_t.c_type = 
    NoneType of (type_info)
  | BuiltinType of (type_info * builtin_type_kind)
  | ComplexType of (type_info)
  | PointerType of (type_info * qual_type)
  | BlockPointerType of (type_info * qual_type)
  | LValueReferenceType of (type_info * qual_type)
  | RValueReferenceType of (type_info * qual_type)
  | MemberPointerType of (type_info * qual_type)
  | ConstantArrayType of (type_info * array_type_info * int)
  | IncompleteArrayType of (type_info * array_type_info)
  | VariableArrayType of (type_info * array_type_info * pointer)
  | DependentSizedArrayType of (type_info * array_type_info)
  | DependentSizedExtVectorType of (type_info)
  | VectorType of (type_info)
  | ExtVectorType of (type_info)
  | FunctionProtoType of (type_info * function_type_info * params_type_info)
  | FunctionNoProtoType of (type_info * function_type_info)
  | UnresolvedUsingType of (type_info)
  | ParenType of (type_info * qual_type)
  | TypedefType of (type_info * typedef_type_info)
  | AdjustedType of (type_info * qual_type)
  | DecayedType of (type_info * qual_type)
  | TypeOfExprType of (type_info)
  | TypeOfType of (type_info)
  | DecltypeType of (type_info * qual_type)
  | UnaryTransformType of (type_info)
  | RecordType of (type_info * pointer)
  | EnumType of (type_info * pointer)
  | ElaboratedType of (type_info)
  | AttributedType of (type_info * attr_type_info)
  | TemplateTypeParmType of (type_info)
  | SubstTemplateTypeParmType of (type_info)
  | SubstTemplateTypeParmPackType of (type_info)
  | TemplateSpecializationType of (type_info)
  | AutoType of (type_info)
  | DeducedTemplateSpecializationType of (type_info)
  | InjectedClassNameType of (type_info)
  | DependentNameType of (type_info)
  | DependentTemplateSpecializationType of (type_info)
  | PackExpansionType of (type_info)
  | ObjCTypeParamType of (type_info)
  | ObjCObjectType of (type_info * objc_object_type_info)
  | ObjCInterfaceType of (type_info * pointer)
  | ObjCObjectPointerType of (type_info * qual_type)
  | PipeType of (type_info)
  | AtomicType of (type_info * qual_type)


type translation_unit_decl_info = Clang_ast_t.translation_unit_decl_info = {
  tudi_input_path (*atd input_path *): source_file;
  tudi_input_kind (*atd input_kind *): input_kind;
  tudi_arc_enabled (*atd arc_enabled *): bool;
  tudi_types (*atd types *): c_type list
}

type unary_expr_or_type_trait_kind =
  Clang_ast_t.unary_expr_or_type_trait_kind

type unary_expr_or_type_trait_expr_info =
  Clang_ast_t.unary_expr_or_type_trait_expr_info = {
  uttei_kind (*atd kind *): unary_expr_or_type_trait_kind;
  uttei_qual_type (*atd qual_type *): qual_type option
}

type unary_operator_kind = Clang_ast_t.unary_operator_kind

type unary_operator_info = Clang_ast_t.unary_operator_info = {
  uoi_kind (*atd kind *): unary_operator_kind;
  uoi_is_postfix (*atd is_postfix *): bool
}

type unresolved_lookup_expr_info = Clang_ast_t.unresolved_lookup_expr_info = {
  ulei_requires_ADL (*atd requires_ADL *): bool;
  ulei_is_overloaded (*atd is_overloaded *): bool;
  ulei_naming_class (*atd naming_class *): decl_ref option
}

type using_directive_decl_info = Clang_ast_t.using_directive_decl_info = {
  uddi_using_location (*atd using_location *): source_location;
  uddi_namespace_key_location (*atd namespace_key_location *):
    source_location;
  uddi_nested_name_specifier_locs (*atd nested_name_specifier_locs *):
    nested_name_specifier_loc list;
  uddi_nominated_namespace (*atd nominated_namespace *): decl_ref option
}

type value_kind = Clang_ast_t.value_kind

type expr_info = Clang_ast_t.expr_info = {
  ei_qual_type (*atd qual_type *): qual_type;
  ei_value_kind (*atd value_kind *): value_kind;
  ei_object_kind (*atd object_kind *): object_kind
}

type template_instantiation_arg_info =
  Clang_ast_t.template_instantiation_arg_info

type comment = Clang_ast_t.comment = 
    BlockCommandComment of (comment_info * comment list)
  | ParamCommandComment of (comment_info * comment list)
  | TParamCommandComment of (comment_info * comment list)
  | VerbatimBlockComment of (comment_info * comment list)
  | VerbatimLineComment of (comment_info * comment list)
  | ParagraphComment of (comment_info * comment list)
  | FullComment of (comment_info * comment list)
  | HTMLEndTagComment of (comment_info * comment list)
  | HTMLStartTagComment of (comment_info * comment list)
  | InlineCommandComment of (comment_info * comment list)
  | TextComment of (comment_info * comment list * string)
  | VerbatimBlockLineComment of (comment_info * comment list)


type template_specialization_info =
  Clang_ast_t.template_specialization_info = {
  tsi_template_decl (*atd template_decl *): pointer;
  tsi_specialization_args (*atd specialization_args *):
    template_instantiation_arg_info list
}

type decl_info = Clang_ast_t.decl_info = {
  di_pointer (*atd pointer *): pointer;
  di_parent_pointer (*atd parent_pointer *): pointer option;
  di_source_range (*atd source_range *): source_range;
  di_owning_module (*atd owning_module *): string option;
  di_is_hidden (*atd is_hidden *): bool;
  di_is_implicit (*atd is_implicit *): bool;
  di_is_used (*atd is_used *): bool;
  di_is_this_declaration_referenced (*atd is_this_declaration_referenced *):
    bool;
  di_is_invalid_decl (*atd is_invalid_decl *): bool;
  di_attributes (*atd attributes *): attribute list;
  di_full_comment (*atd full_comment *): comment option;
  di_access (*atd access *): access_specifier
}

type block_captured_variable = Clang_ast_t.block_captured_variable = {
  bcv_is_by_ref (*atd is_by_ref *): bool;
  bcv_is_nested (*atd is_nested *): bool;
  bcv_variable (*atd variable *): decl_ref option;
  bcv_copy_expr (*atd copy_expr *): stmt option
}

and block_decl_info = Clang_ast_t.block_decl_info = {
  bdi_parameters (*atd parameters *): decl list;
  bdi_is_variadic (*atd is_variadic *): bool;
  bdi_captures_cxx_this (*atd captures_cxx_this *): bool;
  bdi_captured_variables (*atd captured_variables *):
    block_captured_variable list;
  bdi_body (*atd body *): stmt option
}

and cxx_catch_stmt_info = Clang_ast_t.cxx_catch_stmt_info = {
  xcsi_variable (*atd variable *): decl option
}

and cxx_ctor_initializer = Clang_ast_t.cxx_ctor_initializer = {
  xci_subject (*atd subject *): cxx_ctor_initializer_subject;
  xci_source_range (*atd source_range *): source_range;
  xci_init_expr (*atd init_expr *): stmt option
}

and cxx_default_expr_info = Clang_ast_t.cxx_default_expr_info = {
  xdaei_init_expr (*atd init_expr *): stmt option
}

and cxx_method_decl_info = Clang_ast_t.cxx_method_decl_info = {
  xmdi_is_virtual (*atd is_virtual *): bool;
  xmdi_is_static (*atd is_static *): bool;
  xmdi_is_constexpr (*atd is_constexpr *): bool;
  xmdi_cxx_ctor_initializers (*atd cxx_ctor_initializers *):
    cxx_ctor_initializer list;
  xmdi_overriden_methods (*atd overriden_methods *): decl_ref list
}

and cxx_record_decl_info = Clang_ast_t.cxx_record_decl_info = {
  xrdi_bases (*atd bases *): type_ptr list;
  xrdi_vbases (*atd vbases *): type_ptr list;
  xrdi_transitive_vbases (*atd transitive_vbases *): type_ptr list;
  xrdi_is_pod (*atd is_pod *): bool;
  xrdi_destructor (*atd destructor *): decl_ref option;
  xrdi_lambda_call_operator (*atd lambda_call_operator *): decl_ref option;
  xrdi_lambda_captures (*atd lambda_captures *): lambda_capture_info list
}

and decl = Clang_ast_t.decl = 
    AccessSpecDecl of (decl_info)
  | BlockDecl of (decl_info * block_decl_info)
  | CapturedDecl of (decl_info * decl list * decl_context_info)
  | ClassScopeFunctionSpecializationDecl of (decl_info)
  | EmptyDecl of (decl_info)
  | ExportDecl of (decl_info)
  | ExternCContextDecl of (decl_info)
  | FileScopeAsmDecl of (decl_info * string)
  | FriendDecl of (decl_info * friend_info)
  | FriendTemplateDecl of (decl_info)
  | ImportDecl of (decl_info * string)
  | LinkageSpecDecl of (decl_info * decl list * decl_context_info)
  | LabelDecl of (decl_info * named_decl_info)
  | NamespaceDecl
      of (
          decl_info
        * named_decl_info
        * decl list
        * decl_context_info
        * namespace_decl_info
      )
  | NamespaceAliasDecl
      of (decl_info * named_decl_info * namespace_alias_decl_info)
  | ObjCCompatibleAliasDecl
      of (decl_info * named_decl_info * obj_c_compatible_alias_decl_info)
  | ObjCCategoryDecl
      of (
          decl_info
        * named_decl_info
        * decl list
        * decl_context_info
        * obj_c_category_decl_info
      )
  | ObjCCategoryImplDecl
      of (
          decl_info
        * named_decl_info
        * decl list
        * decl_context_info
        * obj_c_category_impl_decl_info
      )
  | ObjCImplementationDecl
      of (
          decl_info
        * named_decl_info
        * decl list
        * decl_context_info
        * obj_c_implementation_decl_info
      )
  | ObjCInterfaceDecl
      of (
          decl_info
        * named_decl_info
        * decl list
        * decl_context_info
        * obj_c_interface_decl_info
      )
  | ObjCProtocolDecl
      of (
          decl_info
        * named_decl_info
        * decl list
        * decl_context_info
        * obj_c_protocol_decl_info
      )
  | ObjCMethodDecl of (decl_info * named_decl_info * obj_c_method_decl_info)
  | ObjCPropertyDecl
      of (decl_info * named_decl_info * obj_c_property_decl_info)
  | BuiltinTemplateDecl of (decl_info * named_decl_info)
  | ClassTemplateDecl of (decl_info * named_decl_info * template_decl_info)
  | FunctionTemplateDecl
      of (decl_info * named_decl_info * template_decl_info)
  | TypeAliasTemplateDecl of (decl_info * named_decl_info)
  | VarTemplateDecl of (decl_info * named_decl_info)
  | TemplateTemplateParmDecl of (decl_info * named_decl_info)
  | EnumDecl
      of (
          decl_info
        * named_decl_info
        * type_ptr
        * decl list
        * decl_context_info
        * tag_kind
        * enum_decl_info
      )
  | RecordDecl
      of (
          decl_info
        * named_decl_info
        * type_ptr
        * decl list
        * decl_context_info
        * tag_kind
        * record_decl_info
      )
  | CXXRecordDecl
      of (
          decl_info
        * named_decl_info
        * type_ptr
        * decl list
        * decl_context_info
        * tag_kind
        * record_decl_info
        * cxx_record_decl_info
      )
  | ClassTemplateSpecializationDecl
      of (
          decl_info
        * named_decl_info
        * type_ptr
        * decl list
        * decl_context_info
        * tag_kind
        * record_decl_info
        * cxx_record_decl_info
        * string
        * template_specialization_info
      )
  | ClassTemplatePartialSpecializationDecl
      of (
          decl_info
        * named_decl_info
        * type_ptr
        * decl list
        * decl_context_info
        * tag_kind
        * record_decl_info
        * cxx_record_decl_info
        * string
        * template_specialization_info
      )
  | TemplateTypeParmDecl of (decl_info * named_decl_info * type_ptr)
  | ObjCTypeParamDecl of (decl_info * named_decl_info * type_ptr)
  | TypeAliasDecl of (decl_info * named_decl_info * type_ptr)
  | TypedefDecl
      of (decl_info * named_decl_info * type_ptr * typedef_decl_info)
  | UnresolvedUsingTypenameDecl of (decl_info * named_decl_info * type_ptr)
  | UsingDecl of (decl_info * named_decl_info)
  | UsingDirectiveDecl
      of (decl_info * named_decl_info * using_directive_decl_info)
  | UsingPackDecl of (decl_info * named_decl_info)
  | UsingShadowDecl of (decl_info * named_decl_info)
  | ConstructorUsingShadowDecl of (decl_info * named_decl_info)
  | BindingDecl of (decl_info * named_decl_info * qual_type)
  | FieldDecl of (decl_info * named_decl_info * qual_type * field_decl_info)
  | ObjCAtDefsFieldDecl
      of (decl_info * named_decl_info * qual_type * field_decl_info)
  | ObjCIvarDecl
      of (
          decl_info
        * named_decl_info
        * qual_type
        * field_decl_info
        * obj_c_ivar_decl_info
      )
  | FunctionDecl
      of (decl_info * named_decl_info * qual_type * function_decl_info)
  | CXXDeductionGuideDecl
      of (decl_info * named_decl_info * qual_type * function_decl_info)
  | CXXMethodDecl
      of (
          decl_info
        * named_decl_info
        * qual_type
        * function_decl_info
        * cxx_method_decl_info
      )
  | CXXConstructorDecl
      of (
          decl_info
        * named_decl_info
        * qual_type
        * function_decl_info
        * cxx_method_decl_info
      )
  | CXXConversionDecl
      of (
          decl_info
        * named_decl_info
        * qual_type
        * function_decl_info
        * cxx_method_decl_info
      )
  | CXXDestructorDecl
      of (
          decl_info
        * named_decl_info
        * qual_type
        * function_decl_info
        * cxx_method_decl_info
      )
  | MSPropertyDecl of (decl_info * named_decl_info * qual_type)
  | NonTypeTemplateParmDecl of (decl_info * named_decl_info * qual_type)
  | VarDecl of (decl_info * named_decl_info * qual_type * var_decl_info)
  | DecompositionDecl
      of (decl_info * named_decl_info * qual_type * var_decl_info)
  | ImplicitParamDecl
      of (decl_info * named_decl_info * qual_type * var_decl_info)
  | OMPCapturedExprDecl
      of (decl_info * named_decl_info * qual_type * var_decl_info)
  | ParmVarDecl of (decl_info * named_decl_info * qual_type * var_decl_info)
  | VarTemplateSpecializationDecl
      of (decl_info * named_decl_info * qual_type * var_decl_info)
  | VarTemplatePartialSpecializationDecl
      of (decl_info * named_decl_info * qual_type * var_decl_info)
  | EnumConstantDecl
      of (decl_info * named_decl_info * qual_type * enum_constant_decl_info)
  | IndirectFieldDecl
      of (decl_info * named_decl_info * qual_type * decl_ref list)
  | OMPDeclareReductionDecl of (decl_info * named_decl_info * qual_type)
  | UnresolvedUsingValueDecl of (decl_info * named_decl_info * qual_type)
  | OMPThreadPrivateDecl of (decl_info)
  | ObjCPropertyImplDecl of (decl_info * obj_c_property_impl_decl_info)
  | PragmaCommentDecl of (decl_info)
  | PragmaDetectMismatchDecl of (decl_info)
  | StaticAssertDecl of (decl_info)
  | TranslationUnitDecl
      of (
          decl_info
        * decl list
        * decl_context_info
        * translation_unit_decl_info
      )


and enum_constant_decl_info = Clang_ast_t.enum_constant_decl_info = {
  ecdi_init_expr (*atd init_expr *): stmt option
}

and field_decl_info = Clang_ast_t.field_decl_info = {
  fldi_is_mutable (*atd is_mutable *): bool;
  fldi_is_module_private (*atd is_module_private *): bool;
  fldi_init_expr (*atd init_expr *): stmt option;
  fldi_bit_width_expr (*atd bit_width_expr *): stmt option
}

and friend_info = Clang_ast_t.friend_info

and function_decl_info = Clang_ast_t.function_decl_info = {
  fdi_mangled_name (*atd mangled_name *): string option;
  fdi_storage_class (*atd storage_class *): string option;
  fdi_is_inline (*atd is_inline *): bool;
  fdi_is_module_private (*atd is_module_private *): bool;
  fdi_is_pure (*atd is_pure *): bool;
  fdi_is_delete_as_written (*atd is_delete_as_written *): bool;
  fdi_is_no_throw (*atd is_no_throw *): bool;
  fdi_parameters (*atd parameters *): decl list;
  fdi_decl_ptr_with_body (*atd decl_ptr_with_body *): pointer option;
  fdi_body (*atd body *): stmt option;
  fdi_template_specialization (*atd template_specialization *):
    template_specialization_info option
}

and lambda_capture_info = Clang_ast_t.lambda_capture_info = {
  lci_capture_kind (*atd capture_kind *): lambda_capture_kind;
  lci_capture_this (*atd capture_this *): bool;
  lci_capture_variable (*atd capture_variable *): bool;
  lci_capture_VLAtype (*atd capture_VLAtype *): bool;
  lci_init_captured_vardecl (*atd init_captured_vardecl *): decl option;
  lci_captured_var (*atd captured_var *): decl_ref option;
  lci_is_implicit (*atd is_implicit *): bool;
  lci_location (*atd location *): source_range;
  lci_is_pack_expansion (*atd is_pack_expansion *): bool
}

and lambda_expr_info = Clang_ast_t.lambda_expr_info = {
  lei_lambda_decl (*atd lambda_decl *): decl
}

and obj_c_implementation_decl_info =
  Clang_ast_t.obj_c_implementation_decl_info = {
  oidi_super (*atd super *): decl_ref option;
  oidi_class_interface (*atd class_interface *): decl_ref option;
  oidi_ivar_initializers (*atd ivar_initializers *):
    cxx_ctor_initializer list
}

and obj_c_message_expr_kind = Clang_ast_t.obj_c_message_expr_kind

and obj_c_method_decl_info = Clang_ast_t.obj_c_method_decl_info = {
  omdi_is_instance_method (*atd is_instance_method *): bool;
  omdi_result_type (*atd result_type *): qual_type;
  omdi_is_property_accessor (*atd is_property_accessor *): bool;
  omdi_property_decl (*atd property_decl *): decl_ref option;
  omdi_parameters (*atd parameters *): decl list;
  omdi_implicit_parameters (*atd implicit_parameters *): decl list;
  omdi_is_variadic (*atd is_variadic *): bool;
  omdi_body (*atd body *): stmt option
}

and opaque_value_expr_info = Clang_ast_t.opaque_value_expr_info = {
  ovei_source_expr (*atd source_expr *): stmt option
}

and stmt = Clang_ast_t.stmt = 
    GCCAsmStmt of (stmt_info * stmt list)
  | MSAsmStmt of (stmt_info * stmt list)
  | AttributedStmt of (stmt_info * stmt list * attribute list)
  | BreakStmt of (stmt_info * stmt list)
  | CXXCatchStmt of (stmt_info * stmt list * cxx_catch_stmt_info)
  | CXXForRangeStmt of (stmt_info * stmt list)
  | CXXTryStmt of (stmt_info * stmt list)
  | CapturedStmt of (stmt_info * stmt list)
  | CompoundStmt of (stmt_info * stmt list)
  | ContinueStmt of (stmt_info * stmt list)
  | CoreturnStmt of (stmt_info * stmt list)
  | CoroutineBodyStmt of (stmt_info * stmt list)
  | DeclStmt of (stmt_info * stmt list * decl list)
  | DoStmt of (stmt_info * stmt list)
  | BinaryConditionalOperator of (stmt_info * stmt list * expr_info)
  | ConditionalOperator of (stmt_info * stmt list * expr_info)
  | AddrLabelExpr
      of (stmt_info * stmt list * expr_info * addr_label_expr_info)
  | ArrayInitIndexExpr of (stmt_info * stmt list * expr_info)
  | ArrayInitLoopExpr of (stmt_info * stmt list * expr_info)
  | ArraySubscriptExpr of (stmt_info * stmt list * expr_info)
  | ArrayTypeTraitExpr of (stmt_info * stmt list * expr_info)
  | AsTypeExpr of (stmt_info * stmt list * expr_info)
  | AtomicExpr of (stmt_info * stmt list * expr_info)
  | BinaryOperator
      of (stmt_info * stmt list * expr_info * binary_operator_info)
  | CompoundAssignOperator
      of (
          stmt_info
        * stmt list
        * expr_info
        * binary_operator_info
        * compound_assign_operator_info
      )
  | BlockExpr of (stmt_info * stmt list * expr_info * decl)
  | CXXBindTemporaryExpr
      of (stmt_info * stmt list * expr_info * cxx_bind_temporary_expr_info)
  | CXXBoolLiteralExpr of (stmt_info * stmt list * expr_info * int)
  | CXXConstructExpr
      of (stmt_info * stmt list * expr_info * cxx_construct_expr_info)
  | CXXTemporaryObjectExpr
      of (stmt_info * stmt list * expr_info * cxx_construct_expr_info)
  | CXXDefaultArgExpr
      of (stmt_info * stmt list * expr_info * cxx_default_expr_info)
  | CXXDefaultInitExpr
      of (stmt_info * stmt list * expr_info * cxx_default_expr_info)
  | CXXDeleteExpr
      of (stmt_info * stmt list * expr_info * cxx_delete_expr_info)
  | CXXDependentScopeMemberExpr of (stmt_info * stmt list * expr_info)
  | CXXFoldExpr of (stmt_info * stmt list * expr_info)
  | CXXInheritedCtorInitExpr of (stmt_info * stmt list * expr_info)
  | CXXNewExpr of (stmt_info * stmt list * expr_info * cxx_new_expr_info)
  | CXXNoexceptExpr
      of (stmt_info * stmt list * expr_info * cxx_noexcept_expr_info)
  | CXXNullPtrLiteralExpr of (stmt_info * stmt list * expr_info)
  | CXXPseudoDestructorExpr of (stmt_info * stmt list * expr_info)
  | CXXScalarValueInitExpr of (stmt_info * stmt list * expr_info)
  | CXXStdInitializerListExpr of (stmt_info * stmt list * expr_info)
  | CXXThisExpr of (stmt_info * stmt list * expr_info)
  | CXXThrowExpr of (stmt_info * stmt list * expr_info)
  | CXXTypeidExpr of (stmt_info * stmt list * expr_info)
  | CXXUnresolvedConstructExpr of (stmt_info * stmt list * expr_info)
  | CXXUuidofExpr of (stmt_info * stmt list * expr_info)
  | CallExpr of (stmt_info * stmt list * expr_info)
  | CUDAKernelCallExpr of (stmt_info * stmt list * expr_info)
  | CXXMemberCallExpr of (stmt_info * stmt list * expr_info)
  | CXXOperatorCallExpr of (stmt_info * stmt list * expr_info)
  | UserDefinedLiteral of (stmt_info * stmt list * expr_info)
  | CStyleCastExpr
      of (stmt_info * stmt list * expr_info * cast_expr_info * qual_type)
  | CXXFunctionalCastExpr
      of (stmt_info * stmt list * expr_info * cast_expr_info * qual_type)
  | CXXConstCastExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * cast_expr_info
        * qual_type
        * string
      )
  | CXXDynamicCastExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * cast_expr_info
        * qual_type
        * string
      )
  | CXXReinterpretCastExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * cast_expr_info
        * qual_type
        * string
      )
  | CXXStaticCastExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * cast_expr_info
        * qual_type
        * string
      )
  | ObjCBridgedCastExpr
      of (stmt_info * stmt list * expr_info * cast_expr_info * qual_type)
  | ImplicitCastExpr of (stmt_info * stmt list * expr_info * cast_expr_info)
  | CharacterLiteral of (stmt_info * stmt list * expr_info * int)
  | ChooseExpr of (stmt_info * stmt list * expr_info)
  | CompoundLiteralExpr of (stmt_info * stmt list * expr_info)
  | ConvertVectorExpr of (stmt_info * stmt list * expr_info)
  | CoawaitExpr of (stmt_info * stmt list * expr_info)
  | CoyieldExpr of (stmt_info * stmt list * expr_info)
  | DeclRefExpr of (stmt_info * stmt list * expr_info * decl_ref_expr_info)
  | DependentCoawaitExpr of (stmt_info * stmt list * expr_info)
  | DependentScopeDeclRefExpr of (stmt_info * stmt list * expr_info)
  | DesignatedInitExpr of (stmt_info * stmt list * expr_info)
  | DesignatedInitUpdateExpr of (stmt_info * stmt list * expr_info)
  | ExprWithCleanups
      of (stmt_info * stmt list * expr_info * expr_with_cleanups_info)
  | ExpressionTraitExpr of (stmt_info * stmt list * expr_info)
  | ExtVectorElementExpr of (stmt_info * stmt list * expr_info)
  | FloatingLiteral of (stmt_info * stmt list * expr_info * string)
  | FunctionParmPackExpr of (stmt_info * stmt list * expr_info)
  | GNUNullExpr of (stmt_info * stmt list * expr_info)
  | GenericSelectionExpr of (stmt_info * stmt list * expr_info)
  | ImaginaryLiteral of (stmt_info * stmt list * expr_info)
  | ImplicitValueInitExpr of (stmt_info * stmt list * expr_info)
  | InitListExpr of (stmt_info * stmt list * expr_info)
  | IntegerLiteral
      of (stmt_info * stmt list * expr_info * integer_literal_info)
  | LambdaExpr of (stmt_info * stmt list * expr_info * lambda_expr_info)
  | MSPropertyRefExpr of (stmt_info * stmt list * expr_info)
  | MSPropertySubscriptExpr of (stmt_info * stmt list * expr_info)
  | MaterializeTemporaryExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * materialize_temporary_expr_info
      )
  | MemberExpr of (stmt_info * stmt list * expr_info * member_expr_info)
  | NoInitExpr of (stmt_info * stmt list * expr_info)
  | OMPArraySectionExpr of (stmt_info * stmt list * expr_info)
  | ObjCArrayLiteral of (stmt_info * stmt list * expr_info)
  | ObjCAvailabilityCheckExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * obj_c_availability_check_expr_info
      )
  | ObjCBoolLiteralExpr of (stmt_info * stmt list * expr_info * int)
  | ObjCBoxedExpr
      of (stmt_info * stmt list * expr_info * objc_boxed_expr_info)
  | ObjCDictionaryLiteral of (stmt_info * stmt list * expr_info)
  | ObjCEncodeExpr
      of (stmt_info * stmt list * expr_info * objc_encode_expr_info)
  | ObjCIndirectCopyRestoreExpr of (stmt_info * stmt list * expr_info)
  | ObjCIsaExpr of (stmt_info * stmt list * expr_info)
  | ObjCIvarRefExpr
      of (stmt_info * stmt list * expr_info * obj_c_ivar_ref_expr_info)
  | ObjCMessageExpr
      of (stmt_info * stmt list * expr_info * obj_c_message_expr_info)
  | ObjCPropertyRefExpr
      of (stmt_info * stmt list * expr_info * obj_c_property_ref_expr_info)
  | ObjCProtocolExpr of (stmt_info * stmt list * expr_info * decl_ref)
  | ObjCSelectorExpr of (stmt_info * stmt list * expr_info * selector)
  | ObjCStringLiteral of (stmt_info * stmt list * expr_info)
  | ObjCSubscriptRefExpr
      of (stmt_info * stmt list * expr_info * obj_c_subscript_ref_expr_info)
  | OffsetOfExpr of (stmt_info * stmt list * expr_info)
  | OpaqueValueExpr
      of (stmt_info * stmt list * expr_info * opaque_value_expr_info)
  | UnresolvedLookupExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * overload_expr_info
        * unresolved_lookup_expr_info
      )
  | UnresolvedMemberExpr
      of (stmt_info * stmt list * expr_info * overload_expr_info)
  | PackExpansionExpr of (stmt_info * stmt list * expr_info)
  | ParenExpr of (stmt_info * stmt list * expr_info)
  | ParenListExpr of (stmt_info * stmt list * expr_info)
  | PredefinedExpr
      of (stmt_info * stmt list * expr_info * predefined_expr_type)
  | PseudoObjectExpr of (stmt_info * stmt list * expr_info)
  | ShuffleVectorExpr of (stmt_info * stmt list * expr_info)
  | SizeOfPackExpr of (stmt_info * stmt list * expr_info)
  | StmtExpr of (stmt_info * stmt list * expr_info)
  | StringLiteral of (stmt_info * stmt list * expr_info * string list)
  | SubstNonTypeTemplateParmExpr of (stmt_info * stmt list * expr_info)
  | SubstNonTypeTemplateParmPackExpr of (stmt_info * stmt list * expr_info)
  | TypeTraitExpr of (stmt_info * stmt list * expr_info * type_trait_info)
  | TypoExpr of (stmt_info * stmt list * expr_info)
  | UnaryExprOrTypeTraitExpr
      of (
          stmt_info
        * stmt list
        * expr_info
        * unary_expr_or_type_trait_expr_info
      )
  | UnaryOperator
      of (stmt_info * stmt list * expr_info * unary_operator_info)
  | VAArgExpr of (stmt_info * stmt list * expr_info)
  | ForStmt of (stmt_info * stmt list)
  | GotoStmt of (stmt_info * stmt list * goto_stmt_info)
  | IfStmt of (stmt_info * stmt list)
  | IndirectGotoStmt of (stmt_info * stmt list)
  | LabelStmt of (stmt_info * stmt list * string)
  | MSDependentExistsStmt of (stmt_info * stmt list)
  | NullStmt of (stmt_info * stmt list)
  | OMPAtomicDirective of (stmt_info * stmt list)
  | OMPBarrierDirective of (stmt_info * stmt list)
  | OMPCancelDirective of (stmt_info * stmt list)
  | OMPCancellationPointDirective of (stmt_info * stmt list)
  | OMPCriticalDirective of (stmt_info * stmt list)
  | OMPFlushDirective of (stmt_info * stmt list)
  | OMPDistributeDirective of (stmt_info * stmt list)
  | OMPDistributeParallelForDirective of (stmt_info * stmt list)
  | OMPDistributeParallelForSimdDirective of (stmt_info * stmt list)
  | OMPDistributeSimdDirective of (stmt_info * stmt list)
  | OMPForDirective of (stmt_info * stmt list)
  | OMPForSimdDirective of (stmt_info * stmt list)
  | OMPParallelForDirective of (stmt_info * stmt list)
  | OMPParallelForSimdDirective of (stmt_info * stmt list)
  | OMPSimdDirective of (stmt_info * stmt list)
  | OMPTargetParallelForSimdDirective of (stmt_info * stmt list)
  | OMPTargetSimdDirective of (stmt_info * stmt list)
  | OMPTargetTeamsDistributeDirective of (stmt_info * stmt list)
  | OMPTargetTeamsDistributeParallelForDirective of (stmt_info * stmt list)
  | OMPTargetTeamsDistributeParallelForSimdDirective
      of (stmt_info * stmt list)
  | OMPTargetTeamsDistributeSimdDirective of (stmt_info * stmt list)
  | OMPTaskLoopDirective of (stmt_info * stmt list)
  | OMPTaskLoopSimdDirective of (stmt_info * stmt list)
  | OMPTeamsDistributeDirective of (stmt_info * stmt list)
  | OMPTeamsDistributeParallelForDirective of (stmt_info * stmt list)
  | OMPTeamsDistributeParallelForSimdDirective of (stmt_info * stmt list)
  | OMPTeamsDistributeSimdDirective of (stmt_info * stmt list)
  | OMPMasterDirective of (stmt_info * stmt list)
  | OMPOrderedDirective of (stmt_info * stmt list)
  | OMPParallelDirective of (stmt_info * stmt list)
  | OMPParallelSectionsDirective of (stmt_info * stmt list)
  | OMPSectionDirective of (stmt_info * stmt list)
  | OMPSectionsDirective of (stmt_info * stmt list)
  | OMPSingleDirective of (stmt_info * stmt list)
  | OMPTargetDataDirective of (stmt_info * stmt list)
  | OMPTargetDirective of (stmt_info * stmt list)
  | OMPTargetEnterDataDirective of (stmt_info * stmt list)
  | OMPTargetExitDataDirective of (stmt_info * stmt list)
  | OMPTargetParallelDirective of (stmt_info * stmt list)
  | OMPTargetParallelForDirective of (stmt_info * stmt list)
  | OMPTargetTeamsDirective of (stmt_info * stmt list)
  | OMPTargetUpdateDirective of (stmt_info * stmt list)
  | OMPTaskDirective of (stmt_info * stmt list)
  | OMPTaskgroupDirective of (stmt_info * stmt list)
  | OMPTaskwaitDirective of (stmt_info * stmt list)
  | OMPTaskyieldDirective of (stmt_info * stmt list)
  | OMPTeamsDirective of (stmt_info * stmt list)
  | ObjCAtCatchStmt of (stmt_info * stmt list * obj_c_message_expr_kind)
  | ObjCAtFinallyStmt of (stmt_info * stmt list)
  | ObjCAtSynchronizedStmt of (stmt_info * stmt list)
  | ObjCAtThrowStmt of (stmt_info * stmt list)
  | ObjCAtTryStmt of (stmt_info * stmt list)
  | ObjCAutoreleasePoolStmt of (stmt_info * stmt list)
  | ObjCForCollectionStmt of (stmt_info * stmt list)
  | ReturnStmt of (stmt_info * stmt list)
  | SEHExceptStmt of (stmt_info * stmt list)
  | SEHFinallyStmt of (stmt_info * stmt list)
  | SEHLeaveStmt of (stmt_info * stmt list)
  | SEHTryStmt of (stmt_info * stmt list)
  | CaseStmt of (stmt_info * stmt list)
  | DefaultStmt of (stmt_info * stmt list)
  | SwitchStmt of (stmt_info * stmt list)
  | WhileStmt of (stmt_info * stmt list)


and template_decl_info = Clang_ast_t.template_decl_info = {
  tdi_specializations (*atd specializations *): decl list
}

and var_decl_info = Clang_ast_t.var_decl_info = {
  vdi_storage_class (*atd storage_class *): string option;
  vdi_tls_kind (*atd tls_kind *): tls_kind;
  vdi_is_global (*atd is_global *): bool;
  vdi_is_static_local (*atd is_static_local *): bool;
  vdi_is_module_private (*atd is_module_private *): bool;
  vdi_is_nrvo_variable (*atd is_nrvo_variable *): bool;
  vdi_is_const_expr (*atd is_const_expr *): bool;
  vdi_init_expr (*atd init_expr *): stmt option;
  vdi_parm_index_in_function (*atd parm_index_in_function *): int option
}

type lookup = Clang_ast_t.lookup = {
  lup_decl_name (*atd decl_name *): string;
  lup_decl_refs (*atd decl_refs *): decl_ref list
}

type lookups = Clang_ast_t.lookups = {
  lups_decl_ref (*atd decl_ref *): decl_ref;
  lups_primary_context_pointer (*atd primary_context_pointer *):
    pointer option;
  lups_lookups (*atd lookups *): lookup list;
  lups_has_undeserialized_decls (*atd has_undeserialized_decls *): bool
}

let _11_tag = Bi_io.num_variant_tag
let write_untagged__11 = (
  Ag_ob_run.write_untagged_option (
    Bi_io.write_string
  )
)
let write__11 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__11 ob x
let string_of__11 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__11 ob x;
  Bi_outbuf.contents ob
let get__11_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                Ag_ob_run.read_string
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__11 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            Ag_ob_run.read_string
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _11_of_string ?pos s =
  read__11 (Bi_inbuf.from_string ?pos s)
let _2_tag = Bi_io.num_variant_tag
let write_untagged__2 = (
  Ag_ob_run.write_untagged_option (
    Bi_io.write_svint
  )
)
let write__2 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__2 ob x
let string_of__2 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__2 ob x;
  Bi_outbuf.contents ob
let get__2_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                Ag_ob_run.read_int
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__2 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            Ag_ob_run.read_int
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _2_of_string ?pos s =
  read__2 (Bi_inbuf.from_string ?pos s)
let _3_tag = Bi_io.array_tag
let write_untagged__3 = (
  Ag_ob_run.write_untagged_list
    Bi_io.string_tag
    (
      Bi_io.write_untagged_string
    )
)
let write__3 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__3 ob x
let string_of__3 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__3 ob x;
  Bi_outbuf.contents ob
let get__3_reader = (
  Ag_ob_run.get_list_reader (
    Ag_ob_run.get_string_reader
  )
)
let read__3 = (
  Ag_ob_run.read_list (
    Ag_ob_run.get_string_reader
  )
)
let _3_of_string ?pos s =
  read__3 (Bi_inbuf.from_string ?pos s)
let _30_tag = Bi_io.svint_tag
let write_untagged__30 = (
  fun ob x -> (
    let x = ( Clang_ast_types.TypePtr.unwrap ) x in (
      Bi_io.write_untagged_svint
    ) ob x)
)
let write__30 ob x =
  Bi_io.write_tag ob Bi_io.svint_tag;
  write_untagged__30 ob x
let string_of__30 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__30 ob x;
  Bi_outbuf.contents ob
let get__30_reader = (
  fun tag ib ->
    ( Clang_ast_types.TypePtr.wrap ) ((
      Ag_ob_run.get_int_reader
    ) tag ib)
)
let read__30 = (
  fun ib ->
    ( Clang_ast_types.TypePtr.wrap ) ((
      Ag_ob_run.read_int
    ) ib)
)
let _30_of_string ?pos s =
  read__30 (Bi_inbuf.from_string ?pos s)
let access_specifier_tag = Bi_io.variant_tag
let write_untagged_access_specifier = (
  fun ob x ->
    match x with
      | `None -> Bi_outbuf.add_char4 ob '3' '\227' '>' '\216'
      | `Public -> Bi_outbuf.add_char4 ob '\027' '\135' '\244' '\201'
      | `Protected -> Bi_outbuf.add_char4 ob '6' ']' '\015' '\014'
      | `Private -> Bi_outbuf.add_char4 ob 'V' '\192' 'T' '\227'
)
let write_access_specifier ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_access_specifier ob x
let string_of_access_specifier ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_access_specifier ob x;
  Bi_outbuf.contents ob
let get_access_specifier_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 870530776, false -> `None
            | 461894857, false -> `Public
            | 912068366, false -> `Protected
            | -692038429, false -> `Private
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_access_specifier = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 870530776, false -> `None
        | 461894857, false -> `Public
        | 912068366, false -> `Protected
        | -692038429, false -> `Private
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let access_specifier_of_string ?pos s =
  read_access_specifier (Bi_inbuf.from_string ?pos s)
let binary_operator_kind_tag = Bi_io.variant_tag
let write_untagged_binary_operator_kind = (
  fun ob x ->
    match x with
      | `PtrMemD -> Bi_outbuf.add_char4 ob '6' '\251' '\137' '}'
      | `PtrMemI -> Bi_outbuf.add_char4 ob '6' '\251' '\137' '\130'
      | `Mul -> Bi_outbuf.add_char4 ob '\000' ':' '\211' '\228'
      | `Div -> Bi_outbuf.add_char4 ob '\000' '3' '\245' '1'
      | `Rem -> Bi_outbuf.add_char4 ob '\000' '>' '\145' ':'
      | `Add -> Bi_outbuf.add_char4 ob '\000' '1' '\170' '\001'
      | `Sub -> Bi_outbuf.add_char4 ob '\000' '?' 'a' '`'
      | `Shl -> Bi_outbuf.add_char4 ob '\000' '?' 'V' '\023'
      | `Shr -> Bi_outbuf.add_char4 ob '\000' '?' 'V' '\029'
      | `LT -> Bi_outbuf.add_char4 ob '\000' '\000' 'B' '\136'
      | `GT -> Bi_outbuf.add_char4 ob '\000' '\000' '>' '-'
      | `LE -> Bi_outbuf.add_char4 ob '\000' '\000' 'B' 'y'
      | `GE -> Bi_outbuf.add_char4 ob '\000' '\000' '>' '\030'
      | `EQ -> Bi_outbuf.add_char4 ob '\000' '\000' '<' 'l'
      | `NE -> Bi_outbuf.add_char4 ob '\000' '\000' 'D' '7'
      | `And -> Bi_outbuf.add_char4 ob '\000' '1' '\178' '\183'
      | `Xor -> Bi_outbuf.add_char4 ob '\000' 'C' '\'' '{'
      | `Or -> Bi_outbuf.add_char4 ob '\000' '\000' 'E' 'C'
      | `LAnd -> Bi_outbuf.add_char4 ob '2' 'm' '\233' '\235'
      | `LOr -> Bi_outbuf.add_char4 ob '\000' '9' '\240' '\143'
      | `Assign -> Bi_outbuf.add_char4 ob '\000' '\154' '\186' 'O'
      | `MulAssign -> Bi_outbuf.add_char4 ob '"' 'S' '\145' '3'
      | `DivAssign -> Bi_outbuf.add_char4 ob ')' 'P' '*' '@'
      | `RemAssign -> Bi_outbuf.add_char4 ob 'W' 'x' '\243' '\t'
      | `AddAssign -> Bi_outbuf.add_char4 ob '%' '\253' '[' '\016'
      | `SubAssign -> Bi_outbuf.add_char4 ob 't' '%' 'c' '\175'
      | `ShlAssign -> Bi_outbuf.add_char4 ob ',' 'l' ';' '\166'
      | `ShrAssign -> Bi_outbuf.add_char4 ob '%' '\237' '\004' ','
      | `AndAssign -> Bi_outbuf.add_char4 ob 'a' '\245' '\208' 'F'
      | `XorAssign -> Bi_outbuf.add_char4 ob 'U' '\005' '0' '\n'
      | `OrAssign -> Bi_outbuf.add_char4 ob '+' '\186' '\211' '\210'
      | `Comma -> Bi_outbuf.add_char4 ob ']' '\138' '\161' '\181'
)
let write_binary_operator_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_binary_operator_kind ob x
let string_of_binary_operator_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_binary_operator_kind ob x;
  Bi_outbuf.contents ob
let get_binary_operator_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 922454397, false -> `PtrMemD
            | 922454402, false -> `PtrMemI
            | 3855332, false -> `Mul
            | 3405105, false -> `Div
            | 4100410, false -> `Rem
            | 3254785, false -> `Add
            | 4153696, false -> `Sub
            | 4150807, false -> `Shl
            | 4150813, false -> `Shr
            | 17032, false -> `LT
            | 15917, false -> `GT
            | 17017, false -> `LE
            | 15902, false -> `GE
            | 15468, false -> `EQ
            | 17463, false -> `NE
            | 3257015, false -> `And
            | 4401019, false -> `Xor
            | 17731, false -> `Or
            | 846064107, false -> `LAnd
            | 3797135, false -> `LOr
            | 10140239, false -> `Assign
            | 575902003, false -> `MulAssign
            | 693119552, false -> `DivAssign
            | -679939319, false -> `RemAssign
            | 637360912, false -> `AddAssign
            | -198876241, false -> `SubAssign
            | 745290662, false -> `ShlAssign
            | 636290092, false -> `ShrAssign
            | -503984058, false -> `AndAssign
            | -721080310, false -> `XorAssign
            | 733664210, false -> `OrAssign
            | -578117195, false -> `Comma
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_binary_operator_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 922454397, false -> `PtrMemD
        | 922454402, false -> `PtrMemI
        | 3855332, false -> `Mul
        | 3405105, false -> `Div
        | 4100410, false -> `Rem
        | 3254785, false -> `Add
        | 4153696, false -> `Sub
        | 4150807, false -> `Shl
        | 4150813, false -> `Shr
        | 17032, false -> `LT
        | 15917, false -> `GT
        | 17017, false -> `LE
        | 15902, false -> `GE
        | 15468, false -> `EQ
        | 17463, false -> `NE
        | 3257015, false -> `And
        | 4401019, false -> `Xor
        | 17731, false -> `Or
        | 846064107, false -> `LAnd
        | 3797135, false -> `LOr
        | 10140239, false -> `Assign
        | 575902003, false -> `MulAssign
        | 693119552, false -> `DivAssign
        | -679939319, false -> `RemAssign
        | 637360912, false -> `AddAssign
        | -198876241, false -> `SubAssign
        | 745290662, false -> `ShlAssign
        | 636290092, false -> `ShrAssign
        | -503984058, false -> `AndAssign
        | -721080310, false -> `XorAssign
        | 733664210, false -> `OrAssign
        | -578117195, false -> `Comma
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let binary_operator_kind_of_string ?pos s =
  read_binary_operator_kind (Bi_inbuf.from_string ?pos s)
let binary_operator_info_tag = Bi_io.record_tag
let write_untagged_binary_operator_info : Bi_outbuf.t -> binary_operator_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 1;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_binary_operator_kind
    ) ob x.boi_kind;
)
let write_binary_operator_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_binary_operator_info ob x
let string_of_binary_operator_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_binary_operator_info ob x;
  Bi_outbuf.contents ob
let get_binary_operator_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_boi_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_boi_kind := (
                (
                  read_binary_operator_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
        (
          {
            boi_kind = !field_boi_kind;
          }
         : binary_operator_info)
)
let read_binary_operator_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_boi_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_boi_kind := (
            (
              read_binary_operator_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
    (
      {
        boi_kind = !field_boi_kind;
      }
     : binary_operator_info)
)
let binary_operator_info_of_string ?pos s =
  read_binary_operator_info (Bi_inbuf.from_string ?pos s)
let builtin_type_kind_tag = Bi_io.variant_tag
let write_untagged_builtin_type_kind = (
  fun ob x ->
    match x with
      | `Void -> Bi_outbuf.add_char4 ob '9' ',' '\239' 't'
      | `Bool -> Bi_outbuf.add_char4 ob '+' '\244' '\176' 'J'
      | `Char_U -> Bi_outbuf.add_char4 ob 'l' '\n' '\007' '\140'
      | `UChar -> Bi_outbuf.add_char4 ob '\029' '\167' '\217' '\203'
      | `WChar_U -> Bi_outbuf.add_char4 ob '\r' '\213' 'c' '#'
      | `Char16 -> Bi_outbuf.add_char4 ob 'l' '\t' '\223' '['
      | `Char32 -> Bi_outbuf.add_char4 ob 'l' '\t' '\225' '\021'
      | `UShort -> Bi_outbuf.add_char4 ob '\011' '\170' '\159' '\231'
      | `UInt -> Bi_outbuf.add_char4 ob '8' 'f' '\231' '\154'
      | `ULong -> Bi_outbuf.add_char4 ob '#' '\160' ' ' 'q'
      | `ULongLong -> Bi_outbuf.add_char4 ob '\t' '\b' '~' '\141'
      | `UInt128 -> Bi_outbuf.add_char4 ob '!' '\147' '\174' '\221'
      | `Char_S -> Bi_outbuf.add_char4 ob 'l' '\n' '\007' '\138'
      | `SChar -> Bi_outbuf.add_char4 ob 'v' '\218' '\176' '\201'
      | `WChar_S -> Bi_outbuf.add_char4 ob '\r' '\213' 'c' '!'
      | `Short -> Bi_outbuf.add_char4 ob '\015' 'T' '\244' '\\'
      | `Int -> Bi_outbuf.add_char4 ob '\000' '7' '\196' '\207'
      | `Long -> Bi_outbuf.add_char4 ob '2' '\144' '\209' '\156'
      | `LongLong -> Bi_outbuf.add_char4 ob '~' '\224' '\161' '8'
      | `Int128 -> Bi_outbuf.add_char4 ob 'R' '\243' '@' '\200'
      | `Half -> Bi_outbuf.add_char4 ob '/' '\225' 'U' '\211'
      | `Float -> Bi_outbuf.add_char4 ob '\021' '\196' '5' '|'
      | `Double -> Bi_outbuf.add_char4 ob 'g' '_' '\159' '1'
      | `LongDouble -> Bi_outbuf.add_char4 ob 'B' '\247' '\141' '\205'
      | `Float128 -> Bi_outbuf.add_char4 ob '7' '&' '\186' ';'
      | `NullPtr -> Bi_outbuf.add_char4 ob 'j' '2' '1' '\135'
      | `ObjCId -> Bi_outbuf.add_char4 ob 'I' '\186' '\015' '\135'
      | `ObjCClass -> Bi_outbuf.add_char4 ob '[' '!' 'X' '\012'
      | `ObjCSel -> Bi_outbuf.add_char4 ob '9' '\027' '\030' 'n'
      | `OCLSampler -> Bi_outbuf.add_char4 ob 'X' '>' 'G' '0'
      | `OCLEvent -> Bi_outbuf.add_char4 ob 't' '\192' '\240' 'B'
      | `OCLClkEvent -> Bi_outbuf.add_char4 ob '\012' '/' 'o' '\240'
      | `OCLQueue -> Bi_outbuf.add_char4 ob '\\' '\230' '\181' '\185'
      | `OCLReserveID -> Bi_outbuf.add_char4 ob '>' '\201' '!' '?'
      | `Dependent -> Bi_outbuf.add_char4 ob 'D' '\240' 'y' '\223'
      | `Overload -> Bi_outbuf.add_char4 ob '\030' '\231' '!' '\154'
      | `BoundMember -> Bi_outbuf.add_char4 ob '\r' 'P' 'a' '\024'
      | `PseudoObject -> Bi_outbuf.add_char4 ob '^' '\201' '\188' '\253'
      | `UnknownAny -> Bi_outbuf.add_char4 ob 'q' '\246' '\229' '\162'
      | `BuiltinFn -> Bi_outbuf.add_char4 ob 'S' 'Z' 'N' '\171'
      | `ARCUnbridgedCast -> Bi_outbuf.add_char4 ob 'Y' '5' '\208' '\207'
      | `OMPArraySection -> Bi_outbuf.add_char4 ob '+' '9' 'y' '\222'
)
let write_builtin_type_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_builtin_type_kind ob x
let string_of_builtin_type_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_builtin_type_kind ob x;
  Bi_outbuf.contents ob
let get_builtin_type_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 959246196, false -> `Void
            | 737456202, false -> `Bool
            | -334887028, false -> `Char_U
            | 497539531, false -> `UChar
            | 232088355, false -> `WChar_U
            | -334897317, false -> `Char16
            | -334896875, false -> `Char32
            | 195731431, false -> `UShort
            | 946268058, false -> `UInt
            | 597696625, false -> `ULong
            | 151551629, false -> `ULongLong
            | 563326685, false -> `UInt128
            | -334887030, false -> `Char_S
            | -153440055, false -> `SChar
            | 232088353, false -> `WChar_S
            | 257225820, false -> `Short
            | 3654863, false -> `Int
            | 848351644, false -> `Long
            | -18833096, false -> `LongLong
            | -755810104, false -> `Int128
            | 803296723, false -> `Half
            | 365180284, false -> `Float
            | -413163727, false -> `Double
            | -1023963699, false -> `LongDouble
            | 925284923, false -> `Float128
            | -365809273, false -> `NullPtr
            | -910553209, false -> `ObjCId
            | -618571764, false -> `ObjCClass
            | 958078574, false -> `ObjCSel
            | -667007184, false -> `OCLSampler
            | -188682174, false -> `OCLEvent
            | 204435440, false -> `OCLClkEvent
            | -588859975, false -> `OCLQueue
            | 1053368639, false -> `OCLReserveID
            | -990873121, false -> `Dependent
            | 518463898, false -> `Overload
            | 223371544, false -> `BoundMember
            | -557204227, false -> `PseudoObject
            | -235477598, false -> `UnknownAny
            | -749056341, false -> `BuiltinFn
            | -650784561, false -> `ARCUnbridgedCast
            | 725187038, false -> `OMPArraySection
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_builtin_type_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 959246196, false -> `Void
        | 737456202, false -> `Bool
        | -334887028, false -> `Char_U
        | 497539531, false -> `UChar
        | 232088355, false -> `WChar_U
        | -334897317, false -> `Char16
        | -334896875, false -> `Char32
        | 195731431, false -> `UShort
        | 946268058, false -> `UInt
        | 597696625, false -> `ULong
        | 151551629, false -> `ULongLong
        | 563326685, false -> `UInt128
        | -334887030, false -> `Char_S
        | -153440055, false -> `SChar
        | 232088353, false -> `WChar_S
        | 257225820, false -> `Short
        | 3654863, false -> `Int
        | 848351644, false -> `Long
        | -18833096, false -> `LongLong
        | -755810104, false -> `Int128
        | 803296723, false -> `Half
        | 365180284, false -> `Float
        | -413163727, false -> `Double
        | -1023963699, false -> `LongDouble
        | 925284923, false -> `Float128
        | -365809273, false -> `NullPtr
        | -910553209, false -> `ObjCId
        | -618571764, false -> `ObjCClass
        | 958078574, false -> `ObjCSel
        | -667007184, false -> `OCLSampler
        | -188682174, false -> `OCLEvent
        | 204435440, false -> `OCLClkEvent
        | -588859975, false -> `OCLQueue
        | 1053368639, false -> `OCLReserveID
        | -990873121, false -> `Dependent
        | 518463898, false -> `Overload
        | 223371544, false -> `BoundMember
        | -557204227, false -> `PseudoObject
        | -235477598, false -> `UnknownAny
        | -749056341, false -> `BuiltinFn
        | -650784561, false -> `ARCUnbridgedCast
        | 725187038, false -> `OMPArraySection
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let builtin_type_kind_of_string ?pos s =
  read_builtin_type_kind (Bi_inbuf.from_string ?pos s)
let cast_kind_tag = Bi_io.variant_tag
let write_untagged_cast_kind = (
  fun ob x ->
    match x with
      | `Dependent -> Bi_outbuf.add_char4 ob 'D' '\240' 'y' '\223'
      | `BitCast -> Bi_outbuf.add_char4 ob '+' '\016' '\022' '\012'
      | `LValueBitCast -> Bi_outbuf.add_char4 ob 'c' 'q' 'e' '\''
      | `LValueToRValue -> Bi_outbuf.add_char4 ob 'w' 'I' '^' '\031'
      | `NoOp -> Bi_outbuf.add_char4 ob '3' '\227' '#' '\226'
      | `BaseToDerived -> Bi_outbuf.add_char4 ob '\001' '\184' '\181' '1'
      | `DerivedToBase -> Bi_outbuf.add_char4 ob 'o' '-' '\026' '\201'
      | `UncheckedDerivedToBase -> Bi_outbuf.add_char4 ob '\020' '\224' '\248' ';'
      | `Dynamic -> Bi_outbuf.add_char4 ob '\003' 'f' '\199' '_'
      | `ToUnion -> Bi_outbuf.add_char4 ob '@' '\188' '\217' 't'
      | `ArrayToPointerDecay -> Bi_outbuf.add_char4 ob '\r' 'C' '\022' '\177'
      | `FunctionToPointerDecay -> Bi_outbuf.add_char4 ob '!' '\004' '\144' '\176'
      | `NullToPointer -> Bi_outbuf.add_char4 ob 'l' '\236' '\000' '\219'
      | `NullToMemberPointer -> Bi_outbuf.add_char4 ob ';' 'W' '\144' '!'
      | `BaseToDerivedMemberPointer -> Bi_outbuf.add_char4 ob 'Q' '0' '\213' '\146'
      | `DerivedToBaseMemberPointer -> Bi_outbuf.add_char4 ob '\004' '\n' '\208' '\250'
      | `MemberPointerToBoolean -> Bi_outbuf.add_char4 ob '{' '\n' '\b' '\138'
      | `ReinterpretMemberPointer -> Bi_outbuf.add_char4 ob 'b' 'G' '3' 'I'
      | `UserDefinedConversion -> Bi_outbuf.add_char4 ob 'Z' '\204' '\029' 'T'
      | `ConstructorConversion -> Bi_outbuf.add_char4 ob '\025' '\004' '\240' '\144'
      | `IntegralToPointer -> Bi_outbuf.add_char4 ob ',' '\138' '3' 'V'
      | `PointerToIntegral -> Bi_outbuf.add_char4 ob '\004' '\142' '_' '\004'
      | `PointerToBoolean -> Bi_outbuf.add_char4 ob '=' '\001' '\158' '\016'
      | `ToVoid -> Bi_outbuf.add_char4 ob '8' '\161' '\162' '\143'
      | `VectorSplat -> Bi_outbuf.add_char4 ob 'W' 'j' '\151' '\255'
      | `IntegralCast -> Bi_outbuf.add_char4 ob '&' 'w' '\212' 'k'
      | `IntegralToBoolean -> Bi_outbuf.add_char4 ob 'Y' 'g' ']' 'A'
      | `IntegralToFloating -> Bi_outbuf.add_char4 ob '}' '\155' '\132' '\r'
      | `FloatingToIntegral -> Bi_outbuf.add_char4 ob '\r' '\166' 'x' '\141'
      | `FloatingToBoolean -> Bi_outbuf.add_char4 ob 'S' 'n' '\200' '\167'
      | `BooleanToSignedIntegral -> Bi_outbuf.add_char4 ob 'b' '\212' ':' '\235'
      | `FloatingCast -> Bi_outbuf.add_char4 ob '\021' '4' '"' '\197'
      | `CPointerToObjCPointerCast -> Bi_outbuf.add_char4 ob 'k' ')' '\233' '\187'
      | `BlockPointerToObjCPointerCast -> Bi_outbuf.add_char4 ob 'W' '{' '\188' '\165'
      | `AnyPointerToBlockPointerCast -> Bi_outbuf.add_char4 ob '8' '\233' '\197' '\027'
      | `ObjCObjectLValueCast -> Bi_outbuf.add_char4 ob '$' '$' '\153' '\015'
      | `FloatingRealToComplex -> Bi_outbuf.add_char4 ob 'a' '\172' '!' '\241'
      | `FloatingComplexToReal -> Bi_outbuf.add_char4 ob 'V' 'a' '\160' '\003'
      | `FloatingComplexToBoolean -> Bi_outbuf.add_char4 ob 'V' '\129' 'K' '#'
      | `FloatingComplexCast -> Bi_outbuf.add_char4 ob 'O' '\168' '\177' '\201'
      | `FloatingComplexToIntegralComplex -> Bi_outbuf.add_char4 ob '3' 'w' 'O' '\159'
      | `IntegralRealToComplex -> Bi_outbuf.add_char4 ob '=' '4' '\011' '\139'
      | `IntegralComplexToReal -> Bi_outbuf.add_char4 ob '1' '\233' '\137' '\157'
      | `IntegralComplexToBoolean -> Bi_outbuf.add_char4 ob '\017' '\219' '\221' '\201'
      | `IntegralComplexCast -> Bi_outbuf.add_char4 ob '4' 'c' ' ' '\227'
      | `IntegralComplexToFloatingComplex -> Bi_outbuf.add_char4 ob '\b' '#' '\158' '+'
      | `ARCProduceObject -> Bi_outbuf.add_char4 ob '\b' '\192' '\184' 'm'
      | `ARCConsumeObject -> Bi_outbuf.add_char4 ob '8' '3' ' ' '\t'
      | `ARCReclaimReturnedObject -> Bi_outbuf.add_char4 ob '`' '-' 'J' 'e'
      | `ARCExtendBlockObject -> Bi_outbuf.add_char4 ob ')' 'Q' '-' '\160'
      | `AtomicToNonAtomic -> Bi_outbuf.add_char4 ob '2' '\231' '\193' '\146'
      | `NonAtomicToAtomic -> Bi_outbuf.add_char4 ob '\001' '\219' '\230' '\158'
      | `CopyAndAutoreleaseBlockObject -> Bi_outbuf.add_char4 ob '-' '\196' '\020' '6'
      | `BuiltinFnToFnPtr -> Bi_outbuf.add_char4 ob ']' '\004' '\222' '\160'
      | `ZeroToOCLEvent -> Bi_outbuf.add_char4 ob '!' 'l' '\242' '%'
      | `ZeroToOCLQueue -> Bi_outbuf.add_char4 ob '\t' '\146' '\183' '\156'
      | `AddressSpaceConversion -> Bi_outbuf.add_char4 ob '\020' 'x' '\172' 'H'
      | `IntToOCLSampler -> Bi_outbuf.add_char4 ob '\b' '\241' '\255' '\218'
)
let write_cast_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_cast_kind ob x
let string_of_cast_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cast_kind ob x;
  Bi_outbuf.contents ob
let get_cast_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -990873121, false -> `Dependent
            | 722474508, false -> `BitCast
            | -479107801, false -> `LValueBitCast
            | -146186721, false -> `LValueToRValue
            | 870523874, false -> `NoOp
            | 28882225, false -> `BaseToDerived
            | -282256695, false -> `DerivedToBase
            | 350287931, false -> `UncheckedDerivedToBase
            | 57067359, false -> `Dynamic
            | -1061365388, false -> `ToUnion
            | 222500529, false -> `ArrayToPointerDecay
            | 553947312, false -> `FunctionToPointerDecay
            | -320077605, false -> `NullToPointer
            | 995594273, false -> `NullToMemberPointer
            | -785328750, false -> `BaseToDerivedMemberPointer
            | 67817722, false -> `DerivedToBaseMemberPointer
            | -83228534, false -> `MemberPointerToBoolean
            | -498650295, false -> `ReinterpretMemberPointer
            | -624157356, false -> `UserDefinedConversion
            | 419754128, false -> `ConstructorConversion
            | 747254614, false -> `IntegralToPointer
            | 76439300, false -> `PointerToIntegral
            | 1023516176, false -> `PointerToBoolean
            | 950117007, false -> `ToVoid
            | -680880129, false -> `VectorSplat
            | 645387371, false -> `IntegralCast
            | -647537343, false -> `IntegralToBoolean
            | -40139763, false -> `IntegralToFloating
            | 229013645, false -> `FloatingToIntegral
            | -747714393, false -> `FloatingToBoolean
            | -489407765, false -> `BooleanToSignedIntegral
            | 355738309, false -> `FloatingCast
            | -349574725, false -> `CPointerToObjCPointerCast
            | -679756635, false -> `BlockPointerToObjCPointerCast
            | 954844443, false -> `AnyPointerToBlockPointerCast
            | 606378255, false -> `ObjCObjectLValueCast
            | -508812815, false -> `FloatingRealToComplex
            | -698245117, false -> `FloatingComplexToReal
            | -696169693, false -> `FloatingComplexToBoolean
            | -811028023, false -> `FloatingComplexCast
            | 863457183, false -> `FloatingComplexToIntegralComplex
            | 1026821003, false -> `IntegralRealToComplex
            | 837388701, false -> `IntegralComplexToReal
            | 299621833, false -> `IntegralComplexToBoolean
            | 878911715, false -> `IntegralComplexCast
            | 136551979, false -> `IntegralComplexToFloatingComplex
            | 146847853, false -> `ARCProduceObject
            | 942874633, false -> `ARCConsumeObject
            | -533902747, false -> `ARCReclaimReturnedObject
            | 693185952, false -> `ARCExtendBlockObject
            | 854049170, false -> `AtomicToNonAtomic
            | 31188638, false -> `NonAtomicToAtomic
            | 767824950, false -> `CopyAndAutoreleaseBlockObject
            | -586883424, false -> `BuiltinFnToFnPtr
            | 560788005, false -> `ZeroToOCLEvent
            | 160610204, false -> `ZeroToOCLQueue
            | 343452744, false -> `AddressSpaceConversion
            | 150077402, false -> `IntToOCLSampler
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_cast_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -990873121, false -> `Dependent
        | 722474508, false -> `BitCast
        | -479107801, false -> `LValueBitCast
        | -146186721, false -> `LValueToRValue
        | 870523874, false -> `NoOp
        | 28882225, false -> `BaseToDerived
        | -282256695, false -> `DerivedToBase
        | 350287931, false -> `UncheckedDerivedToBase
        | 57067359, false -> `Dynamic
        | -1061365388, false -> `ToUnion
        | 222500529, false -> `ArrayToPointerDecay
        | 553947312, false -> `FunctionToPointerDecay
        | -320077605, false -> `NullToPointer
        | 995594273, false -> `NullToMemberPointer
        | -785328750, false -> `BaseToDerivedMemberPointer
        | 67817722, false -> `DerivedToBaseMemberPointer
        | -83228534, false -> `MemberPointerToBoolean
        | -498650295, false -> `ReinterpretMemberPointer
        | -624157356, false -> `UserDefinedConversion
        | 419754128, false -> `ConstructorConversion
        | 747254614, false -> `IntegralToPointer
        | 76439300, false -> `PointerToIntegral
        | 1023516176, false -> `PointerToBoolean
        | 950117007, false -> `ToVoid
        | -680880129, false -> `VectorSplat
        | 645387371, false -> `IntegralCast
        | -647537343, false -> `IntegralToBoolean
        | -40139763, false -> `IntegralToFloating
        | 229013645, false -> `FloatingToIntegral
        | -747714393, false -> `FloatingToBoolean
        | -489407765, false -> `BooleanToSignedIntegral
        | 355738309, false -> `FloatingCast
        | -349574725, false -> `CPointerToObjCPointerCast
        | -679756635, false -> `BlockPointerToObjCPointerCast
        | 954844443, false -> `AnyPointerToBlockPointerCast
        | 606378255, false -> `ObjCObjectLValueCast
        | -508812815, false -> `FloatingRealToComplex
        | -698245117, false -> `FloatingComplexToReal
        | -696169693, false -> `FloatingComplexToBoolean
        | -811028023, false -> `FloatingComplexCast
        | 863457183, false -> `FloatingComplexToIntegralComplex
        | 1026821003, false -> `IntegralRealToComplex
        | 837388701, false -> `IntegralComplexToReal
        | 299621833, false -> `IntegralComplexToBoolean
        | 878911715, false -> `IntegralComplexCast
        | 136551979, false -> `IntegralComplexToFloatingComplex
        | 146847853, false -> `ARCProduceObject
        | 942874633, false -> `ARCConsumeObject
        | -533902747, false -> `ARCReclaimReturnedObject
        | 693185952, false -> `ARCExtendBlockObject
        | 854049170, false -> `AtomicToNonAtomic
        | 31188638, false -> `NonAtomicToAtomic
        | 767824950, false -> `CopyAndAutoreleaseBlockObject
        | -586883424, false -> `BuiltinFnToFnPtr
        | 560788005, false -> `ZeroToOCLEvent
        | 160610204, false -> `ZeroToOCLQueue
        | 343452744, false -> `AddressSpaceConversion
        | 150077402, false -> `IntToOCLSampler
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let cast_kind_of_string ?pos s =
  read_cast_kind (Bi_inbuf.from_string ?pos s)
let cxx_base_specifier_tag = Bi_io.record_tag
let write_untagged_cxx_base_specifier : Bi_outbuf.t -> cxx_base_specifier -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_xbs_virtual = x.xbs_virtual in
    if x_xbs_virtual != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\200' '\255' 'r' 'K';
    (
      Bi_io.write_string
    ) ob x.xbs_name;
    if x_xbs_virtual != false then (
      Bi_outbuf.add_char4 ob '\151' '\017' '\158' '\011';
      (
        Bi_io.write_bool
      ) ob x_xbs_virtual;
    );
)
let write_cxx_base_specifier ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_base_specifier ob x
let string_of_cxx_base_specifier ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_base_specifier ob x;
  Bi_outbuf.contents ob
let get_cxx_base_specifier_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xbs_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_xbs_virtual = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -922783157 ->
              field_xbs_name := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 387030539 ->
              field_xbs_virtual := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "name" |];
        (
          {
            xbs_name = !field_xbs_name;
            xbs_virtual = !field_xbs_virtual;
          }
         : cxx_base_specifier)
)
let read_cxx_base_specifier = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xbs_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_xbs_virtual = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -922783157 ->
          field_xbs_name := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 387030539 ->
          field_xbs_virtual := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "name" |];
    (
      {
        xbs_name = !field_xbs_name;
        xbs_virtual = !field_xbs_virtual;
      }
     : cxx_base_specifier)
)
let cxx_base_specifier_of_string ?pos s =
  read_cxx_base_specifier (Bi_inbuf.from_string ?pos s)
let _26_tag = Bi_io.array_tag
let write_untagged__26 = (
  Ag_ob_run.write_untagged_list
    cxx_base_specifier_tag
    (
      write_untagged_cxx_base_specifier
    )
)
let write__26 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__26 ob x
let string_of__26 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__26 ob x;
  Bi_outbuf.contents ob
let get__26_reader = (
  Ag_ob_run.get_list_reader (
    get_cxx_base_specifier_reader
  )
)
let read__26 = (
  Ag_ob_run.read_list (
    get_cxx_base_specifier_reader
  )
)
let _26_of_string ?pos s =
  read__26 (Bi_inbuf.from_string ?pos s)
let cast_expr_info_tag = Bi_io.record_tag
let write_untagged_cast_expr_info : Bi_outbuf.t -> cast_expr_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\201' '\030' '\n' '\020';
    (
      write_cast_kind
    ) ob x.cei_cast_kind;
    Bi_outbuf.add_char4 ob '\250' '\026' ';' '\211';
    (
      write__26
    ) ob x.cei_base_path;
)
let write_cast_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cast_expr_info ob x
let string_of_cast_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cast_expr_info ob x;
  Bi_outbuf.contents ob
let get_cast_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_cei_cast_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_cei_base_path = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -920778220 ->
              field_cei_cast_kind := (
                (
                  read_cast_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -98944045 ->
              field_cei_base_path := (
                (
                  read__26
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "cast_kind"; "base_path" |];
        (
          {
            cei_cast_kind = !field_cei_cast_kind;
            cei_base_path = !field_cei_base_path;
          }
         : cast_expr_info)
)
let read_cast_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_cei_cast_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_cei_base_path = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -920778220 ->
          field_cei_cast_kind := (
            (
              read_cast_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -98944045 ->
          field_cei_base_path := (
            (
              read__26
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "cast_kind"; "base_path" |];
    (
      {
        cei_cast_kind = !field_cei_cast_kind;
        cei_base_path = !field_cei_base_path;
      }
     : cast_expr_info)
)
let cast_expr_info_of_string ?pos s =
  read_cast_expr_info (Bi_inbuf.from_string ?pos s)
let cxx_noexcept_expr_info_tag = Bi_io.record_tag
let write_untagged_cxx_noexcept_expr_info : Bi_outbuf.t -> cxx_noexcept_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_xnee_value = x.xnee_value in
    if x_xnee_value != false then incr len;
    Bi_vint.write_uvint ob !len;
    if x_xnee_value != false then (
      Bi_outbuf.add_char4 ob '\177' '\184' '\127' 'q';
      (
        Bi_io.write_bool
      ) ob x_xnee_value;
    );
)
let write_cxx_noexcept_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_noexcept_expr_info ob x
let string_of_cxx_noexcept_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_noexcept_expr_info ob x;
  Bi_outbuf.contents ob
let get_cxx_noexcept_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xnee_value = ref (false) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 834174833 ->
              field_xnee_value := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            xnee_value = !field_xnee_value;
          }
         : cxx_noexcept_expr_info)
)
let read_cxx_noexcept_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xnee_value = ref (false) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 834174833 ->
          field_xnee_value := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        xnee_value = !field_xnee_value;
      }
     : cxx_noexcept_expr_info)
)
let cxx_noexcept_expr_info_of_string ?pos s =
  read_cxx_noexcept_expr_info (Bi_inbuf.from_string ?pos s)
let decl_context_info_tag = Bi_io.record_tag
let write_untagged_decl_context_info : Bi_outbuf.t -> decl_context_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_dci_has_external_lexical_storage = x.dci_has_external_lexical_storage in
    if x_dci_has_external_lexical_storage != false then incr len;
    let x_dci_has_external_visible_storage = x.dci_has_external_visible_storage in
    if x_dci_has_external_visible_storage != false then incr len;
    Bi_vint.write_uvint ob !len;
    if x_dci_has_external_lexical_storage != false then (
      Bi_outbuf.add_char4 ob '\226' '\031' ' ' '\241';
      (
        Bi_io.write_bool
      ) ob x_dci_has_external_lexical_storage;
    );
    if x_dci_has_external_visible_storage != false then (
      Bi_outbuf.add_char4 ob '\223' '\161' '\020' '\191';
      (
        Bi_io.write_bool
      ) ob x_dci_has_external_visible_storage;
    );
)
let write_decl_context_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_decl_context_info ob x
let string_of_decl_context_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_decl_context_info ob x;
  Bi_outbuf.contents ob
let get_decl_context_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_dci_has_external_lexical_storage = ref (false) in
        let field_dci_has_external_visible_storage = ref (false) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -501276431 ->
              field_dci_has_external_lexical_storage := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -543091521 ->
              field_dci_has_external_visible_storage := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            dci_has_external_lexical_storage = !field_dci_has_external_lexical_storage;
            dci_has_external_visible_storage = !field_dci_has_external_visible_storage;
          }
         : decl_context_info)
)
let read_decl_context_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_dci_has_external_lexical_storage = ref (false) in
    let field_dci_has_external_visible_storage = ref (false) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -501276431 ->
          field_dci_has_external_lexical_storage := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -543091521 ->
          field_dci_has_external_visible_storage := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        dci_has_external_lexical_storage = !field_dci_has_external_lexical_storage;
        dci_has_external_visible_storage = !field_dci_has_external_visible_storage;
      }
     : decl_context_info)
)
let decl_context_info_of_string ?pos s =
  read_decl_context_info (Bi_inbuf.from_string ?pos s)
let decl_kind_tag = Bi_io.variant_tag
let write_untagged_decl_kind = (
  fun ob x ->
    match x with
      | `AccessSpec -> Bi_outbuf.add_char4 ob 'V' '\015' 'F' '\031'
      | `Block -> Bi_outbuf.add_char4 ob 'H' ')' '\229' '-'
      | `Captured -> Bi_outbuf.add_char4 ob '\025' '\246' 'a' '>'
      | `ClassScopeFunctionSpecialization -> Bi_outbuf.add_char4 ob ':' '9' 'p' '\191'
      | `Empty -> Bi_outbuf.add_char4 ob '\003' '\007' '\170' 'm'
      | `Export -> Bi_outbuf.add_char4 ob 'y' '\018' '\005' '\148'
      | `ExternCContext -> Bi_outbuf.add_char4 ob 'q' 'Q' 'e' 'l'
      | `FileScopeAsm -> Bi_outbuf.add_char4 ob 'o' '\213' ',' '\195'
      | `Friend -> Bi_outbuf.add_char4 ob 'f' ']' '\206' '~'
      | `FriendTemplate -> Bi_outbuf.add_char4 ob '&' '\167' ' ' '\216'
      | `Import -> Bi_outbuf.add_char4 ob '=' '\023' '\021' '\133'
      | `LinkageSpec -> Bi_outbuf.add_char4 ob '{' 'r' '\157' '\192'
      | `Named -> Bi_outbuf.add_char4 ob ')' '\177' '\255' '\153'
      | `Label -> Bi_outbuf.add_char4 ob '\002' '\220' '}' '\212'
      | `Namespace -> Bi_outbuf.add_char4 ob '\t' '\192' '\202' '{'
      | `NamespaceAlias -> Bi_outbuf.add_char4 ob '\023' '\199' '\025' '\021'
      | `ObjCCompatibleAlias -> Bi_outbuf.add_char4 ob 'S' '\194' '\198' 'p'
      | `ObjCContainer -> Bi_outbuf.add_char4 ob 'B' '\138' '\207' '\021'
      | `ObjCCategory -> Bi_outbuf.add_char4 ob 'z' 'Y' '\231' '\170'
      | `ObjCImpl -> Bi_outbuf.add_char4 ob '8' '\t' 'u' '\140'
      | `ObjCCategoryImpl -> Bi_outbuf.add_char4 ob '=' '\139' '\175' '\170'
      | `ObjCImplementation -> Bi_outbuf.add_char4 ob 'C' '|' 'W' '\222'
      | `ObjCInterface -> Bi_outbuf.add_char4 ob '<' '\241' '\139' '\141'
      | `ObjCProtocol -> Bi_outbuf.add_char4 ob 'M' 'Q' '\019' '\004'
      | `ObjCMethod -> Bi_outbuf.add_char4 ob 'f' 'U' '\240' '\141'
      | `ObjCProperty -> Bi_outbuf.add_char4 ob 'y' '&' '\005' '\001'
      | `Template -> Bi_outbuf.add_char4 ob '\005' '\249' '\164' 'Z'
      | `BuiltinTemplate -> Bi_outbuf.add_char4 ob '\'' '\212' '\137' '\221'
      | `RedeclarableTemplate -> Bi_outbuf.add_char4 ob 'v' '\028' '\228' '\226'
      | `ClassTemplate -> Bi_outbuf.add_char4 ob '|' 'I' 'd' 'r'
      | `FunctionTemplate -> Bi_outbuf.add_char4 ob '^' '\012' '\003' '\146'
      | `TypeAliasTemplate -> Bi_outbuf.add_char4 ob '\012' '\187' 'v' '\176'
      | `VarTemplate -> Bi_outbuf.add_char4 ob '\028' 'i' '\218' '!'
      | `TemplateTemplateParm -> Bi_outbuf.add_char4 ob '"' 'b' '\172' '\192'
      | `Type -> Bi_outbuf.add_char4 ob '7' '\226' '\030' '\218'
      | `Tag -> Bi_outbuf.add_char4 ob '\000' '@' '\018' ':'
      | `Enum -> Bi_outbuf.add_char4 ob '-' '\239' '\151' '!'
      | `Record -> Bi_outbuf.add_char4 ob '2' '\128' '\234' '\177'
      | `CXXRecord -> Bi_outbuf.add_char4 ob '\\' 'g' 'r' '\244'
      | `ClassTemplateSpecialization -> Bi_outbuf.add_char4 ob '\127' 'o' '\024' '\029'
      | `ClassTemplatePartialSpecialization -> Bi_outbuf.add_char4 ob '|' '(' '\145' '\154'
      | `TemplateTypeParm -> Bi_outbuf.add_char4 ob '\007' '\235' '2' '@'
      | `TypedefName -> Bi_outbuf.add_char4 ob '\021' '\216' 'o' '\022'
      | `ObjCTypeParam -> Bi_outbuf.add_char4 ob '\005' 'E' '5' 'G'
      | `TypeAlias -> Bi_outbuf.add_char4 ob '\b' '<' '\140' 'V'
      | `Typedef -> Bi_outbuf.add_char4 ob 'F' ')' '_' '+'
      | `UnresolvedUsingTypename -> Bi_outbuf.add_char4 ob '?' '\173' '\181' '8'
      | `Using -> Bi_outbuf.add_char4 ob '=' 'b' '\229' '$'
      | `UsingDirective -> Bi_outbuf.add_char4 ob '`' '$' '\158' '\139'
      | `UsingPack -> Bi_outbuf.add_char4 ob 'H' '\209' 'J' '\029'
      | `UsingShadow -> Bi_outbuf.add_char4 ob 'P' '\214' '\148' '$'
      | `ConstructorUsingShadow -> Bi_outbuf.add_char4 ob '\007' '0' '\169' '\138'
      | `Value -> Bi_outbuf.add_char4 ob 'D' '\229' '\239' 'Q'
      | `Binding -> Bi_outbuf.add_char4 ob 'L' '~' '\179' '%'
      | `Declarator -> Bi_outbuf.add_char4 ob '#' 'X' '\186' 'Q'
      | `Field -> Bi_outbuf.add_char4 ob '\019' '\193' '\004' '\154'
      | `ObjCAtDefsField -> Bi_outbuf.add_char4 ob '*' 'e' '*' '-'
      | `ObjCIvar -> Bi_outbuf.add_char4 ob '8' '\016' '<' '\202'
      | `Function -> Bi_outbuf.add_char4 ob 'n' '\004' 'g' '8'
      | `CXXDeductionGuide -> Bi_outbuf.add_char4 ob '^' 'P' '\154' '\186'
      | `CXXMethod -> Bi_outbuf.add_char4 ob 'g' '\213' '\243' 'D'
      | `CXXConstructor -> Bi_outbuf.add_char4 ob '\003' 'M' 'i' '\183'
      | `CXXConversion -> Bi_outbuf.add_char4 ob '\002' 'l' '<' '\249'
      | `CXXDestructor -> Bi_outbuf.add_char4 ob '2' 'f' 'E' '\028'
      | `MSProperty -> Bi_outbuf.add_char4 ob '@' '\149' '\029' '\219'
      | `NonTypeTemplateParm -> Bi_outbuf.add_char4 ob 't' 'm' '\226' '-'
      | `Var -> Bi_outbuf.add_char4 ob '\000' 'A' '\150' '\199'
      | `Decomposition -> Bi_outbuf.add_char4 ob 'I' '\185' '_' '\233'
      | `ImplicitParam -> Bi_outbuf.add_char4 ob 'F' '\219' '\169' '\b'
      | `OMPCapturedExpr -> Bi_outbuf.add_char4 ob '_' '\249' '\154' '\005'
      | `ParmVar -> Bi_outbuf.add_char4 ob '3' 'O' '\022' ';'
      | `VarTemplateSpecialization -> Bi_outbuf.add_char4 ob 'o' '\148' '\130' '\012'
      | `VarTemplatePartialSpecialization -> Bi_outbuf.add_char4 ob '!' '\138' '\211' '\139'
      | `EnumConstant -> Bi_outbuf.add_char4 ob 'J' 'L' '\157' '\165'
      | `IndirectField -> Bi_outbuf.add_char4 ob 'c' '\237' '\136' '\236'
      | `OMPDeclareReduction -> Bi_outbuf.add_char4 ob '\t' '\146' '\243' ';'
      | `UnresolvedUsingValue -> Bi_outbuf.add_char4 ob '\011' 'w' 'f' '^'
      | `OMPThreadPrivate -> Bi_outbuf.add_char4 ob '\018' '\254' 'B' '\135'
      | `ObjCPropertyImpl -> Bi_outbuf.add_char4 ob 'I' '\006' '\196' '\129'
      | `PragmaComment -> Bi_outbuf.add_char4 ob '\017' 'K' '|' '\227'
      | `PragmaDetectMismatch -> Bi_outbuf.add_char4 ob ':' 'g' '\231' '\205'
      | `StaticAssert -> Bi_outbuf.add_char4 ob '2' '\137' '\154' '4'
      | `TranslationUnit -> Bi_outbuf.add_char4 ob '\028' '\026' '\251' '\245'
)
let write_decl_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_decl_kind ob x
let string_of_decl_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_decl_kind ob x;
  Bi_outbuf.contents ob
let get_decl_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -703642081, false -> `AccessSpec
            | -936778451, false -> `Block
            | 435577150, false -> `Captured
            | 976842943, false -> `ClassScopeFunctionSpecialization
            | 50834029, false -> `Empty
            | -116259436, false -> `Export
            | -246323860, false -> `ExternCContext
            | -271242045, false -> `FileScopeAsm
            | -430059906, false -> `Friend
            | 648487128, false -> `FriendTemplate
            | 1024923013, false -> `Import
            | -76374592, false -> `LinkageSpec
            | 699531161, false -> `Named
            | 48004564, false -> `Label
            | 163629691, false -> `Namespace
            | 398924053, false -> `NamespaceAlias
            | -742209936, false -> `ObjCCompatibleAlias
            | -1031090411, false -> `ObjCContainer
            | -94771286, false -> `ObjCCategory
            | 940144012, false -> `ObjCImpl
            | 1032564650, false -> `ObjCCategoryImpl
            | -1015261218, false -> `ObjCImplementation
            | 1022462861, false -> `ObjCInterface
            | -850324732, false -> `ObjCProtocol
            | -430575475, false -> `ObjCMethod
            | -114948863, false -> `ObjCProperty
            | 100246618, false -> `Template
            | 668240349, false -> `BuiltinTemplate
            | -165878558, false -> `RedeclarableTemplate
            | -62299022, false -> `ClassTemplate
            | -569637998, false -> `FunctionTemplate
            | 213612208, false -> `TypeAliasTemplate
            | 476699169, false -> `VarTemplate
            | 576892096, false -> `TemplateTemplateParm
            | 937565914, false -> `Type
            | 4198970, false -> `Tag
            | 770676513, false -> `Enum
            | 847309489, false -> `Record
            | -597200140, false -> `CXXRecord
            | -9496547, false -> `ClassTemplateSpecialization
            | -64450150, false -> `ClassTemplatePartialSpecialization
            | 132854336, false -> `TemplateTypeParm
            | 366505750, false -> `TypedefName
            | 88421703, false -> `ObjCTypeParam
            | 138185814, false -> `TypeAlias
            | -970367189, false -> `Typedef
            | 1068348728, false -> `UnresolvedUsingTypename
            | 1029891364, false -> `Using
            | -534471029, false -> `UsingDirective
            | -925808099, false -> `UsingPack
            | -791243740, false -> `UsingShadow
            | 120629642, false -> `ConstructorUsingShadow
            | -991563951, false -> `Value
            | -864111835, false -> `Binding
            | 593017425, false -> `Declarator
            | 331416730, false -> `Field
            | 711273005, false -> `ObjCAtDefsField
            | 940588234, false -> `ObjCIvar
            | -301701320, false -> `Function
            | -565142854, false -> `CXXDeductionGuide
            | -405408956, false -> `CXXMethod
            | 55404983, false -> `CXXConstructor
            | 40647929, false -> `CXXConversion
            | 845563164, false -> `CXXDestructor
            | -1063969317, false -> `MSProperty
            | -194125267, false -> `NonTypeTemplateParm
            | 4298439, false -> `Var
            | -910598167, false -> `Decomposition
            | -958682872, false -> `ImplicitParam
            | -537290235, false -> `OMPCapturedExpr
            | 860821051, false -> `ParmVar
            | -275480052, false -> `VarTemplateSpecialization
            | 562746251, false -> `VarTemplatePartialSpecialization
            | -900948571, false -> `EnumConstant
            | -470972180, false -> `IndirectField
            | 160625467, false -> `OMPDeclareReduction
            | 192374366, false -> `UnresolvedUsingValue
            | 318653063, false -> `OMPThreadPrivate
            | -922303359, false -> `ObjCPropertyImpl
            | 290159843, false -> `PragmaComment
            | 979888077, false -> `PragmaDetectMismatch
            | 847878708, false -> `StaticAssert
            | 471530485, false -> `TranslationUnit
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_decl_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -703642081, false -> `AccessSpec
        | -936778451, false -> `Block
        | 435577150, false -> `Captured
        | 976842943, false -> `ClassScopeFunctionSpecialization
        | 50834029, false -> `Empty
        | -116259436, false -> `Export
        | -246323860, false -> `ExternCContext
        | -271242045, false -> `FileScopeAsm
        | -430059906, false -> `Friend
        | 648487128, false -> `FriendTemplate
        | 1024923013, false -> `Import
        | -76374592, false -> `LinkageSpec
        | 699531161, false -> `Named
        | 48004564, false -> `Label
        | 163629691, false -> `Namespace
        | 398924053, false -> `NamespaceAlias
        | -742209936, false -> `ObjCCompatibleAlias
        | -1031090411, false -> `ObjCContainer
        | -94771286, false -> `ObjCCategory
        | 940144012, false -> `ObjCImpl
        | 1032564650, false -> `ObjCCategoryImpl
        | -1015261218, false -> `ObjCImplementation
        | 1022462861, false -> `ObjCInterface
        | -850324732, false -> `ObjCProtocol
        | -430575475, false -> `ObjCMethod
        | -114948863, false -> `ObjCProperty
        | 100246618, false -> `Template
        | 668240349, false -> `BuiltinTemplate
        | -165878558, false -> `RedeclarableTemplate
        | -62299022, false -> `ClassTemplate
        | -569637998, false -> `FunctionTemplate
        | 213612208, false -> `TypeAliasTemplate
        | 476699169, false -> `VarTemplate
        | 576892096, false -> `TemplateTemplateParm
        | 937565914, false -> `Type
        | 4198970, false -> `Tag
        | 770676513, false -> `Enum
        | 847309489, false -> `Record
        | -597200140, false -> `CXXRecord
        | -9496547, false -> `ClassTemplateSpecialization
        | -64450150, false -> `ClassTemplatePartialSpecialization
        | 132854336, false -> `TemplateTypeParm
        | 366505750, false -> `TypedefName
        | 88421703, false -> `ObjCTypeParam
        | 138185814, false -> `TypeAlias
        | -970367189, false -> `Typedef
        | 1068348728, false -> `UnresolvedUsingTypename
        | 1029891364, false -> `Using
        | -534471029, false -> `UsingDirective
        | -925808099, false -> `UsingPack
        | -791243740, false -> `UsingShadow
        | 120629642, false -> `ConstructorUsingShadow
        | -991563951, false -> `Value
        | -864111835, false -> `Binding
        | 593017425, false -> `Declarator
        | 331416730, false -> `Field
        | 711273005, false -> `ObjCAtDefsField
        | 940588234, false -> `ObjCIvar
        | -301701320, false -> `Function
        | -565142854, false -> `CXXDeductionGuide
        | -405408956, false -> `CXXMethod
        | 55404983, false -> `CXXConstructor
        | 40647929, false -> `CXXConversion
        | 845563164, false -> `CXXDestructor
        | -1063969317, false -> `MSProperty
        | -194125267, false -> `NonTypeTemplateParm
        | 4298439, false -> `Var
        | -910598167, false -> `Decomposition
        | -958682872, false -> `ImplicitParam
        | -537290235, false -> `OMPCapturedExpr
        | 860821051, false -> `ParmVar
        | -275480052, false -> `VarTemplateSpecialization
        | 562746251, false -> `VarTemplatePartialSpecialization
        | -900948571, false -> `EnumConstant
        | -470972180, false -> `IndirectField
        | 160625467, false -> `OMPDeclareReduction
        | 192374366, false -> `UnresolvedUsingValue
        | 318653063, false -> `OMPThreadPrivate
        | -922303359, false -> `ObjCPropertyImpl
        | 290159843, false -> `PragmaComment
        | 979888077, false -> `PragmaDetectMismatch
        | 847878708, false -> `StaticAssert
        | 471530485, false -> `TranslationUnit
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let decl_kind_of_string ?pos s =
  read_decl_kind (Bi_inbuf.from_string ?pos s)
let declaration_name_kind_tag = Bi_io.variant_tag
let write_untagged_declaration_name_kind = (
  fun ob x ->
    match x with
      | `Identifier -> Bi_outbuf.add_char4 ob 'D' '\221' '\204' '\137'
      | `ObjCZeroArgSelector -> Bi_outbuf.add_char4 ob 'x' 'M' '\174' '!'
      | `ObjCOneArgSelector -> Bi_outbuf.add_char4 ob '\006' '\148' '\164' '{'
      | `ObjCMultiArgSelector -> Bi_outbuf.add_char4 ob 'c' '|' '\154' 'H'
      | `CXXConstructorName -> Bi_outbuf.add_char4 ob 'R' '\226' '\175' '\162'
      | `CXXDestructorName -> Bi_outbuf.add_char4 ob 'V' '}' '\161' '\135'
      | `CXXConversionFunctionName -> Bi_outbuf.add_char4 ob 'b' '\029' 'P' '\028'
      | `CXXOperatorName -> Bi_outbuf.add_char4 ob '\024' '\217' 'D' '\178'
      | `CXXLiteralOperatorName -> Bi_outbuf.add_char4 ob '[' '\136' '\253' '\219'
      | `CXXUsingDirective -> Bi_outbuf.add_char4 ob 'U' '\001' '\161' '\206'
      | `CXXDeductionGuideName -> Bi_outbuf.add_char4 ob 'H' '\006' '\030' '%'
)
let write_declaration_name_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_declaration_name_kind ob x
let string_of_declaration_name_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_declaration_name_kind ob x;
  Bi_outbuf.contents ob
let get_declaration_name_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -992097143, false -> `Identifier
            | -129126879, false -> `ObjCZeroArgSelector
            | 110404731, false -> `ObjCOneArgSelector
            | -478373304, false -> `ObjCMultiArgSelector
            | -756895838, false -> `CXXConstructorName
            | -696409721, false -> `CXXDestructorName
            | -501395428, false -> `CXXConversionFunctionName
            | 416892082, false -> `CXXOperatorName
            | -611779109, false -> `CXXLiteralOperatorName
            | -721313330, false -> `CXXUsingDirective
            | -939123163, false -> `CXXDeductionGuideName
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_declaration_name_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -992097143, false -> `Identifier
        | -129126879, false -> `ObjCZeroArgSelector
        | 110404731, false -> `ObjCOneArgSelector
        | -478373304, false -> `ObjCMultiArgSelector
        | -756895838, false -> `CXXConstructorName
        | -696409721, false -> `CXXDestructorName
        | -501395428, false -> `CXXConversionFunctionName
        | 416892082, false -> `CXXOperatorName
        | -611779109, false -> `CXXLiteralOperatorName
        | -721313330, false -> `CXXUsingDirective
        | -939123163, false -> `CXXDeductionGuideName
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let declaration_name_kind_of_string ?pos s =
  read_declaration_name_kind (Bi_inbuf.from_string ?pos s)
let declaration_name_tag = Bi_io.record_tag
let write_untagged_declaration_name : Bi_outbuf.t -> declaration_name -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_declaration_name_kind
    ) ob x.dn_kind;
    Bi_outbuf.add_char4 ob '\200' '\255' 'r' 'K';
    (
      Bi_io.write_string
    ) ob x.dn_name;
)
let write_declaration_name ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_declaration_name ob x
let string_of_declaration_name ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_declaration_name ob x;
  Bi_outbuf.contents ob
let get_declaration_name_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_dn_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_dn_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_dn_kind := (
                (
                  read_declaration_name_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -922783157 ->
              field_dn_name := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind"; "name" |];
        (
          {
            dn_kind = !field_dn_kind;
            dn_name = !field_dn_name;
          }
         : declaration_name)
)
let read_declaration_name = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_dn_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_dn_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_dn_kind := (
            (
              read_declaration_name_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -922783157 ->
          field_dn_name := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind"; "name" |];
    (
      {
        dn_kind = !field_dn_kind;
        dn_name = !field_dn_name;
      }
     : declaration_name)
)
let declaration_name_of_string ?pos s =
  read_declaration_name (Bi_inbuf.from_string ?pos s)
let enum_decl_scope_tag = Bi_io.variant_tag
let write_untagged_enum_decl_scope = (
  fun ob x ->
    match x with
      | `Class -> Bi_outbuf.add_char4 ob '[' '\133' '\232' '\024'
      | `Struct -> Bi_outbuf.add_char4 ob 'E' '\205' '\174' 'u'
)
let write_enum_decl_scope ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_enum_decl_scope ob x
let string_of_enum_decl_scope ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_enum_decl_scope ob x;
  Bi_outbuf.contents ob
let get_enum_decl_scope_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -611981288, false -> `Class
            | -976376203, false -> `Struct
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_enum_decl_scope = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -611981288, false -> `Class
        | -976376203, false -> `Struct
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let enum_decl_scope_of_string ?pos s =
  read_enum_decl_scope (Bi_inbuf.from_string ?pos s)
let _15_tag = Bi_io.num_variant_tag
let write_untagged__15 = (
  Ag_ob_run.write_untagged_option (
    write_enum_decl_scope
  )
)
let write__15 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__15 ob x
let string_of__15 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__15 ob x;
  Bi_outbuf.contents ob
let get__15_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_enum_decl_scope
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__15 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_enum_decl_scope
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _15_of_string ?pos s =
  read__15 (Bi_inbuf.from_string ?pos s)
let enum_decl_info_tag = Bi_io.record_tag
let write_untagged_enum_decl_info : Bi_outbuf.t -> enum_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_edi_scope = x.edi_scope in
    if x_edi_scope != None then incr len;
    let x_edi_is_module_private = x.edi_is_module_private in
    if x_edi_is_module_private != false then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_edi_scope with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\248' '\217' 'q' '\148';
      (
        write_enum_decl_scope
      ) ob x;
    );
    if x_edi_is_module_private != false then (
      Bi_outbuf.add_char4 ob '\204' '\133' '+' '%';
      (
        Bi_io.write_bool
      ) ob x_edi_is_module_private;
    );
)
let write_enum_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_enum_decl_info ob x
let string_of_enum_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_enum_decl_info ob x;
  Bi_outbuf.contents ob
let get_enum_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_edi_scope = ref (None) in
        let field_edi_is_module_private = ref (false) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -119967340 ->
              field_edi_scope := (
                Some (
                  (
                    read_enum_decl_scope
                  ) ib
                )
              );
            | -863687899 ->
              field_edi_is_module_private := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            edi_scope = !field_edi_scope;
            edi_is_module_private = !field_edi_is_module_private;
          }
         : enum_decl_info)
)
let read_enum_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_edi_scope = ref (None) in
    let field_edi_is_module_private = ref (false) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -119967340 ->
          field_edi_scope := (
            Some (
              (
                read_enum_decl_scope
              ) ib
            )
          );
        | -863687899 ->
          field_edi_is_module_private := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        edi_scope = !field_edi_scope;
        edi_is_module_private = !field_edi_is_module_private;
      }
     : enum_decl_info)
)
let enum_decl_info_of_string ?pos s =
  read_enum_decl_info (Bi_inbuf.from_string ?pos s)
let input_kind_tag = Bi_io.variant_tag
let write_untagged_input_kind = (
  fun ob x ->
    match x with
      | `IK_None -> Bi_outbuf.add_char4 ob '?' 'W' 'G' '\149'
      | `IK_Asm -> Bi_outbuf.add_char4 ob '\030' '\023' '\212' '\254'
      | `IK_C -> Bi_outbuf.add_char4 ob '0' 'y' '\207' 'f'
      | `IK_CXX -> Bi_outbuf.add_char4 ob '\030' '\025' 'A' '\230'
      | `IK_ObjC -> Bi_outbuf.add_char4 ob '?' '\246' '\157' 'I'
      | `IK_ObjCXX -> Bi_outbuf.add_char4 ob ' ' '\207' '\142' '\137'
      | `IK_OpenCL -> Bi_outbuf.add_char4 ob '-' '>' '+' '\016'
      | `IK_CUDA -> Bi_outbuf.add_char4 ob '7' '\254' '\015' 'l'
      | `IK_RenderScript -> Bi_outbuf.add_char4 ob 'e' '\191' '+' '\222'
      | `IK_LLVM_IR -> Bi_outbuf.add_char4 ob 'N' '\208' '\160' '\020'
)
let write_input_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_input_kind ob x
let string_of_input_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_input_kind ob x;
  Bi_outbuf.contents ob
let get_input_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 1062684565, false -> `IK_None
            | 504878334, false -> `IK_Asm
            | 813289318, false -> `IK_C
            | 504971750, false -> `IK_CXX
            | 1073126729, false -> `IK_ObjC
            | 550473353, false -> `IK_ObjCXX
            | 759048976, false -> `IK_OpenCL
            | 939396972, false -> `IK_CUDA
            | -440456226, false -> `IK_RenderScript
            | -825188332, false -> `IK_LLVM_IR
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_input_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 1062684565, false -> `IK_None
        | 504878334, false -> `IK_Asm
        | 813289318, false -> `IK_C
        | 504971750, false -> `IK_CXX
        | 1073126729, false -> `IK_ObjC
        | 550473353, false -> `IK_ObjCXX
        | 759048976, false -> `IK_OpenCL
        | 939396972, false -> `IK_CUDA
        | -440456226, false -> `IK_RenderScript
        | -825188332, false -> `IK_LLVM_IR
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let input_kind_of_string ?pos s =
  read_input_kind (Bi_inbuf.from_string ?pos s)
let integer_literal_info_tag = Bi_io.record_tag
let write_untagged_integer_literal_info : Bi_outbuf.t -> integer_literal_info -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_ili_is_signed = x.ili_is_signed in
    if x_ili_is_signed != false then incr len;
    Bi_vint.write_uvint ob !len;
    if x_ili_is_signed != false then (
      Bi_outbuf.add_char4 ob '\217' '\170' '\152' '\209';
      (
        Bi_io.write_bool
      ) ob x_ili_is_signed;
    );
    Bi_outbuf.add_char4 ob '\159' 'e' '\246' '\025';
    (
      Bi_io.write_svint
    ) ob x.ili_bitwidth;
    Bi_outbuf.add_char4 ob '\177' '\184' '\127' 'q';
    (
      Bi_io.write_string
    ) ob x.ili_value;
)
let write_integer_literal_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_integer_literal_info ob x
let string_of_integer_literal_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_integer_literal_info ob x;
  Bi_outbuf.contents ob
let get_integer_literal_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ili_is_signed = ref (false) in
        let field_ili_bitwidth = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ili_value = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -643131183 ->
              field_ili_is_signed := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 526775833 ->
              field_ili_bitwidth := (
                (
                  Ag_ob_run.read_int
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 834174833 ->
              field_ili_value := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "bitwidth"; "value" |];
        (
          {
            ili_is_signed = !field_ili_is_signed;
            ili_bitwidth = !field_ili_bitwidth;
            ili_value = !field_ili_value;
          }
         : integer_literal_info)
)
let read_integer_literal_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ili_is_signed = ref (false) in
    let field_ili_bitwidth = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ili_value = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -643131183 ->
          field_ili_is_signed := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 526775833 ->
          field_ili_bitwidth := (
            (
              Ag_ob_run.read_int
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 834174833 ->
          field_ili_value := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "bitwidth"; "value" |];
    (
      {
        ili_is_signed = !field_ili_is_signed;
        ili_bitwidth = !field_ili_bitwidth;
        ili_value = !field_ili_value;
      }
     : integer_literal_info)
)
let integer_literal_info_of_string ?pos s =
  read_integer_literal_info (Bi_inbuf.from_string ?pos s)
let lambda_capture_kind_tag = Bi_io.variant_tag
let write_untagged_lambda_capture_kind = (
  fun ob x ->
    match x with
      | `LCK_This -> Bi_outbuf.add_char4 ob 'D' '\194' 'S' '\233'
      | `LCK_ByCopy -> Bi_outbuf.add_char4 ob '7' '0' '{' 'w'
      | `LCK_ByRef -> Bi_outbuf.add_char4 ob '\019' ';' '\199' '\209'
      | `LCK_VLAType -> Bi_outbuf.add_char4 ob '\028' ':' 'x' '\026'
      | `LCK_StarThis -> Bi_outbuf.add_char4 ob 'c' '\167' '\214' '['
)
let write_lambda_capture_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_lambda_capture_kind ob x
let string_of_lambda_capture_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_lambda_capture_kind ob x;
  Bi_outbuf.contents ob
let get_lambda_capture_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -993897495, false -> `LCK_This
            | 925924215, false -> `LCK_ByCopy
            | 322684881, false -> `LCK_ByRef
            | 473593882, false -> `LCK_VLAType
            | -475539877, false -> `LCK_StarThis
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_lambda_capture_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -993897495, false -> `LCK_This
        | 925924215, false -> `LCK_ByCopy
        | 322684881, false -> `LCK_ByRef
        | 473593882, false -> `LCK_VLAType
        | -475539877, false -> `LCK_StarThis
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let lambda_capture_kind_of_string ?pos s =
  read_lambda_capture_kind (Bi_inbuf.from_string ?pos s)
let named_decl_info_tag = Bi_io.record_tag
let write_untagged_named_decl_info : Bi_outbuf.t -> named_decl_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\200' '\255' 'r' 'K';
    (
      Bi_io.write_string
    ) ob x.ni_name;
    Bi_outbuf.add_char4 ob '\172' '\219' '\006' '\251';
    (
      write__3
    ) ob x.ni_qual_name;
)
let write_named_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_named_decl_info ob x
let string_of_named_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_named_decl_info ob x;
  Bi_outbuf.contents ob
let get_named_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ni_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ni_qual_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -922783157 ->
              field_ni_name := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 752551675 ->
              field_ni_qual_name := (
                (
                  read__3
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "name"; "qual_name" |];
        (
          {
            ni_name = !field_ni_name;
            ni_qual_name = !field_ni_qual_name;
          }
         : named_decl_info)
)
let read_named_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ni_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ni_qual_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -922783157 ->
          field_ni_name := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 752551675 ->
          field_ni_qual_name := (
            (
              read__3
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "name"; "qual_name" |];
    (
      {
        ni_name = !field_ni_name;
        ni_qual_name = !field_ni_qual_name;
      }
     : named_decl_info)
)
let named_decl_info_of_string ?pos s =
  read_named_decl_info (Bi_inbuf.from_string ?pos s)
let _4_tag = Bi_io.num_variant_tag
let write_untagged__4 = (
  Ag_ob_run.write_untagged_option (
    write_named_decl_info
  )
)
let write__4 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__4 ob x
let string_of__4 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__4 ob x;
  Bi_outbuf.contents ob
let get__4_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_named_decl_info
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__4 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_named_decl_info
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _4_of_string ?pos s =
  read__4 (Bi_inbuf.from_string ?pos s)
let obj_c_access_control_tag = Bi_io.variant_tag
let write_untagged_obj_c_access_control = (
  fun ob x ->
    match x with
      | `None -> Bi_outbuf.add_char4 ob '3' '\227' '>' '\216'
      | `Private -> Bi_outbuf.add_char4 ob 'V' '\192' 'T' '\227'
      | `Protected -> Bi_outbuf.add_char4 ob '6' ']' '\015' '\014'
      | `Public -> Bi_outbuf.add_char4 ob '\027' '\135' '\244' '\201'
      | `Package -> Bi_outbuf.add_char4 ob '\015' '\002' 'S' 'f'
)
let write_obj_c_access_control ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_obj_c_access_control ob x
let string_of_obj_c_access_control ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_access_control ob x;
  Bi_outbuf.contents ob
let get_obj_c_access_control_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 870530776, false -> `None
            | -692038429, false -> `Private
            | 912068366, false -> `Protected
            | 461894857, false -> `Public
            | 251810662, false -> `Package
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_obj_c_access_control = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 870530776, false -> `None
        | -692038429, false -> `Private
        | 912068366, false -> `Protected
        | 461894857, false -> `Public
        | 251810662, false -> `Package
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let obj_c_access_control_of_string ?pos s =
  read_obj_c_access_control (Bi_inbuf.from_string ?pos s)
let obj_c_availability_check_expr_info_tag = Bi_io.record_tag
let write_untagged_obj_c_availability_check_expr_info : Bi_outbuf.t -> obj_c_availability_check_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_oacei_version = x.oacei_version in
    if x_oacei_version != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_oacei_version with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\252' '\241' '\231' '\024';
      (
        Bi_io.write_string
      ) ob x;
    );
)
let write_obj_c_availability_check_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_availability_check_expr_info ob x
let string_of_obj_c_availability_check_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_availability_check_expr_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_availability_check_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_oacei_version = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -51255528 ->
              field_oacei_version := (
                Some (
                  (
                    Ag_ob_run.read_string
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            oacei_version = !field_oacei_version;
          }
         : obj_c_availability_check_expr_info)
)
let read_obj_c_availability_check_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_oacei_version = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -51255528 ->
          field_oacei_version := (
            Some (
              (
                Ag_ob_run.read_string
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        oacei_version = !field_oacei_version;
      }
     : obj_c_availability_check_expr_info)
)
let obj_c_availability_check_expr_info_of_string ?pos s =
  read_obj_c_availability_check_expr_info (Bi_inbuf.from_string ?pos s)
let obj_c_ivar_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_ivar_decl_info : Bi_outbuf.t -> obj_c_ivar_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ovdi_is_synthesize = x.ovdi_is_synthesize in
    if x_ovdi_is_synthesize != false then incr len;
    let x_ovdi_access_control = x.ovdi_access_control in
    if x_ovdi_access_control != `None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_ovdi_is_synthesize != false then (
      Bi_outbuf.add_char4 ob '\129' 'Z' '\151' '\031';
      (
        Bi_io.write_bool
      ) ob x_ovdi_is_synthesize;
    );
    if x_ovdi_access_control != `None then (
      Bi_outbuf.add_char4 ob '\249' '\004' '\158' '\130';
      (
        write_obj_c_access_control
      ) ob x_ovdi_access_control;
    );
)
let write_obj_c_ivar_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_ivar_decl_info ob x
let string_of_obj_c_ivar_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_ivar_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_ivar_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ovdi_is_synthesize = ref (false) in
        let field_ovdi_access_control = ref (`None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 22714143 ->
              field_ovdi_is_synthesize := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -117137790 ->
              field_ovdi_access_control := (
                (
                  read_obj_c_access_control
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ovdi_is_synthesize = !field_ovdi_is_synthesize;
            ovdi_access_control = !field_ovdi_access_control;
          }
         : obj_c_ivar_decl_info)
)
let read_obj_c_ivar_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ovdi_is_synthesize = ref (false) in
    let field_ovdi_access_control = ref (`None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 22714143 ->
          field_ovdi_is_synthesize := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -117137790 ->
          field_ovdi_access_control := (
            (
              read_obj_c_access_control
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ovdi_is_synthesize = !field_ovdi_is_synthesize;
        ovdi_access_control = !field_ovdi_access_control;
      }
     : obj_c_ivar_decl_info)
)
let obj_c_ivar_decl_info_of_string ?pos s =
  read_obj_c_ivar_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_property_control_tag = Bi_io.variant_tag
let write_untagged_obj_c_property_control = (
  fun ob x ->
    match x with
      | `None -> Bi_outbuf.add_char4 ob '3' '\227' '>' '\216'
      | `Required -> Bi_outbuf.add_char4 ob '\012' '\020' 'M' '\127'
      | `Optional -> Bi_outbuf.add_char4 ob 'x' ' ' 'k' '\192'
)
let write_obj_c_property_control ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_obj_c_property_control ob x
let string_of_obj_c_property_control ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_property_control ob x;
  Bi_outbuf.contents ob
let get_obj_c_property_control_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 870530776, false -> `None
            | 202657151, false -> `Required
            | -132092992, false -> `Optional
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_obj_c_property_control = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 870530776, false -> `None
        | 202657151, false -> `Required
        | -132092992, false -> `Optional
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let obj_c_property_control_of_string ?pos s =
  read_obj_c_property_control (Bi_inbuf.from_string ?pos s)
let obj_c_subscript_kind_tag = Bi_io.variant_tag
let write_untagged_obj_c_subscript_kind = (
  fun ob x ->
    match x with
      | `ArraySubscript -> Bi_outbuf.add_char4 ob '7' ']' '"' '\210'
      | `DictionarySubscript -> Bi_outbuf.add_char4 ob '0' 'V' '\184' '\245'
)
let write_obj_c_subscript_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_obj_c_subscript_kind ob x
let string_of_obj_c_subscript_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_subscript_kind ob x;
  Bi_outbuf.contents ob
let get_obj_c_subscript_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 928850642, false -> `ArraySubscript
            | 810989813, false -> `DictionarySubscript
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_obj_c_subscript_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 928850642, false -> `ArraySubscript
        | 810989813, false -> `DictionarySubscript
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let obj_c_subscript_kind_of_string ?pos s =
  read_obj_c_subscript_kind (Bi_inbuf.from_string ?pos s)
let objc_lifetime_attr_tag = Bi_io.variant_tag
let write_untagged_objc_lifetime_attr = (
  fun ob x ->
    match x with
      | `OCL_None -> Bi_outbuf.add_char4 ob 'R' '\195' '\018' '\255'
      | `OCL_ExplicitNone -> Bi_outbuf.add_char4 ob 'g' '7' '\139' '\019'
      | `OCL_Strong -> Bi_outbuf.add_char4 ob ';' 'c' '\150' '^'
      | `OCL_Weak -> Bi_outbuf.add_char4 ob 'X' '\174' '\\' '\191'
      | `OCL_Autoreleasing -> Bi_outbuf.add_char4 ob '\031' '\000' '\168' 'N'
)
let write_objc_lifetime_attr ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_objc_lifetime_attr ob x
let string_of_objc_lifetime_attr ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_objc_lifetime_attr ob x;
  Bi_outbuf.contents ob
let get_objc_lifetime_attr_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -758967553, false -> `OCL_None
            | -415790317, false -> `OCL_ExplicitNone
            | 996382302, false -> `OCL_Strong
            | -659661633, false -> `OCL_Weak
            | 520136782, false -> `OCL_Autoreleasing
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_objc_lifetime_attr = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -758967553, false -> `OCL_None
        | -415790317, false -> `OCL_ExplicitNone
        | 996382302, false -> `OCL_Strong
        | -659661633, false -> `OCL_Weak
        | 520136782, false -> `OCL_Autoreleasing
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let objc_lifetime_attr_of_string ?pos s =
  read_objc_lifetime_attr (Bi_inbuf.from_string ?pos s)
let object_kind_tag = Bi_io.variant_tag
let write_untagged_object_kind = (
  fun ob x ->
    match x with
      | `Ordinary -> Bi_outbuf.add_char4 ob 'd' '\226' '\142' 'B'
      | `BitField -> Bi_outbuf.add_char4 ob 'B' 'v' '\000' '\205'
      | `ObjCProperty -> Bi_outbuf.add_char4 ob 'y' '&' '\005' '\001'
      | `ObjCSubscript -> Bi_outbuf.add_char4 ob '\028' '/' 'q' '_'
      | `VectorComponent -> Bi_outbuf.add_char4 ob 'Q' '\216' 'w' 'Z'
)
let write_object_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_object_kind ob x
let string_of_object_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_object_kind ob x;
  Bi_outbuf.contents ob
let get_object_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -454914494, false -> `Ordinary
            | -1032453939, false -> `BitField
            | -114948863, false -> `ObjCProperty
            | 472871263, false -> `ObjCSubscript
            | -774342822, false -> `VectorComponent
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_object_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -454914494, false -> `Ordinary
        | -1032453939, false -> `BitField
        | -114948863, false -> `ObjCProperty
        | 472871263, false -> `ObjCSubscript
        | -774342822, false -> `VectorComponent
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let object_kind_of_string ?pos s =
  read_object_kind (Bi_inbuf.from_string ?pos s)
let pointer_tag = Bi_io.svint_tag
let write_untagged_pointer = (
  Bi_io.write_untagged_svint
)
let write_pointer ob x =
  Bi_io.write_tag ob Bi_io.svint_tag;
  write_untagged_pointer ob x
let string_of_pointer ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_pointer ob x;
  Bi_outbuf.contents ob
let get_pointer_reader = (
  Ag_ob_run.get_int_reader
)
let read_pointer = (
  Ag_ob_run.read_int
)
let pointer_of_string ?pos s =
  read_pointer (Bi_inbuf.from_string ?pos s)
let _33_tag = Bi_io.array_tag
let write_untagged__33 = (
  Ag_ob_run.write_untagged_list
    pointer_tag
    (
      write_untagged_pointer
    )
)
let write__33 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__33 ob x
let string_of__33 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__33 ob x;
  Bi_outbuf.contents ob
let get__33_reader = (
  Ag_ob_run.get_list_reader (
    get_pointer_reader
  )
)
let read__33 = (
  Ag_ob_run.read_list (
    get_pointer_reader
  )
)
let _33_of_string ?pos s =
  read__33 (Bi_inbuf.from_string ?pos s)
let _6_tag = Bi_io.num_variant_tag
let write_untagged__6 = (
  Ag_ob_run.write_untagged_option (
    write_pointer
  )
)
let write__6 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__6 ob x
let string_of__6 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__6 ob x;
  Bi_outbuf.contents ob
let get__6_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_pointer
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__6 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_pointer
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _6_of_string ?pos s =
  read__6 (Bi_inbuf.from_string ?pos s)
let addr_label_expr_info_tag = Bi_io.record_tag
let write_untagged_addr_label_expr_info : Bi_outbuf.t -> addr_label_expr_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\239' '\175' '\r' '\244';
    (
      Bi_io.write_string
    ) ob x.alei_label;
    Bi_outbuf.add_char4 ob '\209' '!' '\192' '\189';
    (
      write_pointer
    ) ob x.alei_pointer;
)
let write_addr_label_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_addr_label_expr_info ob x
let string_of_addr_label_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_addr_label_expr_info ob x;
  Bi_outbuf.contents ob
let get_addr_label_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_alei_label = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_alei_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -273740300 ->
              field_alei_label := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -786317123 ->
              field_alei_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "label"; "pointer" |];
        (
          {
            alei_label = !field_alei_label;
            alei_pointer = !field_alei_pointer;
          }
         : addr_label_expr_info)
)
let read_addr_label_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_alei_label = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_alei_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -273740300 ->
          field_alei_label := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -786317123 ->
          field_alei_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "label"; "pointer" |];
    (
      {
        alei_label = !field_alei_label;
        alei_pointer = !field_alei_pointer;
      }
     : addr_label_expr_info)
)
let addr_label_expr_info_of_string ?pos s =
  read_addr_label_expr_info (Bi_inbuf.from_string ?pos s)
let cxx_new_expr_info_tag = Bi_io.record_tag
let write_untagged_cxx_new_expr_info : Bi_outbuf.t -> cxx_new_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_xnei_is_array = x.xnei_is_array in
    if x_xnei_is_array != false then incr len;
    let x_xnei_array_size_expr = x.xnei_array_size_expr in
    if x_xnei_array_size_expr != None then incr len;
    let x_xnei_initializer_expr = x.xnei_initializer_expr in
    if x_xnei_initializer_expr != None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_xnei_is_array != false then (
      Bi_outbuf.add_char4 ob '\197' 'K' '\220' 'D';
      (
        Bi_io.write_bool
      ) ob x_xnei_is_array;
    );
    (match x_xnei_array_size_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\196' '"' '_' 'M';
      (
        write_pointer
      ) ob x;
    );
    (match x_xnei_initializer_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\208' 'I' 'H' '\178';
      (
        write_pointer
      ) ob x;
    );
)
let write_cxx_new_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_new_expr_info ob x
let string_of_cxx_new_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_new_expr_info ob x;
  Bi_outbuf.contents ob
let get_cxx_new_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xnei_is_array = ref (false) in
        let field_xnei_array_size_expr = ref (None) in
        let field_xnei_initializer_expr = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -984884156 ->
              field_xnei_is_array := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -1004380339 ->
              field_xnei_array_size_expr := (
                Some (
                  (
                    read_pointer
                  ) ib
                )
              );
            | -800503630 ->
              field_xnei_initializer_expr := (
                Some (
                  (
                    read_pointer
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            xnei_is_array = !field_xnei_is_array;
            xnei_array_size_expr = !field_xnei_array_size_expr;
            xnei_initializer_expr = !field_xnei_initializer_expr;
          }
         : cxx_new_expr_info)
)
let read_cxx_new_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xnei_is_array = ref (false) in
    let field_xnei_array_size_expr = ref (None) in
    let field_xnei_initializer_expr = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -984884156 ->
          field_xnei_is_array := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -1004380339 ->
          field_xnei_array_size_expr := (
            Some (
              (
                read_pointer
              ) ib
            )
          );
        | -800503630 ->
          field_xnei_initializer_expr := (
            Some (
              (
                read_pointer
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        xnei_is_array = !field_xnei_is_array;
        xnei_array_size_expr = !field_xnei_array_size_expr;
        xnei_initializer_expr = !field_xnei_initializer_expr;
      }
     : cxx_new_expr_info)
)
let cxx_new_expr_info_of_string ?pos s =
  read_cxx_new_expr_info (Bi_inbuf.from_string ?pos s)
let cxx_temporary_tag = Bi_io.svint_tag
let write_untagged_cxx_temporary = (
  write_untagged_pointer
)
let write_cxx_temporary ob x =
  Bi_io.write_tag ob Bi_io.svint_tag;
  write_untagged_cxx_temporary ob x
let string_of_cxx_temporary ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_temporary ob x;
  Bi_outbuf.contents ob
let get_cxx_temporary_reader = (
  get_pointer_reader
)
let read_cxx_temporary = (
  read_pointer
)
let cxx_temporary_of_string ?pos s =
  read_cxx_temporary (Bi_inbuf.from_string ?pos s)
let cxx_bind_temporary_expr_info_tag = Bi_io.record_tag
let write_untagged_cxx_bind_temporary_expr_info : Bi_outbuf.t -> cxx_bind_temporary_expr_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 1;
    Bi_outbuf.add_char4 ob '\231' '\021' '\247' '5';
    (
      write_cxx_temporary
    ) ob x.xbtei_cxx_temporary;
)
let write_cxx_bind_temporary_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_bind_temporary_expr_info ob x
let string_of_cxx_bind_temporary_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_bind_temporary_expr_info ob x;
  Bi_outbuf.contents ob
let get_cxx_bind_temporary_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xbtei_cxx_temporary = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -417990859 ->
              field_xbtei_cxx_temporary := (
                (
                  read_cxx_temporary
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "cxx_temporary" |];
        (
          {
            xbtei_cxx_temporary = !field_xbtei_cxx_temporary;
          }
         : cxx_bind_temporary_expr_info)
)
let read_cxx_bind_temporary_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xbtei_cxx_temporary = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -417990859 ->
          field_xbtei_cxx_temporary := (
            (
              read_cxx_temporary
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "cxx_temporary" |];
    (
      {
        xbtei_cxx_temporary = !field_xbtei_cxx_temporary;
      }
     : cxx_bind_temporary_expr_info)
)
let cxx_bind_temporary_expr_info_of_string ?pos s =
  read_cxx_bind_temporary_expr_info (Bi_inbuf.from_string ?pos s)
let goto_stmt_info_tag = Bi_io.record_tag
let write_untagged_goto_stmt_info : Bi_outbuf.t -> goto_stmt_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\239' '\175' '\r' '\244';
    (
      Bi_io.write_string
    ) ob x.gsi_label;
    Bi_outbuf.add_char4 ob '\209' '!' '\192' '\189';
    (
      write_pointer
    ) ob x.gsi_pointer;
)
let write_goto_stmt_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_goto_stmt_info ob x
let string_of_goto_stmt_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_goto_stmt_info ob x;
  Bi_outbuf.contents ob
let get_goto_stmt_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_gsi_label = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_gsi_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -273740300 ->
              field_gsi_label := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -786317123 ->
              field_gsi_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "label"; "pointer" |];
        (
          {
            gsi_label = !field_gsi_label;
            gsi_pointer = !field_gsi_pointer;
          }
         : goto_stmt_info)
)
let read_goto_stmt_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_gsi_label = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_gsi_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -273740300 ->
          field_gsi_label := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -786317123 ->
          field_gsi_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "label"; "pointer" |];
    (
      {
        gsi_label = !field_gsi_label;
        gsi_pointer = !field_gsi_pointer;
      }
     : goto_stmt_info)
)
let goto_stmt_info_of_string ?pos s =
  read_goto_stmt_info (Bi_inbuf.from_string ?pos s)
let predefined_expr_type_tag = Bi_io.variant_tag
let write_untagged_predefined_expr_type = (
  fun ob x ->
    match x with
      | `Func -> Bi_outbuf.add_char4 ob '.' '\158' '\023' 'd'
      | `Function -> Bi_outbuf.add_char4 ob 'n' '\004' 'g' '8'
      | `LFunction -> Bi_outbuf.add_char4 ob '\r' '\175' '\147' '\132'
      | `FuncDName -> Bi_outbuf.add_char4 ob ' ' '\182' '\174' '\203'
      | `FuncSig -> Bi_outbuf.add_char4 ob '>' 'b' '\246' '\r'
      | `PrettyFunction -> Bi_outbuf.add_char4 ob '\127' '\014' '$' '\014'
      | `PrettyFunctionNoVirtual -> Bi_outbuf.add_char4 ob '"' '\240' ')' '\220'
)
let write_predefined_expr_type ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_predefined_expr_type ob x
let string_of_predefined_expr_type ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_predefined_expr_type ob x;
  Bi_outbuf.contents ob
let get_predefined_expr_type_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 782112612, false -> `Func
            | -301701320, false -> `Function
            | 229610372, false -> `LFunction
            | 548843211, false -> `FuncDName
            | 1046672909, false -> `FuncSig
            | -15850482, false -> `PrettyFunction
            | 586164700, false -> `PrettyFunctionNoVirtual
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_predefined_expr_type = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 782112612, false -> `Func
        | -301701320, false -> `Function
        | 229610372, false -> `LFunction
        | 548843211, false -> `FuncDName
        | 1046672909, false -> `FuncSig
        | -15850482, false -> `PrettyFunction
        | 586164700, false -> `PrettyFunctionNoVirtual
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let predefined_expr_type_of_string ?pos s =
  read_predefined_expr_type (Bi_inbuf.from_string ?pos s)
let property_attribute_tag = Bi_io.variant_tag
let write_untagged_property_attribute = (
  fun ob x ->
    match x with
      | `Readonly -> Bi_outbuf.add_char4 ob '`' '\130' '\239' '\226'
      | `Assign -> Bi_outbuf.add_char4 ob '\000' '\154' '\186' 'O'
      | `Readwrite -> Bi_outbuf.add_char4 ob '/' '\230' ')' '\169'
      | `Retain -> Bi_outbuf.add_char4 ob '=' '\178' '\227' '\229'
      | `Copy -> Bi_outbuf.add_char4 ob ',' '\157' '\231' '\213'
      | `Nonatomic -> Bi_outbuf.add_char4 ob 'M' 'q' '\139' '\152'
      | `Atomic -> Bi_outbuf.add_char4 ob '\017' '_' '\127' '\011'
      | `Weak -> Bi_outbuf.add_char4 ob '9' '\206' '\136' '\152'
      | `Strong -> Bi_outbuf.add_char4 ob 'E' '\201' '*' 'w'
      | `Unsafe_unretained -> Bi_outbuf.add_char4 ob '7' 'O' '\185' 'V'
      | `ExplicitGetter -> Bi_outbuf.add_char4 ob 'c' '\173' '9' '?'
      | `ExplicitSetter -> Bi_outbuf.add_char4 ob '/' '\245' '\141' '\179'
)
let write_property_attribute ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_property_attribute ob x
let string_of_property_attribute ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_property_attribute ob x;
  Bi_outbuf.contents ob
let get_property_attribute_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -528289822, false -> `Readonly
            | 10140239, false -> `Assign
            | 803613097, false -> `Readwrite
            | 1035133925, false -> `Retain
            | 748546005, false -> `Copy
            | -848196712, false -> `Nonatomic
            | 291471115, false -> `Atomic
            | 969836696, false -> `Weak
            | -976672137, false -> `Strong
            | 927971670, false -> `Unsafe_unretained
            | -475186881, false -> `ExplicitGetter
            | 804621747, false -> `ExplicitSetter
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_property_attribute = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -528289822, false -> `Readonly
        | 10140239, false -> `Assign
        | 803613097, false -> `Readwrite
        | 1035133925, false -> `Retain
        | 748546005, false -> `Copy
        | -848196712, false -> `Nonatomic
        | 291471115, false -> `Atomic
        | 969836696, false -> `Weak
        | -976672137, false -> `Strong
        | 927971670, false -> `Unsafe_unretained
        | -475186881, false -> `ExplicitGetter
        | 804621747, false -> `ExplicitSetter
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let property_attribute_of_string ?pos s =
  read_property_attribute (Bi_inbuf.from_string ?pos s)
let _24_tag = Bi_io.array_tag
let write_untagged__24 = (
  Ag_ob_run.write_untagged_list
    property_attribute_tag
    (
      write_untagged_property_attribute
    )
)
let write__24 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__24 ob x
let string_of__24 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__24 ob x;
  Bi_outbuf.contents ob
let get__24_reader = (
  Ag_ob_run.get_list_reader (
    get_property_attribute_reader
  )
)
let read__24 = (
  Ag_ob_run.read_list (
    get_property_attribute_reader
  )
)
let _24_of_string ?pos s =
  read__24 (Bi_inbuf.from_string ?pos s)
let property_implementation_tag = Bi_io.variant_tag
let write_untagged_property_implementation = (
  fun ob x ->
    match x with
      | `Synthesize -> Bi_outbuf.add_char4 ob '\000' '\144' '\021' '\202'
      | `Dynamic -> Bi_outbuf.add_char4 ob '\003' 'f' '\199' '_'
)
let write_property_implementation ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_property_implementation ob x
let string_of_property_implementation ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_property_implementation ob x;
  Bi_outbuf.contents ob
let get_property_implementation_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 9442762, false -> `Synthesize
            | 57067359, false -> `Dynamic
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_property_implementation = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 9442762, false -> `Synthesize
        | 57067359, false -> `Dynamic
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let property_implementation_of_string ?pos s =
  read_property_implementation (Bi_inbuf.from_string ?pos s)
let record_decl_info_tag = Bi_io.record_tag
let write_untagged_record_decl_info : Bi_outbuf.t -> record_decl_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_rdi_is_module_private = x.rdi_is_module_private in
    if x_rdi_is_module_private != false then incr len;
    let x_rdi_is_complete_definition = x.rdi_is_complete_definition in
    if x_rdi_is_complete_definition != false then incr len;
    let x_rdi_is_dependent_type = x.rdi_is_dependent_type in
    if x_rdi_is_dependent_type != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\179' '$' 'B' '\002';
    (
      write_pointer
    ) ob x.rdi_definition_ptr;
    if x_rdi_is_module_private != false then (
      Bi_outbuf.add_char4 ob '\204' '\133' '+' '%';
      (
        Bi_io.write_bool
      ) ob x_rdi_is_module_private;
    );
    if x_rdi_is_complete_definition != false then (
      Bi_outbuf.add_char4 ob '\154' '\154' '~' '\132';
      (
        Bi_io.write_bool
      ) ob x_rdi_is_complete_definition;
    );
    if x_rdi_is_dependent_type != false then (
      Bi_outbuf.add_char4 ob '\253' '\022' '\188' '/';
      (
        Bi_io.write_bool
      ) ob x_rdi_is_dependent_type;
    );
)
let write_record_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_record_decl_info ob x
let string_of_record_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_record_decl_info ob x;
  Bi_outbuf.contents ob
let get_record_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_rdi_definition_ptr = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_rdi_is_module_private = ref (false) in
        let field_rdi_is_complete_definition = ref (false) in
        let field_rdi_is_dependent_type = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 858014210 ->
              field_rdi_definition_ptr := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -863687899 ->
              field_rdi_is_module_private := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 446332548 ->
              field_rdi_is_complete_definition := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -48841681 ->
              field_rdi_is_dependent_type := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "definition_ptr" |];
        (
          {
            rdi_definition_ptr = !field_rdi_definition_ptr;
            rdi_is_module_private = !field_rdi_is_module_private;
            rdi_is_complete_definition = !field_rdi_is_complete_definition;
            rdi_is_dependent_type = !field_rdi_is_dependent_type;
          }
         : record_decl_info)
)
let read_record_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_rdi_definition_ptr = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_rdi_is_module_private = ref (false) in
    let field_rdi_is_complete_definition = ref (false) in
    let field_rdi_is_dependent_type = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 858014210 ->
          field_rdi_definition_ptr := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -863687899 ->
          field_rdi_is_module_private := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 446332548 ->
          field_rdi_is_complete_definition := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -48841681 ->
          field_rdi_is_dependent_type := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "definition_ptr" |];
    (
      {
        rdi_definition_ptr = !field_rdi_definition_ptr;
        rdi_is_module_private = !field_rdi_is_module_private;
        rdi_is_complete_definition = !field_rdi_is_complete_definition;
        rdi_is_dependent_type = !field_rdi_is_dependent_type;
      }
     : record_decl_info)
)
let record_decl_info_of_string ?pos s =
  read_record_decl_info (Bi_inbuf.from_string ?pos s)
let selector_tag = Bi_io.string_tag
let write_untagged_selector = (
  Bi_io.write_untagged_string
)
let write_selector ob x =
  Bi_io.write_tag ob Bi_io.string_tag;
  write_untagged_selector ob x
let string_of_selector ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_selector ob x;
  Bi_outbuf.contents ob
let get_selector_reader = (
  Ag_ob_run.get_string_reader
)
let read_selector = (
  Ag_ob_run.read_string
)
let selector_of_string ?pos s =
  read_selector (Bi_inbuf.from_string ?pos s)
let _27_tag = Bi_io.num_variant_tag
let write_untagged__27 = (
  Ag_ob_run.write_untagged_option (
    write_selector
  )
)
let write__27 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__27 ob x
let string_of__27 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__27 ob x;
  Bi_outbuf.contents ob
let get__27_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_selector
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__27 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_selector
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _27_of_string ?pos s =
  read__27 (Bi_inbuf.from_string ?pos s)
let obj_c_method_ref_info_tag = Bi_io.record_tag
let write_untagged_obj_c_method_ref_info : Bi_outbuf.t -> obj_c_method_ref_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_mri_getter = x.mri_getter in
    if x_mri_getter != None then incr len;
    let x_mri_setter = x.mri_setter in
    if x_mri_setter != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_mri_getter with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\163' '?' '\223' '\011';
      (
        write_selector
      ) ob x;
    );
    (match x_mri_setter with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\239' '\136' '3' '\127';
      (
        write_selector
      ) ob x;
    );
)
let write_obj_c_method_ref_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_method_ref_info ob x
let string_of_obj_c_method_ref_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_method_ref_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_method_ref_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_mri_getter = ref (None) in
        let field_mri_setter = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 591388427 ->
              field_mri_getter := (
                Some (
                  (
                    read_selector
                  ) ib
                )
              );
            | -276286593 ->
              field_mri_setter := (
                Some (
                  (
                    read_selector
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            mri_getter = !field_mri_getter;
            mri_setter = !field_mri_setter;
          }
         : obj_c_method_ref_info)
)
let read_obj_c_method_ref_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_mri_getter = ref (None) in
    let field_mri_setter = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 591388427 ->
          field_mri_getter := (
            Some (
              (
                read_selector
              ) ib
            )
          );
        | -276286593 ->
          field_mri_setter := (
            Some (
              (
                read_selector
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        mri_getter = !field_mri_getter;
        mri_setter = !field_mri_setter;
      }
     : obj_c_method_ref_info)
)
let obj_c_method_ref_info_of_string ?pos s =
  read_obj_c_method_ref_info (Bi_inbuf.from_string ?pos s)
let obj_c_subscript_ref_expr_info_tag = Bi_io.record_tag
let write_untagged_obj_c_subscript_ref_expr_info : Bi_outbuf.t -> obj_c_subscript_ref_expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_osrei_getter = x.osrei_getter in
    if x_osrei_getter != None then incr len;
    let x_osrei_setter = x.osrei_setter in
    if x_osrei_setter != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_obj_c_subscript_kind
    ) ob x.osrei_kind;
    (match x_osrei_getter with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\163' '?' '\223' '\011';
      (
        write_selector
      ) ob x;
    );
    (match x_osrei_setter with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\239' '\136' '3' '\127';
      (
        write_selector
      ) ob x;
    );
)
let write_obj_c_subscript_ref_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_subscript_ref_expr_info ob x
let string_of_obj_c_subscript_ref_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_subscript_ref_expr_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_subscript_ref_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_osrei_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_osrei_getter = ref (None) in
        let field_osrei_setter = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_osrei_kind := (
                (
                  read_obj_c_subscript_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 591388427 ->
              field_osrei_getter := (
                Some (
                  (
                    read_selector
                  ) ib
                )
              );
            | -276286593 ->
              field_osrei_setter := (
                Some (
                  (
                    read_selector
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
        (
          {
            osrei_kind = !field_osrei_kind;
            osrei_getter = !field_osrei_getter;
            osrei_setter = !field_osrei_setter;
          }
         : obj_c_subscript_ref_expr_info)
)
let read_obj_c_subscript_ref_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_osrei_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_osrei_getter = ref (None) in
    let field_osrei_setter = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_osrei_kind := (
            (
              read_obj_c_subscript_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 591388427 ->
          field_osrei_getter := (
            Some (
              (
                read_selector
              ) ib
            )
          );
        | -276286593 ->
          field_osrei_setter := (
            Some (
              (
                read_selector
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
    (
      {
        osrei_kind = !field_osrei_kind;
        osrei_getter = !field_osrei_getter;
        osrei_setter = !field_osrei_setter;
      }
     : obj_c_subscript_ref_expr_info)
)
let obj_c_subscript_ref_expr_info_of_string ?pos s =
  read_obj_c_subscript_ref_expr_info (Bi_inbuf.from_string ?pos s)
let objc_boxed_expr_info_tag = Bi_io.record_tag
let write_untagged_objc_boxed_expr_info : Bi_outbuf.t -> objc_boxed_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_obei_boxing_method = x.obei_boxing_method in
    if x_obei_boxing_method != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_obei_boxing_method with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\155' 'W' '\021' '\169';
      (
        write_selector
      ) ob x;
    );
)
let write_objc_boxed_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_objc_boxed_expr_info ob x
let string_of_objc_boxed_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_objc_boxed_expr_info ob x;
  Bi_outbuf.contents ob
let get_objc_boxed_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_obei_boxing_method = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 458692009 ->
              field_obei_boxing_method := (
                Some (
                  (
                    read_selector
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            obei_boxing_method = !field_obei_boxing_method;
          }
         : objc_boxed_expr_info)
)
let read_objc_boxed_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_obei_boxing_method = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 458692009 ->
          field_obei_boxing_method := (
            Some (
              (
                read_selector
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        obei_boxing_method = !field_obei_boxing_method;
      }
     : objc_boxed_expr_info)
)
let objc_boxed_expr_info_of_string ?pos s =
  read_objc_boxed_expr_info (Bi_inbuf.from_string ?pos s)
let source_file_tag = Bi_io.string_tag
let write_untagged_source_file = (
  Bi_io.write_untagged_string
)
let write_source_file ob x =
  Bi_io.write_tag ob Bi_io.string_tag;
  write_untagged_source_file ob x
let string_of_source_file ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_source_file ob x;
  Bi_outbuf.contents ob
let get_source_file_reader = (
  Ag_ob_run.get_string_reader
)
let read_source_file = (
  Ag_ob_run.read_string
)
let source_file_of_string ?pos s =
  read_source_file (Bi_inbuf.from_string ?pos s)
let _1_tag = Bi_io.num_variant_tag
let write_untagged__1 = (
  Ag_ob_run.write_untagged_option (
    write_source_file
  )
)
let write__1 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__1 ob x
let string_of__1 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__1 ob x;
  Bi_outbuf.contents ob
let get__1_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_source_file
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__1 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_source_file
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _1_of_string ?pos s =
  read__1 (Bi_inbuf.from_string ?pos s)
let source_location_tag = Bi_io.record_tag
let write_untagged_source_location : Bi_outbuf.t -> source_location -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_sl_file = x.sl_file in
    if x_sl_file != None then incr len;
    let x_sl_line = x.sl_line in
    if x_sl_line != None then incr len;
    let x_sl_column = x.sl_column in
    if x_sl_column != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_sl_file with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\195' '\187' '\206' '|';
      (
        write_source_file
      ) ob x;
    );
    (match x_sl_line with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\199' '\179' '\023' '\244';
      (
        Bi_io.write_svint
      ) ob x;
    );
    (match x_sl_column with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\198' '\139' 'N' '\214';
      (
        Bi_io.write_svint
      ) ob x;
    );
)
let write_source_location ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_source_location ob x
let string_of_source_location ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_source_location ob x;
  Bi_outbuf.contents ob
let get_source_location_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_sl_file = ref (None) in
        let field_sl_line = ref (None) in
        let field_sl_column = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -1011102084 ->
              field_sl_file := (
                Some (
                  (
                    read_source_file
                  ) ib
                )
              );
            | -944564236 ->
              field_sl_line := (
                Some (
                  (
                    Ag_ob_run.read_int
                  ) ib
                )
              );
            | -963948842 ->
              field_sl_column := (
                Some (
                  (
                    Ag_ob_run.read_int
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            sl_file = !field_sl_file;
            sl_line = !field_sl_line;
            sl_column = !field_sl_column;
          }
         : source_location)
)
let read_source_location = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_sl_file = ref (None) in
    let field_sl_line = ref (None) in
    let field_sl_column = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -1011102084 ->
          field_sl_file := (
            Some (
              (
                read_source_file
              ) ib
            )
          );
        | -944564236 ->
          field_sl_line := (
            Some (
              (
                Ag_ob_run.read_int
              ) ib
            )
          );
        | -963948842 ->
          field_sl_column := (
            Some (
              (
                Ag_ob_run.read_int
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        sl_file = !field_sl_file;
        sl_line = !field_sl_line;
        sl_column = !field_sl_column;
      }
     : source_location)
)
let source_location_of_string ?pos s =
  read_source_location (Bi_inbuf.from_string ?pos s)
let source_range_tag = Bi_io.tuple_tag
let write_untagged_source_range = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    (
      let x, _ = x in (
        write_source_location
      ) ob x
    );
    (
      let _, x = x in (
        write_source_location
      ) ob x
    );
)
let write_source_range ob x =
  Bi_io.write_tag ob Bi_io.tuple_tag;
  write_untagged_source_range ob x
let string_of_source_range ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_source_range ob x;
  Bi_outbuf.contents ob
let get_source_range_reader = (
  fun tag ->
    if tag <> 20 then Ag_ob_run.read_error () else
      fun ib ->
        let len = Bi_vint.read_uvint ib in
        if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
        let x0 =
          (
            read_source_location
          ) ib
        in
        let x1 =
          (
            read_source_location
          ) ib
        in
        for i = 2 to len - 1 do Bi_io.skip ib done;
        (x0, x1)
)
let read_source_range = (
  fun ib ->
    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
    let len = Bi_vint.read_uvint ib in
    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
    let x0 =
      (
        read_source_location
      ) ib
    in
    let x1 =
      (
        read_source_location
      ) ib
    in
    for i = 2 to len - 1 do Bi_io.skip ib done;
    (x0, x1)
)
let source_range_of_string ?pos s =
  read_source_range (Bi_inbuf.from_string ?pos s)
let attribute_info_tag = Bi_io.record_tag
let write_untagged_attribute_info : Bi_outbuf.t -> attribute_info -> unit = (
  fun ob x ->
    let len = ref 3 in
    let x_ai_is_inherited = x.ai_is_inherited in
    if x_ai_is_inherited != false then incr len;
    let x_ai_is_implicit = x.ai_is_implicit in
    if x_ai_is_implicit != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\209' '!' '\192' '\189';
    (
      write_pointer
    ) ob x.ai_pointer;
    Bi_outbuf.add_char4 ob '\161' 'y' '4' '\025';
    (
      write_source_range
    ) ob x.ai_source_range;
    Bi_outbuf.add_char4 ob '\209' '~' '\190' '\170';
    (
      write__3
    ) ob x.ai_parameters;
    if x_ai_is_inherited != false then (
      Bi_outbuf.add_char4 ob '\255' '\243' 'Q' 'E';
      (
        Bi_io.write_bool
      ) ob x_ai_is_inherited;
    );
    if x_ai_is_implicit != false then (
      Bi_outbuf.add_char4 ob '\235' '\138' '\031' 'Z';
      (
        Bi_io.write_bool
      ) ob x_ai_is_implicit;
    );
)
let write_attribute_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_attribute_info ob x
let string_of_attribute_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_attribute_info ob x;
  Bi_outbuf.contents ob
let get_attribute_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ai_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ai_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ai_parameters = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ai_is_inherited = ref (false) in
        let field_ai_is_implicit = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -786317123 ->
              field_ai_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 561591321 ->
              field_ai_source_range := (
                (
                  read_source_range
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -780222806 ->
              field_ai_parameters := (
                (
                  read__3
                ) ib
              );
              bits0 := !bits0 lor 0x4;
            | -831163 ->
              field_ai_is_inherited := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -343269542 ->
              field_ai_is_implicit := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x7 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer"; "source_range"; "parameters" |];
        (
          {
            ai_pointer = !field_ai_pointer;
            ai_source_range = !field_ai_source_range;
            ai_parameters = !field_ai_parameters;
            ai_is_inherited = !field_ai_is_inherited;
            ai_is_implicit = !field_ai_is_implicit;
          }
         : attribute_info)
)
let read_attribute_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ai_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ai_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ai_parameters = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ai_is_inherited = ref (false) in
    let field_ai_is_implicit = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -786317123 ->
          field_ai_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 561591321 ->
          field_ai_source_range := (
            (
              read_source_range
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -780222806 ->
          field_ai_parameters := (
            (
              read__3
            ) ib
          );
          bits0 := !bits0 lor 0x4;
        | -831163 ->
          field_ai_is_inherited := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -343269542 ->
          field_ai_is_implicit := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x7 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer"; "source_range"; "parameters" |];
    (
      {
        ai_pointer = !field_ai_pointer;
        ai_source_range = !field_ai_source_range;
        ai_parameters = !field_ai_parameters;
        ai_is_inherited = !field_ai_is_inherited;
        ai_is_implicit = !field_ai_is_implicit;
      }
     : attribute_info)
)
let attribute_info_of_string ?pos s =
  read_attribute_info (Bi_inbuf.from_string ?pos s)
let attribute_tag = Bi_io.variant_tag
let write_untagged_attribute : Bi_outbuf.t -> attribute -> unit = (
  fun ob x ->
    match x with
      | FallThroughAttr x ->
        Bi_outbuf.add_char4 ob '\139' '\026' '\167' ';';
        (
          write_attribute_info
        ) ob x
      | SuppressAttr x ->
        Bi_outbuf.add_char4 ob '\222' '\199' '\027' '&';
        (
          write_attribute_info
        ) ob x
      | SwiftContextAttr x ->
        Bi_outbuf.add_char4 ob '\197' '\200' '\017' '\205';
        (
          write_attribute_info
        ) ob x
      | SwiftErrorResultAttr x ->
        Bi_outbuf.add_char4 ob '\251' '\215' 'X' '#';
        (
          write_attribute_info
        ) ob x
      | SwiftIndirectResultAttr x ->
        Bi_outbuf.add_char4 ob '\227' '\206' '\243' '\175';
        (
          write_attribute_info
        ) ob x
      | AnnotateAttr x ->
        Bi_outbuf.add_char4 ob '\136' '\132' 'd' '\253';
        (
          write_attribute_info
        ) ob x
      | CFConsumedAttr x ->
        Bi_outbuf.add_char4 ob '\248' '\025' 'w' '\188';
        (
          write_attribute_info
        ) ob x
      | CarriesDependencyAttr x ->
        Bi_outbuf.add_char4 ob '\173' 'd' 'm' 'U';
        (
          write_attribute_info
        ) ob x
      | NSConsumedAttr x ->
        Bi_outbuf.add_char4 ob '\224' 'R' 'l' '^';
        (
          write_attribute_info
        ) ob x
      | NonNullAttr x ->
        Bi_outbuf.add_char4 ob '\191' '\152' '\185' 'e';
        (
          write_attribute_info
        ) ob x
      | PassObjectSizeAttr x ->
        Bi_outbuf.add_char4 ob '\195' '\163' 'y' 'B';
        (
          write_attribute_info
        ) ob x
      | AMDGPUFlatWorkGroupSizeAttr x ->
        Bi_outbuf.add_char4 ob '\156' '\226' '\252' '\147';
        (
          write_attribute_info
        ) ob x
      | AMDGPUNumSGPRAttr x ->
        Bi_outbuf.add_char4 ob '\196' '!' '\177' 'Y';
        (
          write_attribute_info
        ) ob x
      | AMDGPUNumVGPRAttr x ->
        Bi_outbuf.add_char4 ob '\239' '\185' '\007' '\182';
        (
          write_attribute_info
        ) ob x
      | AMDGPUWavesPerEUAttr x ->
        Bi_outbuf.add_char4 ob '\193' 'm' 'D' '\184';
        (
          write_attribute_info
        ) ob x
      | ARMInterruptAttr x ->
        Bi_outbuf.add_char4 ob '\231' 'N' 'P' '\152';
        (
          write_attribute_info
        ) ob x
      | AVRInterruptAttr x ->
        Bi_outbuf.add_char4 ob '\136' '\159' 'p' 'w';
        (
          write_attribute_info
        ) ob x
      | AVRSignalAttr x ->
        Bi_outbuf.add_char4 ob '\245' 'N' '\219' '\214';
        (
          write_attribute_info
        ) ob x
      | AcquireCapabilityAttr x ->
        Bi_outbuf.add_char4 ob '\139' '<' 'c' '\127';
        (
          write_attribute_info
        ) ob x
      | AcquiredAfterAttr x ->
        Bi_outbuf.add_char4 ob '\190' '\002' '\019' '\159';
        (
          write_attribute_info
        ) ob x
      | AcquiredBeforeAttr x ->
        Bi_outbuf.add_char4 ob '\136' '\243' '\142' '\222';
        (
          write_attribute_info
        ) ob x
      | AlignMac68kAttr x ->
        Bi_outbuf.add_char4 ob '\183' '\160' '\253' '\016';
        (
          write_attribute_info
        ) ob x
      | AlignedAttr x ->
        Bi_outbuf.add_char4 ob '\223' '\217' '\141' '\149';
        (
          write_attribute_info
        ) ob x
      | AllocAlignAttr x ->
        Bi_outbuf.add_char4 ob '\196' '<' '\255' '\129';
        (
          write_attribute_info
        ) ob x
      | AllocSizeAttr x ->
        Bi_outbuf.add_char4 ob '\248' '\023' '\140' '\007';
        (
          write_attribute_info
        ) ob x
      | AlwaysInlineAttr x ->
        Bi_outbuf.add_char4 ob '\199' '\222' '\219' '\249';
        (
          write_attribute_info
        ) ob x
      | AnalyzerNoReturnAttr x ->
        Bi_outbuf.add_char4 ob '\161' '\199' '\230' '\136';
        (
          write_attribute_info
        ) ob x
      | AnyX86InterruptAttr x ->
        Bi_outbuf.add_char4 ob '\194' '\002' 'V' '\n';
        (
          write_attribute_info
        ) ob x
      | AnyX86NoCallerSavedRegistersAttr x ->
        Bi_outbuf.add_char4 ob '\246' '\221' '\146' 'p';
        (
          write_attribute_info
        ) ob x
      | ArcWeakrefUnavailableAttr x ->
        Bi_outbuf.add_char4 ob '\164' '\208' '/' '\216';
        (
          write_attribute_info
        ) ob x
      | ArgumentWithTypeTagAttr x ->
        Bi_outbuf.add_char4 ob '\231' '\214' '\002' '\142';
        (
          write_attribute_info
        ) ob x
      | AsmLabelAttr x ->
        Bi_outbuf.add_char4 ob '\232' '\219' 'N' '\170';
        (
          write_attribute_info
        ) ob x
      | AssertCapabilityAttr x ->
        Bi_outbuf.add_char4 ob '\233' '\154' '\222' '\175';
        (
          write_attribute_info
        ) ob x
      | AssertExclusiveLockAttr x ->
        Bi_outbuf.add_char4 ob '\239' '\168' '/' '\244';
        (
          write_attribute_info
        ) ob x
      | AssertSharedLockAttr x ->
        Bi_outbuf.add_char4 ob '\202' '\238' '\212' '\007';
        (
          write_attribute_info
        ) ob x
      | AssumeAlignedAttr x ->
        Bi_outbuf.add_char4 ob '\164' '\031' '\230' '\137';
        (
          write_attribute_info
        ) ob x
      | AvailabilityAttr x ->
        Bi_outbuf.add_char4 ob '\185' ',' '+' '\204';
        (
          write_attribute_info
        ) ob x
      | BlocksAttr x ->
        Bi_outbuf.add_char4 ob '\157' 'K' '6' '\247';
        (
          write_attribute_info
        ) ob x
      | C11NoReturnAttr x ->
        Bi_outbuf.add_char4 ob '\214' '\249' '\188' '%';
        (
          write_attribute_info
        ) ob x
      | CDeclAttr x ->
        Bi_outbuf.add_char4 ob '\190' 'w' 'N' '\030';
        (
          write_attribute_info
        ) ob x
      | CFAuditedTransferAttr x ->
        Bi_outbuf.add_char4 ob '\131' '\003' '\018' '3';
        (
          write_attribute_info
        ) ob x
      | CFReturnsNotRetainedAttr x ->
        Bi_outbuf.add_char4 ob '\148' '\170' '\138' '\232';
        (
          write_attribute_info
        ) ob x
      | CFReturnsRetainedAttr x ->
        Bi_outbuf.add_char4 ob '\254' '\026' '\248' '5';
        (
          write_attribute_info
        ) ob x
      | CFUnknownTransferAttr x ->
        Bi_outbuf.add_char4 ob '\224' '\179' 'O' '\195';
        (
          write_attribute_info
        ) ob x
      | CUDAConstantAttr x ->
        Bi_outbuf.add_char4 ob '\154' '\150' '\170' '\004';
        (
          write_attribute_info
        ) ob x
      | CUDADeviceAttr x ->
        Bi_outbuf.add_char4 ob '\236' 'J' '\004' 'v';
        (
          write_attribute_info
        ) ob x
      | CUDAGlobalAttr x ->
        Bi_outbuf.add_char4 ob '\249' 'c' 'C' '\195';
        (
          write_attribute_info
        ) ob x
      | CUDAHostAttr x ->
        Bi_outbuf.add_char4 ob '\176' '\218' 'v' '\136';
        (
          write_attribute_info
        ) ob x
      | CUDAInvalidTargetAttr x ->
        Bi_outbuf.add_char4 ob '\172' '\242' '\215' 'J';
        (
          write_attribute_info
        ) ob x
      | CUDALaunchBoundsAttr x ->
        Bi_outbuf.add_char4 ob '\213' 'Q' '\003' '(';
        (
          write_attribute_info
        ) ob x
      | CUDASharedAttr x ->
        Bi_outbuf.add_char4 ob '\167' '\233' ':' '\005';
        (
          write_attribute_info
        ) ob x
      | CXX11NoReturnAttr x ->
        Bi_outbuf.add_char4 ob '\205' '\251' '\239' '\229';
        (
          write_attribute_info
        ) ob x
      | CallableWhenAttr x ->
        Bi_outbuf.add_char4 ob '\242' '\232' '\146' '\131';
        (
          write_attribute_info
        ) ob x
      | CapabilityAttr x ->
        Bi_outbuf.add_char4 ob '\130' '\160' '\029' 'I';
        (
          write_attribute_info
        ) ob x
      | CapturedRecordAttr x ->
        Bi_outbuf.add_char4 ob '\177' 'q' '{' '@';
        (
          write_attribute_info
        ) ob x
      | CleanupAttr x ->
        Bi_outbuf.add_char4 ob '\141' '&' '\207' 'U';
        (
          write_attribute_info
        ) ob x
      | ColdAttr x ->
        Bi_outbuf.add_char4 ob '\237' '\238' '\159' '\149';
        (
          write_attribute_info
        ) ob x
      | CommonAttr x ->
        Bi_outbuf.add_char4 ob '\188' 'H' '4' '\028';
        (
          write_attribute_info
        ) ob x
      | ConstAttr x ->
        Bi_outbuf.add_char4 ob '\209' '\028' '\016' '\020';
        (
          write_attribute_info
        ) ob x
      | ConstructorAttr x ->
        Bi_outbuf.add_char4 ob '\253' '\211' '\131' '+';
        (
          write_attribute_info
        ) ob x
      | ConsumableAttr x ->
        Bi_outbuf.add_char4 ob '\161' 'x' '\143' '\148';
        (
          write_attribute_info
        ) ob x
      | ConsumableAutoCastAttr x ->
        Bi_outbuf.add_char4 ob '\217' 'e' 'c' '\130';
        (
          write_attribute_info
        ) ob x
      | ConsumableSetOnReadAttr x ->
        Bi_outbuf.add_char4 ob '\220' '\136' '\179' 'e';
        (
          write_attribute_info
        ) ob x
      | ConvergentAttr x ->
        Bi_outbuf.add_char4 ob '\129' '\203' '\221' '\182';
        (
          write_attribute_info
        ) ob x
      | DLLExportAttr x ->
        Bi_outbuf.add_char4 ob '\155' '\147' 'a' '\169';
        (
          write_attribute_info
        ) ob x
      | DLLImportAttr x ->
        Bi_outbuf.add_char4 ob '\140' ']' '\190' '\026';
        (
          write_attribute_info
        ) ob x
      | DeprecatedAttr x ->
        Bi_outbuf.add_char4 ob '\247' '\200' '\018' 'd';
        (
          write_attribute_info
        ) ob x
      | DestructorAttr x ->
        Bi_outbuf.add_char4 ob '\217' '\023' 'I' '*';
        (
          write_attribute_info
        ) ob x
      | DiagnoseIfAttr x ->
        Bi_outbuf.add_char4 ob '\219' '\140' 'B' '\172';
        (
          write_attribute_info
        ) ob x
      | DisableTailCallsAttr x ->
        Bi_outbuf.add_char4 ob '\211' '\248' '\002' 'N';
        (
          write_attribute_info
        ) ob x
      | EmptyBasesAttr x ->
        Bi_outbuf.add_char4 ob '\184' 'V' '9' 'f';
        (
          write_attribute_info
        ) ob x
      | EnableIfAttr x ->
        Bi_outbuf.add_char4 ob '\212' 'H' '\n' '\177';
        (
          write_attribute_info
        ) ob x
      | EnumExtensibilityAttr x ->
        Bi_outbuf.add_char4 ob '\230' '\228' '\202' 'Y';
        (
          write_attribute_info
        ) ob x
      | ExclusiveTrylockFunctionAttr x ->
        Bi_outbuf.add_char4 ob '\172' '\173' '\198' '\017';
        (
          write_attribute_info
        ) ob x
      | ExternalSourceSymbolAttr x ->
        Bi_outbuf.add_char4 ob '\149' '\012' '\153' '\239';
        (
          write_attribute_info
        ) ob x
      | FastCallAttr x ->
        Bi_outbuf.add_char4 ob '\136' 'l' '\207' '\203';
        (
          write_attribute_info
        ) ob x
      | FinalAttr x ->
        Bi_outbuf.add_char4 ob '\165' ' ' '{' '\167';
        (
          write_attribute_info
        ) ob x
      | FlagEnumAttr x ->
        Bi_outbuf.add_char4 ob '\146' '\021' 'h' '\190';
        (
          write_attribute_info
        ) ob x
      | FlattenAttr x ->
        Bi_outbuf.add_char4 ob '\239' '\184' '\190' '\245';
        (
          write_attribute_info
        ) ob x
      | FormatAttr x ->
        Bi_outbuf.add_char4 ob '\246' '\140' 'D' '(';
        (
          write_attribute_info
        ) ob x
      | FormatArgAttr x ->
        Bi_outbuf.add_char4 ob '\204' '\239' 'x' '\016';
        (
          write_attribute_info
        ) ob x
      | GNUInlineAttr x ->
        Bi_outbuf.add_char4 ob '\161' '&' '\138' '\024';
        (
          write_attribute_info
        ) ob x
      | GuardedByAttr x ->
        Bi_outbuf.add_char4 ob '\202' '?' '\166' ',';
        (
          write_attribute_info
        ) ob x
      | GuardedVarAttr x ->
        Bi_outbuf.add_char4 ob '\233' 'z' '\235' '\180';
        (
          write_attribute_info
        ) ob x
      | HotAttr x ->
        Bi_outbuf.add_char4 ob '\137' 'q' '\007' '>';
        (
          write_attribute_info
        ) ob x
      | IBActionAttr x ->
        Bi_outbuf.add_char4 ob '\187' '[' '\133' '@';
        (
          write_attribute_info
        ) ob x
      | IBOutletAttr x ->
        Bi_outbuf.add_char4 ob '\133' '\253' '\185' '\023';
        (
          write_attribute_info
        ) ob x
      | IBOutletCollectionAttr x ->
        Bi_outbuf.add_char4 ob '\246' '\007' 'V' '\021';
        (
          write_attribute_info
        ) ob x
      | InitPriorityAttr x ->
        Bi_outbuf.add_char4 ob '\200' '6' '\002' '\005';
        (
          write_attribute_info
        ) ob x
      | IntelOclBiccAttr x ->
        Bi_outbuf.add_char4 ob '\246' '\254' ':' '\154';
        (
          write_attribute_info
        ) ob x
      | InternalLinkageAttr x ->
        Bi_outbuf.add_char4 ob '\220' '\239' 'l' 'y';
        (
          write_attribute_info
        ) ob x
      | LTOVisibilityPublicAttr x ->
        Bi_outbuf.add_char4 ob '\161' '\187' '\205' 'S';
        (
          write_attribute_info
        ) ob x
      | LayoutVersionAttr x ->
        Bi_outbuf.add_char4 ob '\147' '\255' '\209' '\191';
        (
          write_attribute_info
        ) ob x
      | LockReturnedAttr x ->
        Bi_outbuf.add_char4 ob '\149' '#' '~' '\139';
        (
          write_attribute_info
        ) ob x
      | LocksExcludedAttr x ->
        Bi_outbuf.add_char4 ob '\142' '\217' '\240' '\195';
        (
          write_attribute_info
        ) ob x
      | MSABIAttr x ->
        Bi_outbuf.add_char4 ob '\164' '\b' '.' '\243';
        (
          write_attribute_info
        ) ob x
      | MSInheritanceAttr x ->
        Bi_outbuf.add_char4 ob '\170' 'T' '{' '\213';
        (
          write_attribute_info
        ) ob x
      | MSNoVTableAttr x ->
        Bi_outbuf.add_char4 ob '\253' '0' '\241' '0';
        (
          write_attribute_info
        ) ob x
      | MSP430InterruptAttr x ->
        Bi_outbuf.add_char4 ob '\153' 'H' '\154' '\r';
        (
          write_attribute_info
        ) ob x
      | MSStructAttr x ->
        Bi_outbuf.add_char4 ob '\129' '\030' '\149' ',';
        (
          write_attribute_info
        ) ob x
      | MSVtorDispAttr x ->
        Bi_outbuf.add_char4 ob '\217' '[' '\179' ':';
        (
          write_attribute_info
        ) ob x
      | MaxFieldAlignmentAttr x ->
        Bi_outbuf.add_char4 ob '\215' '\014' '\128' '>';
        (
          write_attribute_info
        ) ob x
      | MayAliasAttr x ->
        Bi_outbuf.add_char4 ob '\231' '\240' '\199' '\156';
        (
          write_attribute_info
        ) ob x
      | MicroMipsAttr x ->
        Bi_outbuf.add_char4 ob '\205' '\025' '\138' '4';
        (
          write_attribute_info
        ) ob x
      | MinSizeAttr x ->
        Bi_outbuf.add_char4 ob '\249' '\'' '&' '$';
        (
          write_attribute_info
        ) ob x
      | Mips16Attr x ->
        Bi_outbuf.add_char4 ob '\234' '\015' '\176' 'u';
        (
          write_attribute_info
        ) ob x
      | MipsInterruptAttr x ->
        Bi_outbuf.add_char4 ob '\197' 'b' '\000' 'u';
        (
          write_attribute_info
        ) ob x
      | NSConsumesSelfAttr x ->
        Bi_outbuf.add_char4 ob '\217' '7' '\155' '\153';
        (
          write_attribute_info
        ) ob x
      | NSReturnsAutoreleasedAttr x ->
        Bi_outbuf.add_char4 ob '\245' '\158' '\018' '\155';
        (
          write_attribute_info
        ) ob x
      | NSReturnsNotRetainedAttr x ->
        Bi_outbuf.add_char4 ob '\253' '\220' '^' '\n';
        (
          write_attribute_info
        ) ob x
      | NSReturnsRetainedAttr x ->
        Bi_outbuf.add_char4 ob '\211' '\148' '\187' '\211';
        (
          write_attribute_info
        ) ob x
      | NakedAttr x ->
        Bi_outbuf.add_char4 ob '\244' '\144' '\155' '\232';
        (
          write_attribute_info
        ) ob x
      | NoAliasAttr x ->
        Bi_outbuf.add_char4 ob '\141' '\242' '*' '@';
        (
          write_attribute_info
        ) ob x
      | NoCommonAttr x ->
        Bi_outbuf.add_char4 ob '\165' '\012' '\027' '\189';
        (
          write_attribute_info
        ) ob x
      | NoDebugAttr x ->
        Bi_outbuf.add_char4 ob '\233' '\163' 'H' '\131';
        (
          write_attribute_info
        ) ob x
      | NoDuplicateAttr x ->
        Bi_outbuf.add_char4 ob '\251' '\127' '\175' ';';
        (
          write_attribute_info
        ) ob x
      | NoInlineAttr x ->
        Bi_outbuf.add_char4 ob '\223' 'Z' '\159' '\235';
        (
          write_attribute_info
        ) ob x
      | NoInstrumentFunctionAttr x ->
        Bi_outbuf.add_char4 ob '\253' '\154' '\247' 'q';
        (
          write_attribute_info
        ) ob x
      | NoMicroMipsAttr x ->
        Bi_outbuf.add_char4 ob '\154' '\235' ']' '3';
        (
          write_attribute_info
        ) ob x
      | NoMips16Attr x ->
        Bi_outbuf.add_char4 ob '\210' '\211' '\152' '\022';
        (
          write_attribute_info
        ) ob x
      | NoReturnAttr x ->
        Bi_outbuf.add_char4 ob '\188' '\025' '\241' '\194';
        (
          write_attribute_info
        ) ob x
      | NoSanitizeAttr x ->
        Bi_outbuf.add_char4 ob '\237' '\027' '\227' '\251';
        (
          write_attribute_info
        ) ob x
      | NoSplitStackAttr x ->
        Bi_outbuf.add_char4 ob '\147' '1' '\030' '\160';
        (
          write_attribute_info
        ) ob x
      | NoThreadSafetyAnalysisAttr x ->
        Bi_outbuf.add_char4 ob '\160' '\153' '\230' '\202';
        (
          write_attribute_info
        ) ob x
      | NoThrowAttr x ->
        Bi_outbuf.add_char4 ob '\173' '\237' '\184' '\214';
        (
          write_attribute_info
        ) ob x
      | NotTailCalledAttr x ->
        Bi_outbuf.add_char4 ob '\249' '\017' 'w' 'Q';
        (
          write_attribute_info
        ) ob x
      | OMPCaptureNoInitAttr x ->
        Bi_outbuf.add_char4 ob '\173' '\028' 'T' '\022';
        (
          write_attribute_info
        ) ob x
      | OMPThreadPrivateDeclAttr x ->
        Bi_outbuf.add_char4 ob '\196' '\167' 't' 'b';
        (
          write_attribute_info
        ) ob x
      | ObjCBridgeAttr x ->
        Bi_outbuf.add_char4 ob '\242' '\247' '"' '\006';
        (
          write_attribute_info
        ) ob x
      | ObjCBridgeMutableAttr x ->
        Bi_outbuf.add_char4 ob '\223' '(' '\003' '\194';
        (
          write_attribute_info
        ) ob x
      | ObjCBridgeRelatedAttr x ->
        Bi_outbuf.add_char4 ob '\211' '\233' '\148' '\135';
        (
          write_attribute_info
        ) ob x
      | ObjCExceptionAttr x ->
        Bi_outbuf.add_char4 ob '\197' '\004' '\000' '\244';
        (
          write_attribute_info
        ) ob x
      | ObjCExplicitProtocolImplAttr x ->
        Bi_outbuf.add_char4 ob '\240' '\\' '^' 'i';
        (
          write_attribute_info
        ) ob x
      | ObjCIndependentClassAttr x ->
        Bi_outbuf.add_char4 ob '\243' 'n' '\019' '[';
        (
          write_attribute_info
        ) ob x
      | ObjCMethodFamilyAttr x ->
        Bi_outbuf.add_char4 ob '\241' '\151' 'Q' '\226';
        (
          write_attribute_info
        ) ob x
      | ObjCNSObjectAttr x ->
        Bi_outbuf.add_char4 ob '\231' '$' '\250' '\193';
        (
          write_attribute_info
        ) ob x
      | ObjCPreciseLifetimeAttr x ->
        Bi_outbuf.add_char4 ob '\181' '/' '>' '\169';
        (
          write_attribute_info
        ) ob x
      | ObjCRequiresPropertyDefsAttr x ->
        Bi_outbuf.add_char4 ob '\168' '\027' '\155' '\014';
        (
          write_attribute_info
        ) ob x
      | ObjCRequiresSuperAttr x ->
        Bi_outbuf.add_char4 ob '\185' '\134' '"' '\210';
        (
          write_attribute_info
        ) ob x
      | ObjCReturnsInnerPointerAttr x ->
        Bi_outbuf.add_char4 ob '\212' 'z' '\155' 'O';
        (
          write_attribute_info
        ) ob x
      | ObjCRootClassAttr x ->
        Bi_outbuf.add_char4 ob '\158' '\153' '.' '\219';
        (
          write_attribute_info
        ) ob x
      | ObjCSubclassingRestrictedAttr x ->
        Bi_outbuf.add_char4 ob '\237' '\006' '\026' '\n';
        (
          write_attribute_info
        ) ob x
      | OpenCLIntelReqdSubGroupSizeAttr x ->
        Bi_outbuf.add_char4 ob '\171' '\250' 'M' 'Z';
        (
          write_attribute_info
        ) ob x
      | OpenCLKernelAttr x ->
        Bi_outbuf.add_char4 ob '\134' '\140' '\180' '\129';
        (
          write_attribute_info
        ) ob x
      | OpenCLUnrollHintAttr x ->
        Bi_outbuf.add_char4 ob '\168' '\006' '3' 'A';
        (
          write_attribute_info
        ) ob x
      | OptimizeNoneAttr x ->
        Bi_outbuf.add_char4 ob '\242' '\029' '\226' '&';
        (
          write_attribute_info
        ) ob x
      | OverrideAttr x ->
        Bi_outbuf.add_char4 ob '\210' '\182' '\205' '\189';
        (
          write_attribute_info
        ) ob x
      | OwnershipAttr x ->
        Bi_outbuf.add_char4 ob '\252' '\225' 'z' ' ';
        (
          write_attribute_info
        ) ob x
      | PackedAttr x ->
        Bi_outbuf.add_char4 ob '\166' '%' '\192' '\233';
        (
          write_attribute_info
        ) ob x
      | ParamTypestateAttr x ->
        Bi_outbuf.add_char4 ob '\192' '\165' 'a' ';';
        (
          write_attribute_info
        ) ob x
      | PascalAttr x ->
        Bi_outbuf.add_char4 ob '\238' 'h' '_' ']';
        (
          write_attribute_info
        ) ob x
      | PcsAttr x ->
        Bi_outbuf.add_char4 ob '\246' 'm' '\212' 'Q';
        (
          write_attribute_info
        ) ob x
      | PragmaClangBSSSectionAttr x ->
        Bi_outbuf.add_char4 ob '\245' 'K' '\207' '\137';
        (
          write_attribute_info
        ) ob x
      | PragmaClangDataSectionAttr x ->
        Bi_outbuf.add_char4 ob '\171' '\004' '\229' '\215';
        (
          write_attribute_info
        ) ob x
      | PragmaClangRodataSectionAttr x ->
        Bi_outbuf.add_char4 ob '\175' '\239' '_' 'z';
        (
          write_attribute_info
        ) ob x
      | PragmaClangTextSectionAttr x ->
        Bi_outbuf.add_char4 ob '\253' '\171' 'H' '4';
        (
          write_attribute_info
        ) ob x
      | PreserveAllAttr x ->
        Bi_outbuf.add_char4 ob '\170' '\235' '\252' 'f';
        (
          write_attribute_info
        ) ob x
      | PreserveMostAttr x ->
        Bi_outbuf.add_char4 ob '\150' '\231' '\215' '`';
        (
          write_attribute_info
        ) ob x
      | PtGuardedByAttr x ->
        Bi_outbuf.add_char4 ob '\143' 'k' 'Y' '\136';
        (
          write_attribute_info
        ) ob x
      | PtGuardedVarAttr x ->
        Bi_outbuf.add_char4 ob '\170' '\140' '(' '\216';
        (
          write_attribute_info
        ) ob x
      | PureAttr x ->
        Bi_outbuf.add_char4 ob '\200' '\137' '\242' 'i';
        (
          write_attribute_info
        ) ob x
      | RegCallAttr x ->
        Bi_outbuf.add_char4 ob '\198' '\183' '\170' 'C';
        (
          write_attribute_info
        ) ob x
      | ReleaseCapabilityAttr x ->
        Bi_outbuf.add_char4 ob '\148' 'x' '\193' '0';
        (
          write_attribute_info
        ) ob x
      | ReqdWorkGroupSizeAttr x ->
        Bi_outbuf.add_char4 ob '\173' '[' '\172' '\026';
        (
          write_attribute_info
        ) ob x
      | RequireConstantInitAttr x ->
        Bi_outbuf.add_char4 ob '\210' '\204' 'S' 'J';
        (
          write_attribute_info
        ) ob x
      | RequiresCapabilityAttr x ->
        Bi_outbuf.add_char4 ob '\220' 'S' '\199' 'W';
        (
          write_attribute_info
        ) ob x
      | RestrictAttr x ->
        Bi_outbuf.add_char4 ob '\239' '\204' '\174' '\173';
        (
          write_attribute_info
        ) ob x
      | ReturnTypestateAttr x ->
        Bi_outbuf.add_char4 ob '\150' '\020' 'v' '\248';
        (
          write_attribute_info
        ) ob x
      | ReturnsNonNullAttr x ->
        Bi_outbuf.add_char4 ob '\217' '\131' '\b' '\162';
        (
          write_attribute_info
        ) ob x
      | ReturnsTwiceAttr x ->
        Bi_outbuf.add_char4 ob '\248' '\142' '\228' '\214';
        (
          write_attribute_info
        ) ob x
      | ScopedLockableAttr x ->
        Bi_outbuf.add_char4 ob '\185' '\219' '#' 'f';
        (
          write_attribute_info
        ) ob x
      | SectionAttr x ->
        Bi_outbuf.add_char4 ob '\149' '\003' '=' '\150';
        (
          write_attribute_info
        ) ob x
      | SelectAnyAttr x ->
        Bi_outbuf.add_char4 ob '\168' ']' '\030' '\129';
        (
          write_attribute_info
        ) ob x
      | SentinelAttr x ->
        Bi_outbuf.add_char4 ob '\238' '\191' '(' 'U';
        (
          write_attribute_info
        ) ob x
      | SetTypestateAttr x ->
        Bi_outbuf.add_char4 ob '\234' '\222' '\245' '\006';
        (
          write_attribute_info
        ) ob x
      | SharedTrylockFunctionAttr x ->
        Bi_outbuf.add_char4 ob '\187' '\146' '`' 'j';
        (
          write_attribute_info
        ) ob x
      | StdCallAttr x ->
        Bi_outbuf.add_char4 ob '\147' '\030' '\224' '\146';
        (
          write_attribute_info
        ) ob x
      | SwiftCallAttr x ->
        Bi_outbuf.add_char4 ob '\254' '\164' '\191' '\194';
        (
          write_attribute_info
        ) ob x
      | SysVABIAttr x ->
        Bi_outbuf.add_char4 ob '\202' '\196' '\137' '\240';
        (
          write_attribute_info
        ) ob x
      | TLSModelAttr x ->
        Bi_outbuf.add_char4 ob '\231' '|' '\130' '\031';
        (
          write_attribute_info
        ) ob x
      | TargetAttr x ->
        Bi_outbuf.add_char4 ob '\145' 'W' '\189' 'B';
        (
          write_attribute_info
        ) ob x
      | TestTypestateAttr x ->
        Bi_outbuf.add_char4 ob '\138' '\005' '~' '\022';
        (
          write_attribute_info
        ) ob x
      | ThisCallAttr x ->
        Bi_outbuf.add_char4 ob '\209' '\031' '\165' '\141';
        (
          write_attribute_info
        ) ob x
      | TransparentUnionAttr x ->
        Bi_outbuf.add_char4 ob '\146' '\145' '\b' 'N';
        (
          write_attribute_info
        ) ob x
      | TryAcquireCapabilityAttr x ->
        Bi_outbuf.add_char4 ob '\238' '\212' 'z' '\132';
        (
          write_attribute_info
        ) ob x
      | TypeTagForDatatypeAttr x ->
        Bi_outbuf.add_char4 ob '\182' '\183' '\018' '\030';
        (
          write_attribute_info
        ) ob x
      | TypeVisibilityAttr x ->
        Bi_outbuf.add_char4 ob '\202' '\019' '\132' '\157';
        (
          write_attribute_info
        ) ob x
      | UnavailableAttr x ->
        Bi_outbuf.add_char4 ob '\163' '\131' '\153' '\129';
        (
          write_attribute_info
        ) ob x
      | UnusedAttr x ->
        Bi_outbuf.add_char4 ob '\240' '\020' ')' '\135';
        (
          write_attribute_info
        ) ob x
      | UsedAttr x ->
        Bi_outbuf.add_char4 ob '\205' 'P' '\250' '.';
        (
          write_attribute_info
        ) ob x
      | UuidAttr x ->
        Bi_outbuf.add_char4 ob '\185' '\233' 'Y' ',';
        (
          write_attribute_info
        ) ob x
      | VecReturnAttr x ->
        Bi_outbuf.add_char4 ob '\136' '\137' '\237' 'U';
        (
          write_attribute_info
        ) ob x
      | VecTypeHintAttr x ->
        Bi_outbuf.add_char4 ob '\191' '\167' '\179' '\134';
        (
          write_attribute_info
        ) ob x
      | VectorCallAttr x ->
        Bi_outbuf.add_char4 ob '\207' '\189' '\004' '\242';
        (
          write_attribute_info
        ) ob x
      | VisibilityAttr x ->
        Bi_outbuf.add_char4 ob '\239' '\178' '\220' 'C';
        (
          write_attribute_info
        ) ob x
      | WarnUnusedAttr x ->
        Bi_outbuf.add_char4 ob '\173' '\187' '\243' 'm';
        (
          write_attribute_info
        ) ob x
      | WarnUnusedResultAttr x ->
        Bi_outbuf.add_char4 ob '\145' '\b' '\015' '\234';
        (
          write_attribute_info
        ) ob x
      | WeakAttr x ->
        Bi_outbuf.add_char4 ob '\231' '\233' '\253' '\233';
        (
          write_attribute_info
        ) ob x
      | WeakImportAttr x ->
        Bi_outbuf.add_char4 ob '\178' '\184' ';' '\238';
        (
          write_attribute_info
        ) ob x
      | WeakRefAttr x ->
        Bi_outbuf.add_char4 ob '\152' '\160' '*' 'l';
        (
          write_attribute_info
        ) ob x
      | WorkGroupSizeHintAttr x ->
        Bi_outbuf.add_char4 ob '\240' '\165' '\016' '\231';
        (
          write_attribute_info
        ) ob x
      | X86ForceAlignArgPointerAttr x ->
        Bi_outbuf.add_char4 ob '\143' '\028' '}' '\200';
        (
          write_attribute_info
        ) ob x
      | XRayInstrumentAttr x ->
        Bi_outbuf.add_char4 ob '\207' '\136' '\024' '\n';
        (
          write_attribute_info
        ) ob x
      | XRayLogArgsAttr x ->
        Bi_outbuf.add_char4 ob '\176' 'e' '\018' '\128';
        (
          write_attribute_info
        ) ob x
      | AbiTagAttr x ->
        Bi_outbuf.add_char4 ob '\240' 'A' 'q' 'C';
        (
          write_attribute_info
        ) ob x
      | AliasAttr x ->
        Bi_outbuf.add_char4 ob '\233' '\227' '\130' '\193';
        (
          write_attribute_info
        ) ob x
      | AlignValueAttr x ->
        Bi_outbuf.add_char4 ob '\251' '\005' 'q' '\221';
        (
          write_attribute_info
        ) ob x
      | IFuncAttr x ->
        Bi_outbuf.add_char4 ob '\243' '-' '\211' '\254';
        (
          write_attribute_info
        ) ob x
      | InitSegAttr x ->
        Bi_outbuf.add_char4 ob '\166' 'a' '\218' '\022';
        (
          write_attribute_info
        ) ob x
      | LoopHintAttr x ->
        Bi_outbuf.add_char4 ob '\164' '\183' '\b' '\252';
        (
          write_attribute_info
        ) ob x
      | ModeAttr x ->
        Bi_outbuf.add_char4 ob '\138' 'r' '\198' 'T';
        (
          write_attribute_info
        ) ob x
      | OMPDeclareSimdDeclAttr x ->
        Bi_outbuf.add_char4 ob '\238' '\185' '\254' '@';
        (
          write_attribute_info
        ) ob x
      | OMPDeclareTargetDeclAttr x ->
        Bi_outbuf.add_char4 ob '\224' '\174' '\014' '$';
        (
          write_attribute_info
        ) ob x
      | ObjCBoxableAttr x ->
        Bi_outbuf.add_char4 ob '\170' '@' 'C' '\202';
        (
          write_attribute_info
        ) ob x
      | ObjCDesignatedInitializerAttr x ->
        Bi_outbuf.add_char4 ob '\150' 'd' '\183' '\215';
        (
          write_attribute_info
        ) ob x
      | ObjCRuntimeNameAttr x ->
        Bi_outbuf.add_char4 ob '\243' '\250' '\182' '\232';
        (
          write_attribute_info
        ) ob x
      | ObjCRuntimeVisibleAttr x ->
        Bi_outbuf.add_char4 ob '\240' '\137' '\144' 'w';
        (
          write_attribute_info
        ) ob x
      | OpenCLAccessAttr x ->
        Bi_outbuf.add_char4 ob '\174' 'X' 's' '\232';
        (
          write_attribute_info
        ) ob x
      | OverloadableAttr x ->
        Bi_outbuf.add_char4 ob '\250' 'P' '\215' '\133';
        (
          write_attribute_info
        ) ob x
      | RenderScriptKernelAttr x ->
        Bi_outbuf.add_char4 ob '\206' '\006' '\183' '\015';
        (
          write_attribute_info
        ) ob x
      | ThreadAttr x ->
        Bi_outbuf.add_char4 ob '\178' '\239' '\245' ';';
        (
          write_attribute_info
        ) ob x
)
let write_attribute ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_attribute ob x
let string_of_attribute ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_attribute ob x;
  Bi_outbuf.contents ob
let get_attribute_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 186296123, true -> (FallThroughAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -557376730, true -> (SuppressAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -976743987, true -> (SwiftContextAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -69773277, true -> (SwiftErrorResultAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -472976465, true -> (SwiftIndirectResultAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 142894333, true -> (AnnotateAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -132548676, true -> (CFConsumedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 761556309, true -> (CarriesDependencyAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -531469218, true -> (NSConsumedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 1066973541, true -> (NonNullAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -1012696766, true -> (PassObjectSizeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 484637843, true -> (AMDGPUFlatWorkGroupSizeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -1004424871, true -> (AMDGPUNumSGPRAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -273086538, true -> (AMDGPUNumVGPRAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -1049803592, true -> (AMDGPUWavesPerEUAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -414297960, true -> (ARMInterruptAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 144666743, true -> (AVRInterruptAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -179381290, true -> (AVRSignalAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 188507007, true -> (AcquireCapabilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 1040323487, true -> (AcquiredAfterAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 150179550, true -> (AcquiredBeforeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 933297424, true -> (AlignMac68kAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -539390571, true -> (AlignedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -1002635391, true -> (AllocAlignAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -132674553, true -> (AllocSizeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -941696007, true -> (AlwaysInlineAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 566748808, true -> (AnalyzerNoReturnAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -1040034294, true -> (AnyX86InterruptAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -153251216, true -> (AnyX86NoCallerSavedRegistersAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 617623512, true -> (ArcWeakrefUnavailableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -405405042, true -> (ArgumentWithTypeTagAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -388280662, true -> (AsmLabelAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -375726417, true -> (AssertCapabilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -274190348, true -> (AssertExclusiveLockAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -890317817, true -> (AssertSharedLockAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 606070409, true -> (AssumeAlignedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 959196108, true -> (AvailabilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 491468535, true -> (BlocksAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -688276443, true -> (C11NoReturnAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 1048006174, true -> (CDeclAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 50532915, true -> (CFAuditedTransferAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 346721000, true -> (CFReturnsNotRetainedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -31786955, true -> (CFReturnsRetainedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -525119549, true -> (CFUnknownTransferAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 446081540, true -> (CUDAConstantAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -330693514, true -> (CUDADeviceAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -110935101, true -> (CUDAGlobalAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 819623560, true -> (CUDAHostAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 754112330, true -> (CUDAInvalidTargetAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -716111064, true -> (CUDALaunchBoundsAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 669596165, true -> (CUDASharedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -839127067, true -> (CXX11NoReturnAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -219639165, true -> (CallableWhenAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 44047689, true -> (CapabilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 829520704, true -> (CapturedRecordAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 220647253, true -> (CleanupAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -303128683, true -> (ColdAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 1011364892, true -> (CommonAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -786690028, true -> (ConstAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -36469973, true -> (ConstructorAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 561549204, true -> (ConsumableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -647666814, true -> (ConsumableAutoCastAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -595020955, true -> (ConsumableSetOnReadAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 30137782, true -> (ConvergentAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 462643625, true -> (DLLExportAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 207470106, true -> (DLLImportAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -137883036, true -> (DeprecatedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -652785366, true -> (DestructorAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -611564884, true -> (DiagnoseIfAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -738721202, true -> (DisableTailCallsAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 945174886, true -> (EmptyBasesAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -733476175, true -> (EnableIfAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -421213607, true -> (EnumExtensibilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 749585937, true -> (ExclusiveTrylockFunctionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 353147375, true -> (ExternalSourceSymbolAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 141348811, true -> (FastCallAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 622885799, true -> (FinalAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 303392958, true -> (FlagEnumAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -273105163, true -> (FlattenAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -158579672, true -> (FormatAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -856721392, true -> (FormatArgAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 556173848, true -> (GNUInlineAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -901798356, true -> (GuardedByAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -377820236, true -> (GuardedVarAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 158402366, true -> (HotAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 995853632, true -> (IBActionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 100514071, true -> (IBOutletAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -167291371, true -> (IBOutletCollectionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -935984635, true -> (InitPriorityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -151111014, true -> (IntelOclBiccAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -588288903, true -> (InternalLinkageAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 565955923, true -> (LTOVisibilityPublicAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 335532479, true -> (LayoutVersionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 354647691, true -> (LockReturnedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 249163971, true -> (LocksExcludedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 604516083, true -> (MSABIAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 710179797, true -> (MSInheritanceAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -47124176, true -> (MSNoVTableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 424188429, true -> (MSP430InterruptAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 18781484, true -> (MSStructAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -648301766, true -> (MSVtorDispAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -686915522, true -> (MaxFieldAlignmentAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -403650660, true -> (MayAliasAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -853964236, true -> (MicroMipsAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -114874844, true -> (MinSizeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -368070539, true -> (Mips16Attr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -983433099, true -> (MipsInterruptAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -650667111, true -> (NSConsumesSelfAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -174189925, true -> (NSReturnsAutoreleasedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -35889654, true -> (NSReturnsNotRetainedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -745227309, true -> (NSReturnsRetainedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -191849496, true -> (NakedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 233974336, true -> (NoAliasAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 621550525, true -> (NoCommonAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -375175037, true -> (NoDebugAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -75518149, true -> (NoDuplicateAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -547708949, true -> (NoInlineAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -40175759, true -> (NoInstrumentFunctionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 451632435, true -> (NoMicroMipsAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -757884906, true -> (NoMips16Attr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 1008333250, true -> (NoReturnAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -316939269, true -> (NoSanitizeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 321986208, true -> (NoSplitStackAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 546957002, true -> (NoThreadSafetyAnalysisAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 770554070, true -> (NoThrowAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -116295855, true -> (NotTailCalledAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 756831254, true -> (OMPCaptureNoInitAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -995658654, true -> (OMPThreadPrivateDeclAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -218684922, true -> (ObjCBridgeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -551025726, true -> (ObjCBridgeMutableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -739666809, true -> (ObjCBridgeRelatedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -989593356, true -> (ObjCExceptionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -262381975, true -> (ObjCExplicitProtocolImplAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -210889893, true -> (ObjCIndependentClassAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -241741342, true -> (ObjCMethodFamilyAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -417006911, true -> (ObjCNSObjectAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 892288681, true -> (ObjCPreciseLifetimeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 672897806, true -> (ObjCRequiresPropertyDefsAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 965092050, true -> (ObjCRequiresSuperAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -730162353, true -> (ObjCReturnsInnerPointerAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 513355483, true -> (ObjCRootClassAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -318367222, true -> (ObjCSubclassingRestrictedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 737824090, true -> (OpenCLIntelReqdSubGroupSizeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 109884545, true -> (OpenCLKernelAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 671494977, true -> (OpenCLUnrollHintAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -232922586, true -> (OptimizeNoneAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -759771715, true -> (OverrideAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -52332000, true -> (OwnershipAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 640008425, true -> (PackedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -1062903493, true -> (ParamTypestateAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -295149731, true -> (PascalAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -160574383, true -> (PcsAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -179581047, true -> (PragmaClangBSSSectionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 721741271, true -> (PragmaClangDataSectionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 804216698, true -> (PragmaClangRodataSectionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -39106508, true -> (PragmaClangTextSectionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 720108646, true -> (PreserveAllAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 384292704, true -> (PreserveMostAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 258693512, true -> (PtGuardedByAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 713828568, true -> (PtGuardedVarAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -930483607, true -> (PureAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -961041853, true -> (RegCallAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 343458096, true -> (ReleaseCapabilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 760982554, true -> (ReqdWorkGroupSizeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -758361270, true -> (RequireConstantInitAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -598489257, true -> (RequiresCapabilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -271798611, true -> (RestrictAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 370439928, true -> (ReturnTypestateAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -645723998, true -> (ReturnsNonNullAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -124853034, true -> (ReturnsTwiceAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 970662758, true -> (ScopedLockableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 352533910, true -> (SectionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 677191297, true -> (SelectAnyAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -289462187, true -> (SentinelAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -354487034, true -> (SetTypestateAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 999448682, true -> (SharedTrylockFunctionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 320790674, true -> (StdCallAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -22757438, true -> (SwiftCallAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -893089296, true -> (SysVABIAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -411270625, true -> (TLSModelAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 290962754, true -> (TargetAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 168132118, true -> (TestTypestateAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -786455155, true -> (ThisCallAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 311494734, true -> (TransparentUnionAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -288064892, true -> (TryAcquireCapabilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 917967390, true -> (TypeTagForDatatypeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -904690531, true -> (TypeVisibilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 595827073, true -> (UnavailableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -267114105, true -> (UnusedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -850331090, true -> (UsedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 971594028, true -> (UuidAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 143256917, true -> (VecReturnAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 1067955078, true -> (VecTypeHintAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -809696014, true -> (VectorCallAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -273490877, true -> (VisibilityAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 767292269, true -> (WarnUnusedAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 285741034, true -> (WarnUnusedResultAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -404095511, true -> (WeakAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 850934766, true -> (WeakImportAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 413149804, true -> (WeakRefAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -257617689, true -> (WorkGroupSizeHintAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 253525448, true -> (X86ForceAlignArgPointerAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -813164534, true -> (XRayInstrumentAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 811930240, true -> (XRayLogArgsAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -264146621, true -> (AbiTagAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -370965823, true -> (AliasAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -83529251, true -> (AlignValueAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -215100418, true -> (IFuncAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 643947030, true -> (InitSegAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 615975164, true -> (LoopHintAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 175294036, true -> (ModeAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -289800640, true -> (OMPDeclareSimdDeclAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -525464028, true -> (OMPDeclareTargetDeclAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 708854730, true -> (ObjCBoxableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 375699415, true -> (ObjCDesignatedInitializerAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -201672984, true -> (ObjCRuntimeNameAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -259420041, true -> (ObjCRuntimeVisibleAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 777548776, true -> (OpenCLAccessAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -95365243, true -> (OverloadableAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | -838420721, true -> (RenderScriptKernelAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | 854586683, true -> (ThreadAttr (
                (
                  read_attribute_info
                ) ib
              ) : attribute)
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_attribute = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 186296123, true -> (FallThroughAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -557376730, true -> (SuppressAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -976743987, true -> (SwiftContextAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -69773277, true -> (SwiftErrorResultAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -472976465, true -> (SwiftIndirectResultAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 142894333, true -> (AnnotateAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -132548676, true -> (CFConsumedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 761556309, true -> (CarriesDependencyAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -531469218, true -> (NSConsumedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 1066973541, true -> (NonNullAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -1012696766, true -> (PassObjectSizeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 484637843, true -> (AMDGPUFlatWorkGroupSizeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -1004424871, true -> (AMDGPUNumSGPRAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -273086538, true -> (AMDGPUNumVGPRAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -1049803592, true -> (AMDGPUWavesPerEUAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -414297960, true -> (ARMInterruptAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 144666743, true -> (AVRInterruptAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -179381290, true -> (AVRSignalAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 188507007, true -> (AcquireCapabilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 1040323487, true -> (AcquiredAfterAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 150179550, true -> (AcquiredBeforeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 933297424, true -> (AlignMac68kAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -539390571, true -> (AlignedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -1002635391, true -> (AllocAlignAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -132674553, true -> (AllocSizeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -941696007, true -> (AlwaysInlineAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 566748808, true -> (AnalyzerNoReturnAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -1040034294, true -> (AnyX86InterruptAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -153251216, true -> (AnyX86NoCallerSavedRegistersAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 617623512, true -> (ArcWeakrefUnavailableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -405405042, true -> (ArgumentWithTypeTagAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -388280662, true -> (AsmLabelAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -375726417, true -> (AssertCapabilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -274190348, true -> (AssertExclusiveLockAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -890317817, true -> (AssertSharedLockAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 606070409, true -> (AssumeAlignedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 959196108, true -> (AvailabilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 491468535, true -> (BlocksAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -688276443, true -> (C11NoReturnAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 1048006174, true -> (CDeclAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 50532915, true -> (CFAuditedTransferAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 346721000, true -> (CFReturnsNotRetainedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -31786955, true -> (CFReturnsRetainedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -525119549, true -> (CFUnknownTransferAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 446081540, true -> (CUDAConstantAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -330693514, true -> (CUDADeviceAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -110935101, true -> (CUDAGlobalAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 819623560, true -> (CUDAHostAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 754112330, true -> (CUDAInvalidTargetAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -716111064, true -> (CUDALaunchBoundsAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 669596165, true -> (CUDASharedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -839127067, true -> (CXX11NoReturnAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -219639165, true -> (CallableWhenAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 44047689, true -> (CapabilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 829520704, true -> (CapturedRecordAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 220647253, true -> (CleanupAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -303128683, true -> (ColdAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 1011364892, true -> (CommonAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -786690028, true -> (ConstAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -36469973, true -> (ConstructorAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 561549204, true -> (ConsumableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -647666814, true -> (ConsumableAutoCastAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -595020955, true -> (ConsumableSetOnReadAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 30137782, true -> (ConvergentAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 462643625, true -> (DLLExportAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 207470106, true -> (DLLImportAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -137883036, true -> (DeprecatedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -652785366, true -> (DestructorAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -611564884, true -> (DiagnoseIfAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -738721202, true -> (DisableTailCallsAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 945174886, true -> (EmptyBasesAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -733476175, true -> (EnableIfAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -421213607, true -> (EnumExtensibilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 749585937, true -> (ExclusiveTrylockFunctionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 353147375, true -> (ExternalSourceSymbolAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 141348811, true -> (FastCallAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 622885799, true -> (FinalAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 303392958, true -> (FlagEnumAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -273105163, true -> (FlattenAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -158579672, true -> (FormatAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -856721392, true -> (FormatArgAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 556173848, true -> (GNUInlineAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -901798356, true -> (GuardedByAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -377820236, true -> (GuardedVarAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 158402366, true -> (HotAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 995853632, true -> (IBActionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 100514071, true -> (IBOutletAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -167291371, true -> (IBOutletCollectionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -935984635, true -> (InitPriorityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -151111014, true -> (IntelOclBiccAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -588288903, true -> (InternalLinkageAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 565955923, true -> (LTOVisibilityPublicAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 335532479, true -> (LayoutVersionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 354647691, true -> (LockReturnedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 249163971, true -> (LocksExcludedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 604516083, true -> (MSABIAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 710179797, true -> (MSInheritanceAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -47124176, true -> (MSNoVTableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 424188429, true -> (MSP430InterruptAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 18781484, true -> (MSStructAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -648301766, true -> (MSVtorDispAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -686915522, true -> (MaxFieldAlignmentAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -403650660, true -> (MayAliasAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -853964236, true -> (MicroMipsAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -114874844, true -> (MinSizeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -368070539, true -> (Mips16Attr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -983433099, true -> (MipsInterruptAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -650667111, true -> (NSConsumesSelfAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -174189925, true -> (NSReturnsAutoreleasedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -35889654, true -> (NSReturnsNotRetainedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -745227309, true -> (NSReturnsRetainedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -191849496, true -> (NakedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 233974336, true -> (NoAliasAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 621550525, true -> (NoCommonAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -375175037, true -> (NoDebugAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -75518149, true -> (NoDuplicateAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -547708949, true -> (NoInlineAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -40175759, true -> (NoInstrumentFunctionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 451632435, true -> (NoMicroMipsAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -757884906, true -> (NoMips16Attr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 1008333250, true -> (NoReturnAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -316939269, true -> (NoSanitizeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 321986208, true -> (NoSplitStackAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 546957002, true -> (NoThreadSafetyAnalysisAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 770554070, true -> (NoThrowAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -116295855, true -> (NotTailCalledAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 756831254, true -> (OMPCaptureNoInitAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -995658654, true -> (OMPThreadPrivateDeclAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -218684922, true -> (ObjCBridgeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -551025726, true -> (ObjCBridgeMutableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -739666809, true -> (ObjCBridgeRelatedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -989593356, true -> (ObjCExceptionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -262381975, true -> (ObjCExplicitProtocolImplAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -210889893, true -> (ObjCIndependentClassAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -241741342, true -> (ObjCMethodFamilyAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -417006911, true -> (ObjCNSObjectAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 892288681, true -> (ObjCPreciseLifetimeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 672897806, true -> (ObjCRequiresPropertyDefsAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 965092050, true -> (ObjCRequiresSuperAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -730162353, true -> (ObjCReturnsInnerPointerAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 513355483, true -> (ObjCRootClassAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -318367222, true -> (ObjCSubclassingRestrictedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 737824090, true -> (OpenCLIntelReqdSubGroupSizeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 109884545, true -> (OpenCLKernelAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 671494977, true -> (OpenCLUnrollHintAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -232922586, true -> (OptimizeNoneAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -759771715, true -> (OverrideAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -52332000, true -> (OwnershipAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 640008425, true -> (PackedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -1062903493, true -> (ParamTypestateAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -295149731, true -> (PascalAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -160574383, true -> (PcsAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -179581047, true -> (PragmaClangBSSSectionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 721741271, true -> (PragmaClangDataSectionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 804216698, true -> (PragmaClangRodataSectionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -39106508, true -> (PragmaClangTextSectionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 720108646, true -> (PreserveAllAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 384292704, true -> (PreserveMostAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 258693512, true -> (PtGuardedByAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 713828568, true -> (PtGuardedVarAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -930483607, true -> (PureAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -961041853, true -> (RegCallAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 343458096, true -> (ReleaseCapabilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 760982554, true -> (ReqdWorkGroupSizeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -758361270, true -> (RequireConstantInitAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -598489257, true -> (RequiresCapabilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -271798611, true -> (RestrictAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 370439928, true -> (ReturnTypestateAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -645723998, true -> (ReturnsNonNullAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -124853034, true -> (ReturnsTwiceAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 970662758, true -> (ScopedLockableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 352533910, true -> (SectionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 677191297, true -> (SelectAnyAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -289462187, true -> (SentinelAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -354487034, true -> (SetTypestateAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 999448682, true -> (SharedTrylockFunctionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 320790674, true -> (StdCallAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -22757438, true -> (SwiftCallAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -893089296, true -> (SysVABIAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -411270625, true -> (TLSModelAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 290962754, true -> (TargetAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 168132118, true -> (TestTypestateAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -786455155, true -> (ThisCallAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 311494734, true -> (TransparentUnionAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -288064892, true -> (TryAcquireCapabilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 917967390, true -> (TypeTagForDatatypeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -904690531, true -> (TypeVisibilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 595827073, true -> (UnavailableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -267114105, true -> (UnusedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -850331090, true -> (UsedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 971594028, true -> (UuidAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 143256917, true -> (VecReturnAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 1067955078, true -> (VecTypeHintAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -809696014, true -> (VectorCallAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -273490877, true -> (VisibilityAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 767292269, true -> (WarnUnusedAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 285741034, true -> (WarnUnusedResultAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -404095511, true -> (WeakAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 850934766, true -> (WeakImportAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 413149804, true -> (WeakRefAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -257617689, true -> (WorkGroupSizeHintAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 253525448, true -> (X86ForceAlignArgPointerAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -813164534, true -> (XRayInstrumentAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 811930240, true -> (XRayLogArgsAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -264146621, true -> (AbiTagAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -370965823, true -> (AliasAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -83529251, true -> (AlignValueAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -215100418, true -> (IFuncAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 643947030, true -> (InitSegAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 615975164, true -> (LoopHintAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 175294036, true -> (ModeAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -289800640, true -> (OMPDeclareSimdDeclAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -525464028, true -> (OMPDeclareTargetDeclAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 708854730, true -> (ObjCBoxableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 375699415, true -> (ObjCDesignatedInitializerAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -201672984, true -> (ObjCRuntimeNameAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -259420041, true -> (ObjCRuntimeVisibleAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 777548776, true -> (OpenCLAccessAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -95365243, true -> (OverloadableAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | -838420721, true -> (RenderScriptKernelAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | 854586683, true -> (ThreadAttr (
            (
              read_attribute_info
            ) ib
          ) : attribute)
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let attribute_of_string ?pos s =
  read_attribute (Bi_inbuf.from_string ?pos s)
let _12_tag = Bi_io.array_tag
let write_untagged__12 = (
  Ag_ob_run.write_untagged_list
    attribute_tag
    (
      write_untagged_attribute
    )
)
let write__12 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__12 ob x
let string_of__12 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__12 ob x;
  Bi_outbuf.contents ob
let get__12_reader = (
  Ag_ob_run.get_list_reader (
    get_attribute_reader
  )
)
let read__12 = (
  Ag_ob_run.read_list (
    get_attribute_reader
  )
)
let _12_of_string ?pos s =
  read__12 (Bi_inbuf.from_string ?pos s)
let comment_info_tag = Bi_io.record_tag
let write_untagged_comment_info : Bi_outbuf.t -> comment_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\249' '\000' 'Y' 'h';
    (
      write_pointer
    ) ob x.ci_parent_pointer;
    Bi_outbuf.add_char4 ob '\161' 'y' '4' '\025';
    (
      write_source_range
    ) ob x.ci_source_range;
)
let write_comment_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_comment_info ob x
let string_of_comment_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_comment_info ob x;
  Bi_outbuf.contents ob
let get_comment_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ci_parent_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ci_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -117417624 ->
              field_ci_parent_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 561591321 ->
              field_ci_source_range := (
                (
                  read_source_range
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "parent_pointer"; "source_range" |];
        (
          {
            ci_parent_pointer = !field_ci_parent_pointer;
            ci_source_range = !field_ci_source_range;
          }
         : comment_info)
)
let read_comment_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ci_parent_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ci_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -117417624 ->
          field_ci_parent_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 561591321 ->
          field_ci_source_range := (
            (
              read_source_range
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "parent_pointer"; "source_range" |];
    (
      {
        ci_parent_pointer = !field_ci_parent_pointer;
        ci_source_range = !field_ci_source_range;
      }
     : comment_info)
)
let comment_info_of_string ?pos s =
  read_comment_info (Bi_inbuf.from_string ?pos s)
let specifier_kind_tag = Bi_io.variant_tag
let write_untagged_specifier_kind = (
  fun ob x ->
    match x with
      | `Identifier -> Bi_outbuf.add_char4 ob 'D' '\221' '\204' '\137'
      | `Namespace -> Bi_outbuf.add_char4 ob '\t' '\192' '\202' '{'
      | `NamespaceAlias -> Bi_outbuf.add_char4 ob '\023' '\199' '\025' '\021'
      | `TypeSpec -> Bi_outbuf.add_char4 ob '\018' '\213' '\158' '5'
      | `TypeSpecWithTemplate -> Bi_outbuf.add_char4 ob 'I' '\183' 'v' '5'
      | `Global -> Bi_outbuf.add_char4 ob '\\' 'F' '\165' '\131'
      | `Super -> Bi_outbuf.add_char4 ob '\023' '\237' 'q' '['
)
let write_specifier_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_specifier_kind ob x
let string_of_specifier_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_specifier_kind ob x;
  Bi_outbuf.contents ob
let get_specifier_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -992097143, false -> `Identifier
            | 163629691, false -> `Namespace
            | 398924053, false -> `NamespaceAlias
            | 315989557, false -> `TypeSpec
            | -910723531, false -> `TypeSpecWithTemplate
            | -599349885, false -> `Global
            | 401437019, false -> `Super
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_specifier_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -992097143, false -> `Identifier
        | 163629691, false -> `Namespace
        | 398924053, false -> `NamespaceAlias
        | 315989557, false -> `TypeSpec
        | -910723531, false -> `TypeSpecWithTemplate
        | -599349885, false -> `Global
        | 401437019, false -> `Super
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let specifier_kind_of_string ?pos s =
  read_specifier_kind (Bi_inbuf.from_string ?pos s)
let stmt_info_tag = Bi_io.record_tag
let write_untagged_stmt_info : Bi_outbuf.t -> stmt_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\209' '!' '\192' '\189';
    (
      write_pointer
    ) ob x.si_pointer;
    Bi_outbuf.add_char4 ob '\161' 'y' '4' '\025';
    (
      write_source_range
    ) ob x.si_source_range;
)
let write_stmt_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_stmt_info ob x
let string_of_stmt_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_stmt_info ob x;
  Bi_outbuf.contents ob
let get_stmt_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_si_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_si_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -786317123 ->
              field_si_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 561591321 ->
              field_si_source_range := (
                (
                  read_source_range
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer"; "source_range" |];
        (
          {
            si_pointer = !field_si_pointer;
            si_source_range = !field_si_source_range;
          }
         : stmt_info)
)
let read_stmt_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_si_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_si_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -786317123 ->
          field_si_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 561591321 ->
          field_si_source_range := (
            (
              read_source_range
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer"; "source_range" |];
    (
      {
        si_pointer = !field_si_pointer;
        si_source_range = !field_si_source_range;
      }
     : stmt_info)
)
let stmt_info_of_string ?pos s =
  read_stmt_info (Bi_inbuf.from_string ?pos s)
let tag_kind_tag = Bi_io.variant_tag
let write_untagged_tag_kind = (
  fun ob x ->
    match x with
      | `TTK_Struct -> Bi_outbuf.add_char4 ob 'E' '\177' '\248' '\169'
      | `TTK_Interface -> Bi_outbuf.add_char4 ob 'n' 'r' '\031' '\229'
      | `TTK_Union -> Bi_outbuf.add_char4 ob '`' '\137' '\205' ';'
      | `TTK_Class -> Bi_outbuf.add_char4 ob '\001' '\250' '\224' 'd'
      | `TTK_Enum -> Bi_outbuf.add_char4 ob 'G' ']' ',' 'U'
)
let write_tag_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_tag_kind ob x
let string_of_tag_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_tag_kind ob x;
  Bi_outbuf.contents ob
let get_tag_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -978192215, false -> `TTK_Struct
            | -294510619, false -> `TTK_Interface
            | -527839941, false -> `TTK_Union
            | 33218660, false -> `TTK_Class
            | -950195115, false -> `TTK_Enum
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_tag_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -978192215, false -> `TTK_Struct
        | -294510619, false -> `TTK_Interface
        | -527839941, false -> `TTK_Union
        | 33218660, false -> `TTK_Class
        | -950195115, false -> `TTK_Enum
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let tag_kind_of_string ?pos s =
  read_tag_kind (Bi_inbuf.from_string ?pos s)
let tls_kind_tag = Bi_io.variant_tag
let write_untagged_tls_kind = (
  fun ob x ->
    match x with
      | `Tls_none -> Bi_outbuf.add_char4 ob 'F' '\193' '8' '\220'
      | `Tls_static -> Bi_outbuf.add_char4 ob '<' 'c' '\211' '\210'
      | `Tls_dynamic -> Bi_outbuf.add_char4 ob '\026' '\165' '\231' '\219'
)
let write_tls_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_tls_kind ob x
let string_of_tls_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_tls_kind ob x;
  Bi_outbuf.contents ob
let get_tls_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -960415524, false -> `Tls_none
            | 1013175250, false -> `Tls_static
            | 447080411, false -> `Tls_dynamic
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_tls_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -960415524, false -> `Tls_none
        | 1013175250, false -> `Tls_static
        | 447080411, false -> `Tls_dynamic
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let tls_kind_of_string ?pos s =
  read_tls_kind (Bi_inbuf.from_string ?pos s)
let type_attribute_kind_tag = Bi_io.variant_tag
let write_untagged_type_attribute_kind = (
  fun ob x ->
    match x with
      | `AddressSpace -> Bi_outbuf.add_char4 ob 'c' '\190' '*' '\146'
      | `Regparm -> Bi_outbuf.add_char4 ob 'L' '\131' '\031' ' '
      | `VectorSize -> Bi_outbuf.add_char4 ob '\004' '\246' '\159' 'D'
      | `NeonVectorSize -> Bi_outbuf.add_char4 ob '<' 'J' '\'' '\250'
      | `NeonPolyVectorSize -> Bi_outbuf.add_char4 ob 'f' '\031' '$' 'f'
      | `ObjcGc -> Bi_outbuf.add_char4 ob 'I' '\210' 'U' '\232'
      | `ObjcOwnership -> Bi_outbuf.add_char4 ob 'I' '\203' 'S' '#'
      | `Pcs -> Bi_outbuf.add_char4 ob '\000' '=' '\011' '\000'
      | `PcsVfp -> Bi_outbuf.add_char4 ob 'I' '}' 'p' ' '
      | `Noreturn -> Bi_outbuf.add_char4 ob '~' 'Z' '\231' '\209'
      | `Cdecl -> Bi_outbuf.add_char4 ob 'V' '?' '.' '-'
      | `Fastcall -> Bi_outbuf.add_char4 ob 'l' '\173' '\021' 'Z'
      | `Stdcall -> Bi_outbuf.add_char4 ob '2' '\167' 'v' '\161'
      | `Thiscall -> Bi_outbuf.add_char4 ob '\029' '\141' 'b' '\028'
      | `Pascal -> Bi_outbuf.add_char4 ob '"' '\186' ' ' '\012'
      | `Vectorcall -> Bi_outbuf.add_char4 ob '\015' '\131' '\235' '\001'
      | `Inteloclbicc -> Bi_outbuf.add_char4 ob '(' '\238' '\004' '\201'
      | `MsAbi -> Bi_outbuf.add_char4 ob '"' '\015' '\220' '\130'
      | `SysvAbi -> Bi_outbuf.add_char4 ob 'a' '\233' '\180' '\255'
      | `Ptr32 -> Bi_outbuf.add_char4 ob ']' '\017' '\213' '\237'
      | `Ptr64 -> Bi_outbuf.add_char4 ob ']' '\017' '\216' '\140'
      | `Sptr -> Bi_outbuf.add_char4 ob '7' '2' '\023' '{'
      | `Uptr -> Bi_outbuf.add_char4 ob '8' '\132' '\132' '\185'
      | `Nonnull -> Bi_outbuf.add_char4 ob ',' 'I' '\169' '\244'
      | `Nullable -> Bi_outbuf.add_char4 ob '\012' '\232' '\023' '\193'
      | `NullUnspecified -> Bi_outbuf.add_char4 ob 'p' 'Q' 't' 'P'
      | `ObjcKindof -> Bi_outbuf.add_char4 ob '\021' '\238' '\017' '7'
      | `ObjcInsertUnsafeUnretained -> Bi_outbuf.add_char4 ob 'k' 'U' 'i' '\168'
      | `Swiftcall -> Bi_outbuf.add_char4 ob ']' '\161' '\253' '\209'
      | `PreserveMost -> Bi_outbuf.add_char4 ob ',' '\246' '\154' '\143'
      | `PreserveAll -> Bi_outbuf.add_char4 ob '\002' 'v' 'D' '\149'
      | `Regcall -> Bi_outbuf.add_char4 ob 'C' '\235' 'S' '\210'
)
let write_type_attribute_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_type_attribute_kind ob x
let string_of_type_attribute_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_type_attribute_kind ob x;
  Bi_outbuf.contents ob
let get_type_attribute_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -474076526, false -> `AddressSpace
            | -863822048, false -> `Regparm
            | 83271492, false -> `VectorSize
            | 1011492858, false -> `NeonVectorSize
            | -434166682, false -> `NeonPolyVectorSize
            | -908962328, false -> `ObjcGc
            | -909421789, false -> `ObjcOwnership
            | 4000512, false -> `Pcs
            | -914526176, false -> `PcsVfp
            | -27596847, false -> `Noreturn
            | -700502483, false -> `Cdecl
            | -324201126, false -> `Fastcall
            | 849835681, false -> `Stdcall
            | 495804956, false -> `Thiscall
            | 582623244, false -> `Pascal
            | 260303617, false -> `Vectorcall
            | 686687433, false -> `Inteloclbicc
            | 571464834, false -> `MsAbi
            | -504777473, false -> `SysvAbi
            | -586033683, false -> `Ptr32
            | -586033012, false -> `Ptr64
            | 926029691, false -> `Sptr
            | 948208825, false -> `Uptr
            | 743025140, false -> `Nonnull
            | 216537025, false -> `Nullable
            | -263097264, false -> `NullUnspecified
            | 367923511, false -> `ObjcKindof
            | -346723928, false -> `ObjcInsertUnsafeUnretained
            | -576586287, false -> `Swiftcall
            | 754358927, false -> `PreserveMost
            | 41305237, false -> `PreserveAll
            | -1007987758, false -> `Regcall
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_type_attribute_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -474076526, false -> `AddressSpace
        | -863822048, false -> `Regparm
        | 83271492, false -> `VectorSize
        | 1011492858, false -> `NeonVectorSize
        | -434166682, false -> `NeonPolyVectorSize
        | -908962328, false -> `ObjcGc
        | -909421789, false -> `ObjcOwnership
        | 4000512, false -> `Pcs
        | -914526176, false -> `PcsVfp
        | -27596847, false -> `Noreturn
        | -700502483, false -> `Cdecl
        | -324201126, false -> `Fastcall
        | 849835681, false -> `Stdcall
        | 495804956, false -> `Thiscall
        | 582623244, false -> `Pascal
        | 260303617, false -> `Vectorcall
        | 686687433, false -> `Inteloclbicc
        | 571464834, false -> `MsAbi
        | -504777473, false -> `SysvAbi
        | -586033683, false -> `Ptr32
        | -586033012, false -> `Ptr64
        | 926029691, false -> `Sptr
        | 948208825, false -> `Uptr
        | 743025140, false -> `Nonnull
        | 216537025, false -> `Nullable
        | -263097264, false -> `NullUnspecified
        | 367923511, false -> `ObjcKindof
        | -346723928, false -> `ObjcInsertUnsafeUnretained
        | -576586287, false -> `Swiftcall
        | 754358927, false -> `PreserveMost
        | 41305237, false -> `PreserveAll
        | -1007987758, false -> `Regcall
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let type_attribute_kind_of_string ?pos s =
  read_type_attribute_kind (Bi_inbuf.from_string ?pos s)
let attr_type_info_tag = Bi_io.record_tag
let write_untagged_attr_type_info : Bi_outbuf.t -> attr_type_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_ati_lifetime = x.ati_lifetime in
    if x_ati_lifetime != `OCL_None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\190' '\216' 'n' 'b';
    (
      write_type_attribute_kind
    ) ob x.ati_attr_kind;
    if x_ati_lifetime != `OCL_None then (
      Bi_outbuf.add_char4 ob '\236' 'r' '\011' '\t';
      (
        write_objc_lifetime_attr
      ) ob x_ati_lifetime;
    );
)
let write_attr_type_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_attr_type_info ob x
let string_of_attr_type_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_attr_type_info ob x;
  Bi_outbuf.contents ob
let get_attr_type_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ati_attr_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ati_lifetime = ref (`OCL_None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 1054371426 ->
              field_ati_attr_kind := (
                (
                  read_type_attribute_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -328070391 ->
              field_ati_lifetime := (
                (
                  read_objc_lifetime_attr
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "attr_kind" |];
        (
          {
            ati_attr_kind = !field_ati_attr_kind;
            ati_lifetime = !field_ati_lifetime;
          }
         : attr_type_info)
)
let read_attr_type_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ati_attr_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ati_lifetime = ref (`OCL_None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 1054371426 ->
          field_ati_attr_kind := (
            (
              read_type_attribute_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -328070391 ->
          field_ati_lifetime := (
            (
              read_objc_lifetime_attr
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "attr_kind" |];
    (
      {
        ati_attr_kind = !field_ati_attr_kind;
        ati_lifetime = !field_ati_lifetime;
      }
     : attr_type_info)
)
let attr_type_info_of_string ?pos s =
  read_attr_type_info (Bi_inbuf.from_string ?pos s)
let type_ptr_tag = Bi_io.svint_tag
let write_untagged_type_ptr = (
  write_untagged__30
)
let write_type_ptr ob x =
  Bi_io.write_tag ob Bi_io.svint_tag;
  write_untagged_type_ptr ob x
let string_of_type_ptr ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_type_ptr ob x;
  Bi_outbuf.contents ob
let get_type_ptr_reader = (
  get__30_reader
)
let read_type_ptr = (
  read__30
)
let type_ptr_of_string ?pos s =
  read_type_ptr (Bi_inbuf.from_string ?pos s)
let _20_tag = Bi_io.array_tag
let write_untagged__20 = (
  Ag_ob_run.write_untagged_list
    type_ptr_tag
    (
      write_untagged_type_ptr
    )
)
let write__20 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__20 ob x
let string_of__20 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__20 ob x;
  Bi_outbuf.contents ob
let get__20_reader = (
  Ag_ob_run.get_list_reader (
    get_type_ptr_reader
  )
)
let read__20 = (
  Ag_ob_run.read_list (
    get_type_ptr_reader
  )
)
let _20_of_string ?pos s =
  read__20 (Bi_inbuf.from_string ?pos s)
let _31_tag = Bi_io.num_variant_tag
let write_untagged__31 = (
  Ag_ob_run.write_untagged_option (
    write_type_ptr
  )
)
let write__31 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__31 ob x
let string_of__31 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__31 ob x;
  Bi_outbuf.contents ob
let get__31_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_type_ptr
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__31 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_type_ptr
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _31_of_string ?pos s =
  read__31 (Bi_inbuf.from_string ?pos s)
let qual_type_tag = Bi_io.record_tag
let write_untagged_qual_type : Bi_outbuf.t -> qual_type -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_qt_is_const = x.qt_is_const in
    if x_qt_is_const != false then incr len;
    let x_qt_is_restrict = x.qt_is_restrict in
    if x_qt_is_restrict != false then incr len;
    let x_qt_is_volatile = x.qt_is_volatile in
    if x_qt_is_volatile != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\193' '\018' '~' '\169';
    (
      write_type_ptr
    ) ob x.qt_type_ptr;
    if x_qt_is_const != false then (
      Bi_outbuf.add_char4 ob '\234' '\026' 'h' '\014';
      (
        Bi_io.write_bool
      ) ob x_qt_is_const;
    );
    if x_qt_is_restrict != false then (
      Bi_outbuf.add_char4 ob '\245' '\226' '\153' 'q';
      (
        Bi_io.write_bool
      ) ob x_qt_is_restrict;
    );
    if x_qt_is_volatile != false then (
      Bi_outbuf.add_char4 ob '\190' '\184' '\238' 'Q';
      (
        Bi_io.write_bool
      ) ob x_qt_is_volatile;
    );
)
let write_qual_type ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_qual_type ob x
let string_of_qual_type ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_qual_type ob x;
  Bi_outbuf.contents ob
let get_qual_type_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_qt_type_ptr = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_qt_is_const = ref (false) in
        let field_qt_is_restrict = ref (false) in
        let field_qt_is_volatile = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -1055752535 ->
              field_qt_type_ptr := (
                (
                  read_type_ptr
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -367368178 ->
              field_qt_is_const := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -169698959 ->
              field_qt_is_restrict := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 1052307025 ->
              field_qt_is_volatile := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "type_ptr" |];
        (
          {
            qt_type_ptr = !field_qt_type_ptr;
            qt_is_const = !field_qt_is_const;
            qt_is_restrict = !field_qt_is_restrict;
            qt_is_volatile = !field_qt_is_volatile;
          }
         : qual_type)
)
let read_qual_type = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_qt_type_ptr = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_qt_is_const = ref (false) in
    let field_qt_is_restrict = ref (false) in
    let field_qt_is_volatile = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -1055752535 ->
          field_qt_type_ptr := (
            (
              read_type_ptr
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -367368178 ->
          field_qt_is_const := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -169698959 ->
          field_qt_is_restrict := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 1052307025 ->
          field_qt_is_volatile := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "type_ptr" |];
    (
      {
        qt_type_ptr = !field_qt_type_ptr;
        qt_is_const = !field_qt_is_const;
        qt_is_restrict = !field_qt_is_restrict;
        qt_is_volatile = !field_qt_is_volatile;
      }
     : qual_type)
)
let qual_type_of_string ?pos s =
  read_qual_type (Bi_inbuf.from_string ?pos s)
let _32_tag = Bi_io.array_tag
let write_untagged__32 = (
  Ag_ob_run.write_untagged_list
    qual_type_tag
    (
      write_untagged_qual_type
    )
)
let write__32 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__32 ob x
let string_of__32 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__32 ob x;
  Bi_outbuf.contents ob
let get__32_reader = (
  Ag_ob_run.get_list_reader (
    get_qual_type_reader
  )
)
let read__32 = (
  Ag_ob_run.read_list (
    get_qual_type_reader
  )
)
let _32_of_string ?pos s =
  read__32 (Bi_inbuf.from_string ?pos s)
let _5_tag = Bi_io.num_variant_tag
let write_untagged__5 = (
  Ag_ob_run.write_untagged_option (
    write_qual_type
  )
)
let write__5 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__5 ob x
let string_of__5 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__5 ob x;
  Bi_outbuf.contents ob
let get__5_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_qual_type
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__5 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_qual_type
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _5_of_string ?pos s =
  read__5 (Bi_inbuf.from_string ?pos s)
let array_type_info_tag = Bi_io.record_tag
let write_untagged_array_type_info : Bi_outbuf.t -> array_type_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_arti_stride = x.arti_stride in
    if x_arti_stride != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\205' '&' 'v' ']';
    (
      write_qual_type
    ) ob x.arti_element_type;
    (match x_arti_stride with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\145' '0' ' ' '\025';
      (
        Bi_io.write_svint
      ) ob x;
    );
)
let write_array_type_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_array_type_info ob x
let string_of_array_type_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_array_type_info ob x;
  Bi_outbuf.contents ob
let get_array_type_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_arti_element_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_arti_stride = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -853117347 ->
              field_arti_element_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 288366617 ->
              field_arti_stride := (
                Some (
                  (
                    Ag_ob_run.read_int
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "element_type" |];
        (
          {
            arti_element_type = !field_arti_element_type;
            arti_stride = !field_arti_stride;
          }
         : array_type_info)
)
let read_array_type_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_arti_element_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_arti_stride = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -853117347 ->
          field_arti_element_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 288366617 ->
          field_arti_stride := (
            Some (
              (
                Ag_ob_run.read_int
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "element_type" |];
    (
      {
        arti_element_type = !field_arti_element_type;
        arti_stride = !field_arti_stride;
      }
     : array_type_info)
)
let array_type_info_of_string ?pos s =
  read_array_type_info (Bi_inbuf.from_string ?pos s)
let compound_assign_operator_info_tag = Bi_io.record_tag
let write_untagged_compound_assign_operator_info : Bi_outbuf.t -> compound_assign_operator_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\129' '$' '\240' '\194';
    (
      write_qual_type
    ) ob x.caoi_lhs_type;
    Bi_outbuf.add_char4 ob '\147' '{' 'd' '\156';
    (
      write_qual_type
    ) ob x.caoi_result_type;
)
let write_compound_assign_operator_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_compound_assign_operator_info ob x
let string_of_compound_assign_operator_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_compound_assign_operator_info ob x;
  Bi_outbuf.contents ob
let get_compound_assign_operator_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_caoi_lhs_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_caoi_result_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 19198146 ->
              field_caoi_lhs_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 326853788 ->
              field_caoi_result_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "lhs_type"; "result_type" |];
        (
          {
            caoi_lhs_type = !field_caoi_lhs_type;
            caoi_result_type = !field_caoi_result_type;
          }
         : compound_assign_operator_info)
)
let read_compound_assign_operator_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_caoi_lhs_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_caoi_result_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 19198146 ->
          field_caoi_lhs_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 326853788 ->
          field_caoi_result_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "lhs_type"; "result_type" |];
    (
      {
        caoi_lhs_type = !field_caoi_lhs_type;
        caoi_result_type = !field_caoi_result_type;
      }
     : compound_assign_operator_info)
)
let compound_assign_operator_info_of_string ?pos s =
  read_compound_assign_operator_info (Bi_inbuf.from_string ?pos s)
let cxx_delete_expr_info_tag = Bi_io.record_tag
let write_untagged_cxx_delete_expr_info : Bi_outbuf.t -> cxx_delete_expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_xdei_is_array = x.xdei_is_array in
    if x_xdei_is_array != false then incr len;
    Bi_vint.write_uvint ob !len;
    if x_xdei_is_array != false then (
      Bi_outbuf.add_char4 ob '\197' 'K' '\220' 'D';
      (
        Bi_io.write_bool
      ) ob x_xdei_is_array;
    );
    Bi_outbuf.add_char4 ob '\130' '\220' '\196' ' ';
    (
      write_qual_type
    ) ob x.xdei_destroyed_type;
)
let write_cxx_delete_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_delete_expr_info ob x
let string_of_cxx_delete_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_delete_expr_info ob x;
  Bi_outbuf.contents ob
let get_cxx_delete_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xdei_is_array = ref (false) in
        let field_xdei_destroyed_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -984884156 ->
              field_xdei_is_array := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 48022560 ->
              field_xdei_destroyed_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "destroyed_type" |];
        (
          {
            xdei_is_array = !field_xdei_is_array;
            xdei_destroyed_type = !field_xdei_destroyed_type;
          }
         : cxx_delete_expr_info)
)
let read_cxx_delete_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xdei_is_array = ref (false) in
    let field_xdei_destroyed_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -984884156 ->
          field_xdei_is_array := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 48022560 ->
          field_xdei_destroyed_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "destroyed_type" |];
    (
      {
        xdei_is_array = !field_xdei_is_array;
        xdei_destroyed_type = !field_xdei_destroyed_type;
      }
     : cxx_delete_expr_info)
)
let cxx_delete_expr_info_of_string ?pos s =
  read_cxx_delete_expr_info (Bi_inbuf.from_string ?pos s)
let decl_ref_tag = Bi_io.record_tag
let write_untagged_decl_ref : Bi_outbuf.t -> decl_ref -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_dr_name = x.dr_name in
    if x_dr_name != None then incr len;
    let x_dr_is_hidden = x.dr_is_hidden in
    if x_dr_is_hidden != false then incr len;
    let x_dr_qual_type = x.dr_qual_type in
    if x_dr_qual_type != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_decl_kind
    ) ob x.dr_kind;
    Bi_outbuf.add_char4 ob '\236' '\005' '\228' '\168';
    (
      write_pointer
    ) ob x.dr_decl_pointer;
    (match x_dr_name with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\200' '\255' 'r' 'K';
      (
        write_named_decl_info
      ) ob x;
    );
    if x_dr_is_hidden != false then (
      Bi_outbuf.add_char4 ob '\241' '\186' 'f' '_';
      (
        Bi_io.write_bool
      ) ob x_dr_is_hidden;
    );
    (match x_dr_qual_type with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\176' '\228' '\135' 'j';
      (
        write_qual_type
      ) ob x;
    );
)
let write_decl_ref ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_decl_ref ob x
let string_of_decl_ref ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_decl_ref ob x;
  Bi_outbuf.contents ob
let get_decl_ref_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_dr_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_dr_decl_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_dr_name = ref (None) in
        let field_dr_is_hidden = ref (false) in
        let field_dr_qual_type = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_dr_kind := (
                (
                  read_decl_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -335158104 ->
              field_dr_decl_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -922783157 ->
              field_dr_name := (
                Some (
                  (
                    read_named_decl_info
                  ) ib
                )
              );
            | -239442337 ->
              field_dr_is_hidden := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 820283242 ->
              field_dr_qual_type := (
                Some (
                  (
                    read_qual_type
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind"; "decl_pointer" |];
        (
          {
            dr_kind = !field_dr_kind;
            dr_decl_pointer = !field_dr_decl_pointer;
            dr_name = !field_dr_name;
            dr_is_hidden = !field_dr_is_hidden;
            dr_qual_type = !field_dr_qual_type;
          }
         : decl_ref)
)
let read_decl_ref = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_dr_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_dr_decl_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_dr_name = ref (None) in
    let field_dr_is_hidden = ref (false) in
    let field_dr_qual_type = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_dr_kind := (
            (
              read_decl_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -335158104 ->
          field_dr_decl_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -922783157 ->
          field_dr_name := (
            Some (
              (
                read_named_decl_info
              ) ib
            )
          );
        | -239442337 ->
          field_dr_is_hidden := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 820283242 ->
          field_dr_qual_type := (
            Some (
              (
                read_qual_type
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind"; "decl_pointer" |];
    (
      {
        dr_kind = !field_dr_kind;
        dr_decl_pointer = !field_dr_decl_pointer;
        dr_name = !field_dr_name;
        dr_is_hidden = !field_dr_is_hidden;
        dr_qual_type = !field_dr_qual_type;
      }
     : decl_ref)
)
let decl_ref_of_string ?pos s =
  read_decl_ref (Bi_inbuf.from_string ?pos s)
let _10_tag = Bi_io.num_variant_tag
let write_untagged__10 = (
  Ag_ob_run.write_untagged_option (
    write_decl_ref
  )
)
let write__10 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__10 ob x
let string_of__10 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__10 ob x;
  Bi_outbuf.contents ob
let get__10_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_decl_ref
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__10 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_decl_ref
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _10_of_string ?pos s =
  read__10 (Bi_inbuf.from_string ?pos s)
let _8_tag = Bi_io.array_tag
let write_untagged__8 = (
  Ag_ob_run.write_untagged_list
    decl_ref_tag
    (
      write_untagged_decl_ref
    )
)
let write__8 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__8 ob x
let string_of__8 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__8 ob x;
  Bi_outbuf.contents ob
let get__8_reader = (
  Ag_ob_run.get_list_reader (
    get_decl_ref_reader
  )
)
let read__8 = (
  Ag_ob_run.read_list (
    get_decl_ref_reader
  )
)
let _8_of_string ?pos s =
  read__8 (Bi_inbuf.from_string ?pos s)
let cxx_construct_expr_info_tag = Bi_io.record_tag
let write_untagged_cxx_construct_expr_info : Bi_outbuf.t -> cxx_construct_expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_xcei_is_elidable = x.xcei_is_elidable in
    if x_xcei_is_elidable != false then incr len;
    let x_xcei_requires_zero_initialization = x.xcei_requires_zero_initialization in
    if x_xcei_requires_zero_initialization != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\195' 'i' '\235' '\190';
    (
      write_decl_ref
    ) ob x.xcei_decl_ref;
    if x_xcei_is_elidable != false then (
      Bi_outbuf.add_char4 ob '\240' ',' '@' '\209';
      (
        Bi_io.write_bool
      ) ob x_xcei_is_elidable;
    );
    if x_xcei_requires_zero_initialization != false then (
      Bi_outbuf.add_char4 ob '\149' '\007' 'O' '\006';
      (
        Bi_io.write_bool
      ) ob x_xcei_requires_zero_initialization;
    );
)
let write_cxx_construct_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_construct_expr_info ob x
let string_of_cxx_construct_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_construct_expr_info ob x;
  Bi_outbuf.contents ob
let get_cxx_construct_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xcei_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_xcei_is_elidable = ref (false) in
        let field_xcei_requires_zero_initialization = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -1016468546 ->
              field_xcei_decl_ref := (
                (
                  read_decl_ref
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -265535279 ->
              field_xcei_is_elidable := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 352800518 ->
              field_xcei_requires_zero_initialization := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_ref" |];
        (
          {
            xcei_decl_ref = !field_xcei_decl_ref;
            xcei_is_elidable = !field_xcei_is_elidable;
            xcei_requires_zero_initialization = !field_xcei_requires_zero_initialization;
          }
         : cxx_construct_expr_info)
)
let read_cxx_construct_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xcei_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_xcei_is_elidable = ref (false) in
    let field_xcei_requires_zero_initialization = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -1016468546 ->
          field_xcei_decl_ref := (
            (
              read_decl_ref
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -265535279 ->
          field_xcei_is_elidable := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 352800518 ->
          field_xcei_requires_zero_initialization := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_ref" |];
    (
      {
        xcei_decl_ref = !field_xcei_decl_ref;
        xcei_is_elidable = !field_xcei_is_elidable;
        xcei_requires_zero_initialization = !field_xcei_requires_zero_initialization;
      }
     : cxx_construct_expr_info)
)
let cxx_construct_expr_info_of_string ?pos s =
  read_cxx_construct_expr_info (Bi_inbuf.from_string ?pos s)
let cxx_ctor_initializer_subject_tag = Bi_io.variant_tag
let write_untagged_cxx_ctor_initializer_subject = (
  fun ob x ->
    match x with
      | `Member x ->
        Bi_outbuf.add_char4 ob '\185' 'J' 'V' 'z';
        (
          write_decl_ref
        ) ob x
      | `Delegating x ->
        Bi_outbuf.add_char4 ob '\171' '\227' '\127' '\226';
        (
          write_type_ptr
        ) ob x
      | `BaseClass x ->
        Bi_outbuf.add_char4 ob '\250' '\016' '\002' 'G';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_ptr
              ) ob x
            );
            (
              let _, x = x in (
                Bi_io.write_bool
              ) ob x
            );
        ) ob x
)
let write_cxx_ctor_initializer_subject ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_cxx_ctor_initializer_subject ob x
let string_of_cxx_ctor_initializer_subject ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_ctor_initializer_subject ob x;
  Bi_outbuf.contents ob
let get_cxx_ctor_initializer_subject_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 961173114, true -> (`Member (
                (
                  read_decl_ref
                ) ib
              ))
            | 736329698, true -> (`Delegating (
                (
                  read_type_ptr
                ) ib
              ))
            | -99614137, true -> (`BaseClass (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    let x1 =
                      (
                        Ag_ob_run.read_bool
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ))
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_cxx_ctor_initializer_subject = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 961173114, true -> (`Member (
            (
              read_decl_ref
            ) ib
          ))
        | 736329698, true -> (`Delegating (
            (
              read_type_ptr
            ) ib
          ))
        | -99614137, true -> (`BaseClass (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_ptr
                  ) ib
                in
                let x1 =
                  (
                    Ag_ob_run.read_bool
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ))
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let cxx_ctor_initializer_subject_of_string ?pos s =
  read_cxx_ctor_initializer_subject (Bi_inbuf.from_string ?pos s)
let decl_ref_expr_info_tag = Bi_io.record_tag
let write_untagged_decl_ref_expr_info : Bi_outbuf.t -> decl_ref_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_drti_decl_ref = x.drti_decl_ref in
    if x_drti_decl_ref != None then incr len;
    let x_drti_found_decl_ref = x.drti_found_decl_ref in
    if x_drti_found_decl_ref != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_drti_decl_ref with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\195' 'i' '\235' '\190';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_drti_found_decl_ref with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\227' '\171' '\136' '\155';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_decl_ref_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_decl_ref_expr_info ob x
let string_of_decl_ref_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_decl_ref_expr_info ob x;
  Bi_outbuf.contents ob
let get_decl_ref_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_drti_decl_ref = ref (None) in
        let field_drti_found_decl_ref = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -1016468546 ->
              field_drti_decl_ref := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -475297637 ->
              field_drti_found_decl_ref := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            drti_decl_ref = !field_drti_decl_ref;
            drti_found_decl_ref = !field_drti_found_decl_ref;
          }
         : decl_ref_expr_info)
)
let read_decl_ref_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_drti_decl_ref = ref (None) in
    let field_drti_found_decl_ref = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -1016468546 ->
          field_drti_decl_ref := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -475297637 ->
          field_drti_found_decl_ref := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        drti_decl_ref = !field_drti_decl_ref;
        drti_found_decl_ref = !field_drti_found_decl_ref;
      }
     : decl_ref_expr_info)
)
let decl_ref_expr_info_of_string ?pos s =
  read_decl_ref_expr_info (Bi_inbuf.from_string ?pos s)
let expr_with_cleanups_info_tag = Bi_io.record_tag
let write_untagged_expr_with_cleanups_info : Bi_outbuf.t -> expr_with_cleanups_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ewci_decl_refs = x.ewci_decl_refs in
    if x_ewci_decl_refs != [] then incr len;
    Bi_vint.write_uvint ob !len;
    if x_ewci_decl_refs != [] then (
      Bi_outbuf.add_char4 ob '\185' 'D' 'Z' '\245';
      (
        write__8
      ) ob x_ewci_decl_refs;
    );
)
let write_expr_with_cleanups_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_expr_with_cleanups_info ob x
let string_of_expr_with_cleanups_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_expr_with_cleanups_info ob x;
  Bi_outbuf.contents ob
let get_expr_with_cleanups_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ewci_decl_refs = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 960781045 ->
              field_ewci_decl_refs := (
                (
                  read__8
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ewci_decl_refs = !field_ewci_decl_refs;
          }
         : expr_with_cleanups_info)
)
let read_expr_with_cleanups_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ewci_decl_refs = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 960781045 ->
          field_ewci_decl_refs := (
            (
              read__8
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ewci_decl_refs = !field_ewci_decl_refs;
      }
     : expr_with_cleanups_info)
)
let expr_with_cleanups_info_of_string ?pos s =
  read_expr_with_cleanups_info (Bi_inbuf.from_string ?pos s)
let function_type_info_tag = Bi_io.record_tag
let write_untagged_function_type_info : Bi_outbuf.t -> function_type_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 1;
    Bi_outbuf.add_char4 ob '\249' '\201' 'k' '\233';
    (
      write_qual_type
    ) ob x.fti_return_type;
)
let write_function_type_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_function_type_info ob x
let string_of_function_type_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_function_type_info ob x;
  Bi_outbuf.contents ob
let get_function_type_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_fti_return_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -104240151 ->
              field_fti_return_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "return_type" |];
        (
          {
            fti_return_type = !field_fti_return_type;
          }
         : function_type_info)
)
let read_function_type_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_fti_return_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -104240151 ->
          field_fti_return_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "return_type" |];
    (
      {
        fti_return_type = !field_fti_return_type;
      }
     : function_type_info)
)
let function_type_info_of_string ?pos s =
  read_function_type_info (Bi_inbuf.from_string ?pos s)
let materialize_temporary_expr_info_tag = Bi_io.record_tag
let write_untagged_materialize_temporary_expr_info : Bi_outbuf.t -> materialize_temporary_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_mtei_decl_ref = x.mtei_decl_ref in
    if x_mtei_decl_ref != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_mtei_decl_ref with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\195' 'i' '\235' '\190';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_materialize_temporary_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_materialize_temporary_expr_info ob x
let string_of_materialize_temporary_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_materialize_temporary_expr_info ob x;
  Bi_outbuf.contents ob
let get_materialize_temporary_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_mtei_decl_ref = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -1016468546 ->
              field_mtei_decl_ref := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            mtei_decl_ref = !field_mtei_decl_ref;
          }
         : materialize_temporary_expr_info)
)
let read_materialize_temporary_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_mtei_decl_ref = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -1016468546 ->
          field_mtei_decl_ref := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        mtei_decl_ref = !field_mtei_decl_ref;
      }
     : materialize_temporary_expr_info)
)
let materialize_temporary_expr_info_of_string ?pos s =
  read_materialize_temporary_expr_info (Bi_inbuf.from_string ?pos s)
let member_expr_info_tag = Bi_io.record_tag
let write_untagged_member_expr_info : Bi_outbuf.t -> member_expr_info -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_mei_is_arrow = x.mei_is_arrow in
    if x_mei_is_arrow != false then incr len;
    let x_mei_performs_virtual_dispatch = x.mei_performs_virtual_dispatch in
    if x_mei_performs_virtual_dispatch != false then incr len;
    Bi_vint.write_uvint ob !len;
    if x_mei_is_arrow != false then (
      Bi_outbuf.add_char4 ob '\197' 'K' '\232' 't';
      (
        Bi_io.write_bool
      ) ob x_mei_is_arrow;
    );
    if x_mei_performs_virtual_dispatch != false then (
      Bi_outbuf.add_char4 ob '\247' '\b' 'p' '\027';
      (
        Bi_io.write_bool
      ) ob x_mei_performs_virtual_dispatch;
    );
    Bi_outbuf.add_char4 ob '\200' '\255' 'r' 'K';
    (
      write_named_decl_info
    ) ob x.mei_name;
    Bi_outbuf.add_char4 ob '\195' 'i' '\235' '\190';
    (
      write_decl_ref
    ) ob x.mei_decl_ref;
)
let write_member_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_member_expr_info ob x
let string_of_member_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_member_expr_info ob x;
  Bi_outbuf.contents ob
let get_member_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_mei_is_arrow = ref (false) in
        let field_mei_performs_virtual_dispatch = ref (false) in
        let field_mei_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_mei_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -984881036 ->
              field_mei_is_arrow := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -150441957 ->
              field_mei_performs_virtual_dispatch := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -922783157 ->
              field_mei_name := (
                (
                  read_named_decl_info
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -1016468546 ->
              field_mei_decl_ref := (
                (
                  read_decl_ref
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "name"; "decl_ref" |];
        (
          {
            mei_is_arrow = !field_mei_is_arrow;
            mei_performs_virtual_dispatch = !field_mei_performs_virtual_dispatch;
            mei_name = !field_mei_name;
            mei_decl_ref = !field_mei_decl_ref;
          }
         : member_expr_info)
)
let read_member_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_mei_is_arrow = ref (false) in
    let field_mei_performs_virtual_dispatch = ref (false) in
    let field_mei_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_mei_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -984881036 ->
          field_mei_is_arrow := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -150441957 ->
          field_mei_performs_virtual_dispatch := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -922783157 ->
          field_mei_name := (
            (
              read_named_decl_info
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -1016468546 ->
          field_mei_decl_ref := (
            (
              read_decl_ref
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "name"; "decl_ref" |];
    (
      {
        mei_is_arrow = !field_mei_is_arrow;
        mei_performs_virtual_dispatch = !field_mei_performs_virtual_dispatch;
        mei_name = !field_mei_name;
        mei_decl_ref = !field_mei_decl_ref;
      }
     : member_expr_info)
)
let member_expr_info_of_string ?pos s =
  read_member_expr_info (Bi_inbuf.from_string ?pos s)
let namespace_decl_info_tag = Bi_io.record_tag
let write_untagged_namespace_decl_info : Bi_outbuf.t -> namespace_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ndi_is_inline = x.ndi_is_inline in
    if x_ndi_is_inline != false then incr len;
    let x_ndi_original_namespace = x.ndi_original_namespace in
    if x_ndi_original_namespace != None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_ndi_is_inline != false then (
      Bi_outbuf.add_char4 ob '\190' 'd' '1' 'N';
      (
        Bi_io.write_bool
      ) ob x_ndi_is_inline;
    );
    (match x_ndi_original_namespace with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\202' '\161' '\137' '\237';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_namespace_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_namespace_decl_info ob x
let string_of_namespace_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_namespace_decl_info ob x;
  Bi_outbuf.contents ob
let get_namespace_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ndi_is_inline = ref (false) in
        let field_ndi_original_namespace = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 1046753614 ->
              field_ndi_is_inline := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -895383059 ->
              field_ndi_original_namespace := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ndi_is_inline = !field_ndi_is_inline;
            ndi_original_namespace = !field_ndi_original_namespace;
          }
         : namespace_decl_info)
)
let read_namespace_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ndi_is_inline = ref (false) in
    let field_ndi_original_namespace = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 1046753614 ->
          field_ndi_is_inline := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -895383059 ->
          field_ndi_original_namespace := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ndi_is_inline = !field_ndi_is_inline;
        ndi_original_namespace = !field_ndi_original_namespace;
      }
     : namespace_decl_info)
)
let namespace_decl_info_of_string ?pos s =
  read_namespace_decl_info (Bi_inbuf.from_string ?pos s)
let nested_name_specifier_loc_tag = Bi_io.record_tag
let write_untagged_nested_name_specifier_loc : Bi_outbuf.t -> nested_name_specifier_loc -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_nnsl_ref = x.nnsl_ref in
    if x_nnsl_ref != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_specifier_kind
    ) ob x.nnsl_kind;
    (match x_nnsl_ref with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\128' 'V' '\217' 'S';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_nested_name_specifier_loc ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_nested_name_specifier_loc ob x
let string_of_nested_name_specifier_loc ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_nested_name_specifier_loc ob x;
  Bi_outbuf.contents ob
let get_nested_name_specifier_loc_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_nnsl_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_nnsl_ref = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_nnsl_kind := (
                (
                  read_specifier_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 5691731 ->
              field_nnsl_ref := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
        (
          {
            nnsl_kind = !field_nnsl_kind;
            nnsl_ref = !field_nnsl_ref;
          }
         : nested_name_specifier_loc)
)
let read_nested_name_specifier_loc = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_nnsl_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_nnsl_ref = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_nnsl_kind := (
            (
              read_specifier_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 5691731 ->
          field_nnsl_ref := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
    (
      {
        nnsl_kind = !field_nnsl_kind;
        nnsl_ref = !field_nnsl_ref;
      }
     : nested_name_specifier_loc)
)
let nested_name_specifier_loc_of_string ?pos s =
  read_nested_name_specifier_loc (Bi_inbuf.from_string ?pos s)
let _18_tag = Bi_io.array_tag
let write_untagged__18 = (
  Ag_ob_run.write_untagged_list
    nested_name_specifier_loc_tag
    (
      write_untagged_nested_name_specifier_loc
    )
)
let write__18 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__18 ob x
let string_of__18 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__18 ob x;
  Bi_outbuf.contents ob
let get__18_reader = (
  Ag_ob_run.get_list_reader (
    get_nested_name_specifier_loc_reader
  )
)
let read__18 = (
  Ag_ob_run.read_list (
    get_nested_name_specifier_loc_reader
  )
)
let _18_of_string ?pos s =
  read__18 (Bi_inbuf.from_string ?pos s)
let namespace_alias_decl_info_tag = Bi_io.record_tag
let write_untagged_namespace_alias_decl_info : Bi_outbuf.t -> namespace_alias_decl_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 4;
    Bi_outbuf.add_char4 ob '\164' 'd' 'm' '\156';
    (
      write_source_location
    ) ob x.nadi_namespace_loc;
    Bi_outbuf.add_char4 ob '\219' 'N' '\031' ':';
    (
      write_source_location
    ) ob x.nadi_target_name_loc;
    Bi_outbuf.add_char4 ob '\209' '_' '\232' '\000';
    (
      write__18
    ) ob x.nadi_nested_name_specifier_locs;
    Bi_outbuf.add_char4 ob '\231' '\237' '\234' '\155';
    (
      write_decl_ref
    ) ob x.nadi_namespace;
)
let write_namespace_alias_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_namespace_alias_decl_info ob x
let string_of_namespace_alias_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_namespace_alias_decl_info ob x;
  Bi_outbuf.contents ob
let get_namespace_alias_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_nadi_namespace_loc = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_nadi_target_name_loc = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_nadi_nested_name_specifier_locs = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_nadi_namespace = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 610561436 ->
              field_nadi_namespace_loc := (
                (
                  read_source_location
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -615637190 ->
              field_nadi_target_name_loc := (
                (
                  read_source_location
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -782243840 ->
              field_nadi_nested_name_specifier_locs := (
                (
                  read__18
                ) ib
              );
              bits0 := !bits0 lor 0x4;
            | -403838309 ->
              field_nadi_namespace := (
                (
                  read_decl_ref
                ) ib
              );
              bits0 := !bits0 lor 0x8;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0xf then Ag_ob_run.missing_fields [| !bits0 |] [| "namespace_loc"; "target_name_loc"; "nested_name_specifier_locs"; "namespace" |];
        (
          {
            nadi_namespace_loc = !field_nadi_namespace_loc;
            nadi_target_name_loc = !field_nadi_target_name_loc;
            nadi_nested_name_specifier_locs = !field_nadi_nested_name_specifier_locs;
            nadi_namespace = !field_nadi_namespace;
          }
         : namespace_alias_decl_info)
)
let read_namespace_alias_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_nadi_namespace_loc = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_nadi_target_name_loc = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_nadi_nested_name_specifier_locs = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_nadi_namespace = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 610561436 ->
          field_nadi_namespace_loc := (
            (
              read_source_location
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -615637190 ->
          field_nadi_target_name_loc := (
            (
              read_source_location
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -782243840 ->
          field_nadi_nested_name_specifier_locs := (
            (
              read__18
            ) ib
          );
          bits0 := !bits0 lor 0x4;
        | -403838309 ->
          field_nadi_namespace := (
            (
              read_decl_ref
            ) ib
          );
          bits0 := !bits0 lor 0x8;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0xf then Ag_ob_run.missing_fields [| !bits0 |] [| "namespace_loc"; "target_name_loc"; "nested_name_specifier_locs"; "namespace" |];
    (
      {
        nadi_namespace_loc = !field_nadi_namespace_loc;
        nadi_target_name_loc = !field_nadi_target_name_loc;
        nadi_nested_name_specifier_locs = !field_nadi_nested_name_specifier_locs;
        nadi_namespace = !field_nadi_namespace;
      }
     : namespace_alias_decl_info)
)
let namespace_alias_decl_info_of_string ?pos s =
  read_namespace_alias_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_category_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_category_decl_info : Bi_outbuf.t -> obj_c_category_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_odi_class_interface = x.odi_class_interface in
    if x_odi_class_interface != None then incr len;
    let x_odi_implementation = x.odi_implementation in
    if x_odi_implementation != None then incr len;
    let x_odi_protocols = x.odi_protocols in
    if x_odi_protocols != [] then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_odi_class_interface with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\174' '\194' '\155' '\178';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_odi_implementation with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\211' '-' '\210' '2';
      (
        write_decl_ref
      ) ob x;
    );
    if x_odi_protocols != [] then (
      Bi_outbuf.add_char4 ob '\214' '\136' '7' '\027';
      (
        write__8
      ) ob x_odi_protocols;
    );
)
let write_obj_c_category_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_category_decl_info ob x
let string_of_obj_c_category_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_category_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_category_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_odi_class_interface = ref (None) in
        let field_odi_implementation = ref (None) in
        let field_odi_protocols = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 784505778 ->
              field_odi_class_interface := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -751971790 ->
              field_odi_implementation := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -695716069 ->
              field_odi_protocols := (
                (
                  read__8
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            odi_class_interface = !field_odi_class_interface;
            odi_implementation = !field_odi_implementation;
            odi_protocols = !field_odi_protocols;
          }
         : obj_c_category_decl_info)
)
let read_obj_c_category_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_odi_class_interface = ref (None) in
    let field_odi_implementation = ref (None) in
    let field_odi_protocols = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 784505778 ->
          field_odi_class_interface := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -751971790 ->
          field_odi_implementation := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -695716069 ->
          field_odi_protocols := (
            (
              read__8
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        odi_class_interface = !field_odi_class_interface;
        odi_implementation = !field_odi_implementation;
        odi_protocols = !field_odi_protocols;
      }
     : obj_c_category_decl_info)
)
let obj_c_category_decl_info_of_string ?pos s =
  read_obj_c_category_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_category_impl_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_category_impl_decl_info : Bi_outbuf.t -> obj_c_category_impl_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ocidi_class_interface = x.ocidi_class_interface in
    if x_ocidi_class_interface != None then incr len;
    let x_ocidi_category_decl = x.ocidi_category_decl in
    if x_ocidi_category_decl != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_ocidi_class_interface with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\174' '\194' '\155' '\178';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_ocidi_category_decl with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\172' 'X' '\168' '\139';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_obj_c_category_impl_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_category_impl_decl_info ob x
let string_of_obj_c_category_impl_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_category_impl_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_category_impl_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ocidi_class_interface = ref (None) in
        let field_ocidi_category_decl = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 784505778 ->
              field_ocidi_class_interface := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | 744007819 ->
              field_ocidi_category_decl := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ocidi_class_interface = !field_ocidi_class_interface;
            ocidi_category_decl = !field_ocidi_category_decl;
          }
         : obj_c_category_impl_decl_info)
)
let read_obj_c_category_impl_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ocidi_class_interface = ref (None) in
    let field_ocidi_category_decl = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 784505778 ->
          field_ocidi_class_interface := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | 744007819 ->
          field_ocidi_category_decl := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ocidi_class_interface = !field_ocidi_class_interface;
        ocidi_category_decl = !field_ocidi_category_decl;
      }
     : obj_c_category_impl_decl_info)
)
let obj_c_category_impl_decl_info_of_string ?pos s =
  read_obj_c_category_impl_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_compatible_alias_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_compatible_alias_decl_info : Bi_outbuf.t -> obj_c_compatible_alias_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ocadi_class_interface = x.ocadi_class_interface in
    if x_ocadi_class_interface != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_ocadi_class_interface with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\174' '\194' '\155' '\178';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_obj_c_compatible_alias_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_compatible_alias_decl_info ob x
let string_of_obj_c_compatible_alias_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_compatible_alias_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_compatible_alias_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ocadi_class_interface = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 784505778 ->
              field_ocadi_class_interface := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ocadi_class_interface = !field_ocadi_class_interface;
          }
         : obj_c_compatible_alias_decl_info)
)
let read_obj_c_compatible_alias_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ocadi_class_interface = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 784505778 ->
          field_ocadi_class_interface := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ocadi_class_interface = !field_ocadi_class_interface;
      }
     : obj_c_compatible_alias_decl_info)
)
let obj_c_compatible_alias_decl_info_of_string ?pos s =
  read_obj_c_compatible_alias_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_interface_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_interface_decl_info : Bi_outbuf.t -> obj_c_interface_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_otdi_super = x.otdi_super in
    if x_otdi_super != None then incr len;
    let x_otdi_implementation = x.otdi_implementation in
    if x_otdi_implementation != None then incr len;
    let x_otdi_protocols = x.otdi_protocols in
    if x_otdi_protocols != [] then incr len;
    let x_otdi_known_categories = x.otdi_known_categories in
    if x_otdi_known_categories != [] then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_otdi_super with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\132' '\192' '\001' '{';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_otdi_implementation with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\211' '-' '\210' '2';
      (
        write_decl_ref
      ) ob x;
    );
    if x_otdi_protocols != [] then (
      Bi_outbuf.add_char4 ob '\214' '\136' '7' '\027';
      (
        write__8
      ) ob x_otdi_protocols;
    );
    if x_otdi_known_categories != [] then (
      Bi_outbuf.add_char4 ob '\174' '\171' '\212' 'X';
      (
        write__8
      ) ob x_otdi_known_categories;
    );
)
let write_obj_c_interface_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_interface_decl_info ob x
let string_of_obj_c_interface_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_interface_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_interface_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_otdi_super = ref (None) in
        let field_otdi_implementation = ref (None) in
        let field_otdi_protocols = ref ([]) in
        let field_otdi_known_categories = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 79692155 ->
              field_otdi_super := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -751971790 ->
              field_otdi_implementation := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -695716069 ->
              field_otdi_protocols := (
                (
                  read__8
                ) ib
              );
            | 783012952 ->
              field_otdi_known_categories := (
                (
                  read__8
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            otdi_super = !field_otdi_super;
            otdi_implementation = !field_otdi_implementation;
            otdi_protocols = !field_otdi_protocols;
            otdi_known_categories = !field_otdi_known_categories;
          }
         : obj_c_interface_decl_info)
)
let read_obj_c_interface_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_otdi_super = ref (None) in
    let field_otdi_implementation = ref (None) in
    let field_otdi_protocols = ref ([]) in
    let field_otdi_known_categories = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 79692155 ->
          field_otdi_super := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -751971790 ->
          field_otdi_implementation := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -695716069 ->
          field_otdi_protocols := (
            (
              read__8
            ) ib
          );
        | 783012952 ->
          field_otdi_known_categories := (
            (
              read__8
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        otdi_super = !field_otdi_super;
        otdi_implementation = !field_otdi_implementation;
        otdi_protocols = !field_otdi_protocols;
        otdi_known_categories = !field_otdi_known_categories;
      }
     : obj_c_interface_decl_info)
)
let obj_c_interface_decl_info_of_string ?pos s =
  read_obj_c_interface_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_ivar_ref_expr_info_tag = Bi_io.record_tag
let write_untagged_obj_c_ivar_ref_expr_info : Bi_outbuf.t -> obj_c_ivar_ref_expr_info -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_ovrei_is_free_ivar = x.ovrei_is_free_ivar in
    if x_ovrei_is_free_ivar != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\195' 'i' '\235' '\190';
    (
      write_decl_ref
    ) ob x.ovrei_decl_ref;
    Bi_outbuf.add_char4 ob '\209' '!' '\192' '\189';
    (
      write_pointer
    ) ob x.ovrei_pointer;
    if x_ovrei_is_free_ivar != false then (
      Bi_outbuf.add_char4 ob '\254' '\140' '\245' '\252';
      (
        Bi_io.write_bool
      ) ob x_ovrei_is_free_ivar;
    );
)
let write_obj_c_ivar_ref_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_ivar_ref_expr_info ob x
let string_of_obj_c_ivar_ref_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_ivar_ref_expr_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_ivar_ref_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ovrei_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ovrei_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ovrei_is_free_ivar = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -1016468546 ->
              field_ovrei_decl_ref := (
                (
                  read_decl_ref
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -786317123 ->
              field_ovrei_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -24316420 ->
              field_ovrei_is_free_ivar := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_ref"; "pointer" |];
        (
          {
            ovrei_decl_ref = !field_ovrei_decl_ref;
            ovrei_pointer = !field_ovrei_pointer;
            ovrei_is_free_ivar = !field_ovrei_is_free_ivar;
          }
         : obj_c_ivar_ref_expr_info)
)
let read_obj_c_ivar_ref_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ovrei_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ovrei_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ovrei_is_free_ivar = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -1016468546 ->
          field_ovrei_decl_ref := (
            (
              read_decl_ref
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -786317123 ->
          field_ovrei_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -24316420 ->
          field_ovrei_is_free_ivar := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_ref"; "pointer" |];
    (
      {
        ovrei_decl_ref = !field_ovrei_decl_ref;
        ovrei_pointer = !field_ovrei_pointer;
        ovrei_is_free_ivar = !field_ovrei_is_free_ivar;
      }
     : obj_c_ivar_ref_expr_info)
)
let obj_c_ivar_ref_expr_info_of_string ?pos s =
  read_obj_c_ivar_ref_expr_info (Bi_inbuf.from_string ?pos s)
let obj_c_property_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_property_decl_info : Bi_outbuf.t -> obj_c_property_decl_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_opdi_getter_method = x.opdi_getter_method in
    if x_opdi_getter_method != None then incr len;
    let x_opdi_setter_method = x.opdi_setter_method in
    if x_opdi_setter_method != None then incr len;
    let x_opdi_ivar_decl = x.opdi_ivar_decl in
    if x_opdi_ivar_decl != None then incr len;
    let x_opdi_property_control = x.opdi_property_control in
    if x_opdi_property_control != `None then incr len;
    let x_opdi_property_attributes = x.opdi_property_attributes in
    if x_opdi_property_attributes != [] then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\176' '\228' '\135' 'j';
    (
      write_qual_type
    ) ob x.opdi_qual_type;
    (match x_opdi_getter_method with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\177' '\006' '\240' '\213';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_opdi_setter_method with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\246' '\012' '\210' '\225';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_opdi_ivar_decl with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\174' '\r' '9' 'k';
      (
        write_decl_ref
      ) ob x;
    );
    if x_opdi_property_control != `None then (
      Bi_outbuf.add_char4 ob '\231' '!' '\234' '3';
      (
        write_obj_c_property_control
      ) ob x_opdi_property_control;
    );
    if x_opdi_property_attributes != [] then (
      Bi_outbuf.add_char4 ob '\228' '\'' '\147' '\193';
      (
        write__24
      ) ob x_opdi_property_attributes;
    );
)
let write_obj_c_property_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_property_decl_info ob x
let string_of_obj_c_property_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_property_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_property_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_opdi_qual_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_opdi_getter_method = ref (None) in
        let field_opdi_setter_method = ref (None) in
        let field_opdi_ivar_decl = ref (None) in
        let field_opdi_property_control = ref (`None) in
        let field_opdi_property_attributes = ref ([]) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 820283242 ->
              field_opdi_qual_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 822538453 ->
              field_opdi_getter_method := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -166931743 ->
              field_opdi_setter_method := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | 772618603 ->
              field_opdi_ivar_decl := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -417207757 ->
              field_opdi_property_control := (
                (
                  read_obj_c_property_control
                ) ib
              );
            | -467168319 ->
              field_opdi_property_attributes := (
                (
                  read__24
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "qual_type" |];
        (
          {
            opdi_qual_type = !field_opdi_qual_type;
            opdi_getter_method = !field_opdi_getter_method;
            opdi_setter_method = !field_opdi_setter_method;
            opdi_ivar_decl = !field_opdi_ivar_decl;
            opdi_property_control = !field_opdi_property_control;
            opdi_property_attributes = !field_opdi_property_attributes;
          }
         : obj_c_property_decl_info)
)
let read_obj_c_property_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_opdi_qual_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_opdi_getter_method = ref (None) in
    let field_opdi_setter_method = ref (None) in
    let field_opdi_ivar_decl = ref (None) in
    let field_opdi_property_control = ref (`None) in
    let field_opdi_property_attributes = ref ([]) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 820283242 ->
          field_opdi_qual_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 822538453 ->
          field_opdi_getter_method := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -166931743 ->
          field_opdi_setter_method := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | 772618603 ->
          field_opdi_ivar_decl := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -417207757 ->
          field_opdi_property_control := (
            (
              read_obj_c_property_control
            ) ib
          );
        | -467168319 ->
          field_opdi_property_attributes := (
            (
              read__24
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "qual_type" |];
    (
      {
        opdi_qual_type = !field_opdi_qual_type;
        opdi_getter_method = !field_opdi_getter_method;
        opdi_setter_method = !field_opdi_setter_method;
        opdi_ivar_decl = !field_opdi_ivar_decl;
        opdi_property_control = !field_opdi_property_control;
        opdi_property_attributes = !field_opdi_property_attributes;
      }
     : obj_c_property_decl_info)
)
let obj_c_property_decl_info_of_string ?pos s =
  read_obj_c_property_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_property_impl_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_property_impl_decl_info : Bi_outbuf.t -> obj_c_property_impl_decl_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_opidi_property_decl = x.opidi_property_decl in
    if x_opidi_property_decl != None then incr len;
    let x_opidi_ivar_decl = x.opidi_ivar_decl in
    if x_opidi_ivar_decl != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\211' '-' '\210' '2';
    (
      write_property_implementation
    ) ob x.opidi_implementation;
    (match x_opidi_property_decl with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\172' '\143' '\207' '\212';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_opidi_ivar_decl with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\174' '\r' '9' 'k';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_obj_c_property_impl_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_property_impl_decl_info ob x
let string_of_obj_c_property_impl_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_property_impl_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_property_impl_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_opidi_implementation = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_opidi_property_decl = ref (None) in
        let field_opidi_ivar_decl = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -751971790 ->
              field_opidi_implementation := (
                (
                  read_property_implementation
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 747622356 ->
              field_opidi_property_decl := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | 772618603 ->
              field_opidi_ivar_decl := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "implementation" |];
        (
          {
            opidi_implementation = !field_opidi_implementation;
            opidi_property_decl = !field_opidi_property_decl;
            opidi_ivar_decl = !field_opidi_ivar_decl;
          }
         : obj_c_property_impl_decl_info)
)
let read_obj_c_property_impl_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_opidi_implementation = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_opidi_property_decl = ref (None) in
    let field_opidi_ivar_decl = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -751971790 ->
          field_opidi_implementation := (
            (
              read_property_implementation
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 747622356 ->
          field_opidi_property_decl := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | 772618603 ->
          field_opidi_ivar_decl := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "implementation" |];
    (
      {
        opidi_implementation = !field_opidi_implementation;
        opidi_property_decl = !field_opidi_property_decl;
        opidi_ivar_decl = !field_opidi_ivar_decl;
      }
     : obj_c_property_impl_decl_info)
)
let obj_c_property_impl_decl_info_of_string ?pos s =
  read_obj_c_property_impl_decl_info (Bi_inbuf.from_string ?pos s)
let obj_c_protocol_decl_info_tag = Bi_io.record_tag
let write_untagged_obj_c_protocol_decl_info : Bi_outbuf.t -> obj_c_protocol_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_opcdi_protocols = x.opcdi_protocols in
    if x_opcdi_protocols != [] then incr len;
    Bi_vint.write_uvint ob !len;
    if x_opcdi_protocols != [] then (
      Bi_outbuf.add_char4 ob '\214' '\136' '7' '\027';
      (
        write__8
      ) ob x_opcdi_protocols;
    );
)
let write_obj_c_protocol_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_protocol_decl_info ob x
let string_of_obj_c_protocol_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_protocol_decl_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_protocol_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_opcdi_protocols = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -695716069 ->
              field_opcdi_protocols := (
                (
                  read__8
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            opcdi_protocols = !field_opcdi_protocols;
          }
         : obj_c_protocol_decl_info)
)
let read_obj_c_protocol_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_opcdi_protocols = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -695716069 ->
          field_opcdi_protocols := (
            (
              read__8
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        opcdi_protocols = !field_opcdi_protocols;
      }
     : obj_c_protocol_decl_info)
)
let obj_c_protocol_decl_info_of_string ?pos s =
  read_obj_c_protocol_decl_info (Bi_inbuf.from_string ?pos s)
let objc_encode_expr_info_tag = Bi_io.record_tag
let write_untagged_objc_encode_expr_info : Bi_outbuf.t -> objc_encode_expr_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\176' '\228' '\135' 'j';
    (
      write_qual_type
    ) ob x.oeei_qual_type;
    Bi_outbuf.add_char4 ob '\128' 'V' '\213' '\232';
    (
      Bi_io.write_string
    ) ob x.oeei_raw;
)
let write_objc_encode_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_objc_encode_expr_info ob x
let string_of_objc_encode_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_objc_encode_expr_info ob x;
  Bi_outbuf.contents ob
let get_objc_encode_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_oeei_qual_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_oeei_raw = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 820283242 ->
              field_oeei_qual_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 5690856 ->
              field_oeei_raw := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "qual_type"; "raw" |];
        (
          {
            oeei_qual_type = !field_oeei_qual_type;
            oeei_raw = !field_oeei_raw;
          }
         : objc_encode_expr_info)
)
let read_objc_encode_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_oeei_qual_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_oeei_raw = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 820283242 ->
          field_oeei_qual_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 5690856 ->
          field_oeei_raw := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "qual_type"; "raw" |];
    (
      {
        oeei_qual_type = !field_oeei_qual_type;
        oeei_raw = !field_oeei_raw;
      }
     : objc_encode_expr_info)
)
let objc_encode_expr_info_of_string ?pos s =
  read_objc_encode_expr_info (Bi_inbuf.from_string ?pos s)
let objc_object_type_info_tag = Bi_io.record_tag
let write_untagged_objc_object_type_info : Bi_outbuf.t -> objc_object_type_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_ooti_protocol_decls_ptr = x.ooti_protocol_decls_ptr in
    if x_ooti_protocol_decls_ptr != [] then incr len;
    let x_ooti_type_args = x.ooti_type_args in
    if x_ooti_type_args != [] then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\252' '\209' 'H' '\232';
    (
      write_type_ptr
    ) ob x.ooti_base_type;
    if x_ooti_protocol_decls_ptr != [] then (
      Bi_outbuf.add_char4 ob '\139' '\003' '|' 'Q';
      (
        write__33
      ) ob x_ooti_protocol_decls_ptr;
    );
    if x_ooti_type_args != [] then (
      Bi_outbuf.add_char4 ob '\165' '0' '\148' 'B';
      (
        write__32
      ) ob x_ooti_type_args;
    );
)
let write_objc_object_type_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_objc_object_type_info ob x
let string_of_objc_object_type_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_objc_object_type_info ob x;
  Bi_outbuf.contents ob
let get_objc_object_type_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ooti_base_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ooti_protocol_decls_ptr = ref ([]) in
        let field_ooti_type_args = ref ([]) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -53393176 ->
              field_ooti_base_type := (
                (
                  read_type_ptr
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 184777809 ->
              field_ooti_protocol_decls_ptr := (
                (
                  read__33
                ) ib
              );
            | 623940674 ->
              field_ooti_type_args := (
                (
                  read__32
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "base_type" |];
        (
          {
            ooti_base_type = !field_ooti_base_type;
            ooti_protocol_decls_ptr = !field_ooti_protocol_decls_ptr;
            ooti_type_args = !field_ooti_type_args;
          }
         : objc_object_type_info)
)
let read_objc_object_type_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ooti_base_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ooti_protocol_decls_ptr = ref ([]) in
    let field_ooti_type_args = ref ([]) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -53393176 ->
          field_ooti_base_type := (
            (
              read_type_ptr
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 184777809 ->
          field_ooti_protocol_decls_ptr := (
            (
              read__33
            ) ib
          );
        | 623940674 ->
          field_ooti_type_args := (
            (
              read__32
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "base_type" |];
    (
      {
        ooti_base_type = !field_ooti_base_type;
        ooti_protocol_decls_ptr = !field_ooti_protocol_decls_ptr;
        ooti_type_args = !field_ooti_type_args;
      }
     : objc_object_type_info)
)
let objc_object_type_info_of_string ?pos s =
  read_objc_object_type_info (Bi_inbuf.from_string ?pos s)
let overload_expr_info_tag = Bi_io.record_tag
let write_untagged_overload_expr_info : Bi_outbuf.t -> overload_expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_oei_decls = x.oei_decls in
    if x_oei_decls != [] then incr len;
    Bi_vint.write_uvint ob !len;
    if x_oei_decls != [] then (
      Bi_outbuf.add_char4 ob '\215' ' ' '\012' '\201';
      (
        write__8
      ) ob x_oei_decls;
    );
    Bi_outbuf.add_char4 ob '\200' '\255' 'r' 'K';
    (
      write_declaration_name
    ) ob x.oei_name;
)
let write_overload_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_overload_expr_info ob x
let string_of_overload_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_overload_expr_info ob x;
  Bi_outbuf.contents ob
let get_overload_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_oei_decls = ref ([]) in
        let field_oei_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -685765431 ->
              field_oei_decls := (
                (
                  read__8
                ) ib
              );
            | -922783157 ->
              field_oei_name := (
                (
                  read_declaration_name
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "name" |];
        (
          {
            oei_decls = !field_oei_decls;
            oei_name = !field_oei_name;
          }
         : overload_expr_info)
)
let read_overload_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_oei_decls = ref ([]) in
    let field_oei_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -685765431 ->
          field_oei_decls := (
            (
              read__8
            ) ib
          );
        | -922783157 ->
          field_oei_name := (
            (
              read_declaration_name
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "name" |];
    (
      {
        oei_decls = !field_oei_decls;
        oei_name = !field_oei_name;
      }
     : overload_expr_info)
)
let overload_expr_info_of_string ?pos s =
  read_overload_expr_info (Bi_inbuf.from_string ?pos s)
let params_type_info_tag = Bi_io.record_tag
let write_untagged_params_type_info : Bi_outbuf.t -> params_type_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_pti_params_type = x.pti_params_type in
    if x_pti_params_type != [] then incr len;
    Bi_vint.write_uvint ob !len;
    if x_pti_params_type != [] then (
      Bi_outbuf.add_char4 ob '\136' '\236' 'u' '\147';
      (
        write__32
      ) ob x_pti_params_type;
    );
)
let write_params_type_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_params_type_info ob x
let string_of_params_type_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_params_type_info ob x;
  Bi_outbuf.contents ob
let get_params_type_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_pti_params_type = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 149714323 ->
              field_pti_params_type := (
                (
                  read__32
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            pti_params_type = !field_pti_params_type;
          }
         : params_type_info)
)
let read_params_type_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_pti_params_type = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 149714323 ->
          field_pti_params_type := (
            (
              read__32
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        pti_params_type = !field_pti_params_type;
      }
     : params_type_info)
)
let params_type_info_of_string ?pos s =
  read_params_type_info (Bi_inbuf.from_string ?pos s)
let property_ref_kind_tag = Bi_io.variant_tag
let write_untagged_property_ref_kind = (
  fun ob x ->
    match x with
      | `MethodRef x ->
        Bi_outbuf.add_char4 ob '\156' '-' '<' '\210';
        (
          write_obj_c_method_ref_info
        ) ob x
      | `PropertyRef x ->
        Bi_outbuf.add_char4 ob '\250' '\197' '\003' '\222';
        (
          write_decl_ref
        ) ob x
)
let write_property_ref_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_property_ref_kind ob x
let string_of_property_ref_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_property_ref_kind ob x;
  Bi_outbuf.contents ob
let get_property_ref_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 472726738, true -> (`MethodRef (
                (
                  read_obj_c_method_ref_info
                ) ib
              ))
            | -87751714, true -> (`PropertyRef (
                (
                  read_decl_ref
                ) ib
              ))
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_property_ref_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 472726738, true -> (`MethodRef (
            (
              read_obj_c_method_ref_info
            ) ib
          ))
        | -87751714, true -> (`PropertyRef (
            (
              read_decl_ref
            ) ib
          ))
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let property_ref_kind_of_string ?pos s =
  read_property_ref_kind (Bi_inbuf.from_string ?pos s)
let obj_c_property_ref_expr_info_tag = Bi_io.record_tag
let write_untagged_obj_c_property_ref_expr_info : Bi_outbuf.t -> obj_c_property_ref_expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_oprei_is_super_receiver = x.oprei_is_super_receiver in
    if x_oprei_is_super_receiver != false then incr len;
    let x_oprei_is_messaging_getter = x.oprei_is_messaging_getter in
    if x_oprei_is_messaging_getter != false then incr len;
    let x_oprei_is_messaging_setter = x.oprei_is_messaging_setter in
    if x_oprei_is_messaging_setter != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_property_ref_kind
    ) ob x.oprei_kind;
    if x_oprei_is_super_receiver != false then (
      Bi_outbuf.add_char4 ob '\182' '\022' '\151' '\168';
      (
        Bi_io.write_bool
      ) ob x_oprei_is_super_receiver;
    );
    if x_oprei_is_messaging_getter != false then (
      Bi_outbuf.add_char4 ob '\168' '\'' '\189' '\155';
      (
        Bi_io.write_bool
      ) ob x_oprei_is_messaging_getter;
    );
    if x_oprei_is_messaging_setter != false then (
      Bi_outbuf.add_char4 ob '\244' 'p' '\018' '\015';
      (
        Bi_io.write_bool
      ) ob x_oprei_is_messaging_setter;
    );
)
let write_obj_c_property_ref_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_property_ref_expr_info ob x
let string_of_obj_c_property_ref_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_property_ref_expr_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_property_ref_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_oprei_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_oprei_is_super_receiver = ref (false) in
        let field_oprei_is_messaging_getter = ref (false) in
        let field_oprei_is_messaging_setter = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_oprei_kind := (
                (
                  read_property_ref_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 907450280 ->
              field_oprei_is_super_receiver := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 673693083 ->
              field_oprei_is_messaging_getter := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -193981937 ->
              field_oprei_is_messaging_setter := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
        (
          {
            oprei_kind = !field_oprei_kind;
            oprei_is_super_receiver = !field_oprei_is_super_receiver;
            oprei_is_messaging_getter = !field_oprei_is_messaging_getter;
            oprei_is_messaging_setter = !field_oprei_is_messaging_setter;
          }
         : obj_c_property_ref_expr_info)
)
let read_obj_c_property_ref_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_oprei_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_oprei_is_super_receiver = ref (false) in
    let field_oprei_is_messaging_getter = ref (false) in
    let field_oprei_is_messaging_setter = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_oprei_kind := (
            (
              read_property_ref_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 907450280 ->
          field_oprei_is_super_receiver := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 673693083 ->
          field_oprei_is_messaging_getter := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -193981937 ->
          field_oprei_is_messaging_setter := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
    (
      {
        oprei_kind = !field_oprei_kind;
        oprei_is_super_receiver = !field_oprei_is_super_receiver;
        oprei_is_messaging_getter = !field_oprei_is_messaging_getter;
        oprei_is_messaging_setter = !field_oprei_is_messaging_setter;
      }
     : obj_c_property_ref_expr_info)
)
let obj_c_property_ref_expr_info_of_string ?pos s =
  read_obj_c_property_ref_expr_info (Bi_inbuf.from_string ?pos s)
let receiver_kind_tag = Bi_io.variant_tag
let write_untagged_receiver_kind = (
  fun ob x ->
    match x with
      | `Instance -> Bi_outbuf.add_char4 ob '3' '\146' '\219' '\181'
      | `Class x ->
        Bi_outbuf.add_char4 ob '\219' '\133' '\232' '\024';
        (
          write_qual_type
        ) ob x
      | `SuperInstance -> Bi_outbuf.add_char4 ob '\011' '\169' '\160' '\016'
      | `SuperClass -> Bi_outbuf.add_char4 ob '\030' '\184' '\172' '\221'
)
let write_receiver_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_receiver_kind ob x
let string_of_receiver_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_receiver_kind ob x;
  Bi_outbuf.contents ob
let get_receiver_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 865262517, false -> `Instance
            | -611981288, true -> (`Class (
                (
                  read_qual_type
                ) ib
              ))
            | 195665936, false -> `SuperInstance
            | 515419357, false -> `SuperClass
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_receiver_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 865262517, false -> `Instance
        | -611981288, true -> (`Class (
            (
              read_qual_type
            ) ib
          ))
        | 195665936, false -> `SuperInstance
        | 515419357, false -> `SuperClass
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let receiver_kind_of_string ?pos s =
  read_receiver_kind (Bi_inbuf.from_string ?pos s)
let obj_c_message_expr_info_tag = Bi_io.record_tag
let write_untagged_obj_c_message_expr_info : Bi_outbuf.t -> obj_c_message_expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_omei_is_definition_found = x.omei_is_definition_found in
    if x_omei_is_definition_found != false then incr len;
    let x_omei_decl_pointer = x.omei_decl_pointer in
    if x_omei_decl_pointer != None then incr len;
    let x_omei_receiver_kind = x.omei_receiver_kind in
    if x_omei_receiver_kind != `Instance then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\177' 'm' '3' '\031';
    (
      Bi_io.write_string
    ) ob x.omei_selector;
    if x_omei_is_definition_found != false then (
      Bi_outbuf.add_char4 ob '\158' '\169' '\154' '\139';
      (
        Bi_io.write_bool
      ) ob x_omei_is_definition_found;
    );
    (match x_omei_decl_pointer with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\236' '\005' '\228' '\168';
      (
        write_pointer
      ) ob x;
    );
    if x_omei_receiver_kind != `Instance then (
      Bi_outbuf.add_char4 ob '\140' '\169' '\141' '\164';
      (
        write_receiver_kind
      ) ob x_omei_receiver_kind;
    );
)
let write_obj_c_message_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_message_expr_info ob x
let string_of_obj_c_message_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_message_expr_info ob x;
  Bi_outbuf.contents ob
let get_obj_c_message_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_omei_selector = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_omei_is_definition_found = ref (false) in
        let field_omei_decl_pointer = ref (None) in
        let field_omei_receiver_kind = ref (`Instance) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 829240095 ->
              field_omei_selector := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 514431627 ->
              field_omei_is_definition_found := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -335158104 ->
              field_omei_decl_pointer := (
                Some (
                  (
                    read_pointer
                  ) ib
                )
              );
            | 212438436 ->
              field_omei_receiver_kind := (
                (
                  read_receiver_kind
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "selector" |];
        (
          {
            omei_selector = !field_omei_selector;
            omei_is_definition_found = !field_omei_is_definition_found;
            omei_decl_pointer = !field_omei_decl_pointer;
            omei_receiver_kind = !field_omei_receiver_kind;
          }
         : obj_c_message_expr_info)
)
let read_obj_c_message_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_omei_selector = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_omei_is_definition_found = ref (false) in
    let field_omei_decl_pointer = ref (None) in
    let field_omei_receiver_kind = ref (`Instance) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 829240095 ->
          field_omei_selector := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 514431627 ->
          field_omei_is_definition_found := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -335158104 ->
          field_omei_decl_pointer := (
            Some (
              (
                read_pointer
              ) ib
            )
          );
        | 212438436 ->
          field_omei_receiver_kind := (
            (
              read_receiver_kind
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "selector" |];
    (
      {
        omei_selector = !field_omei_selector;
        omei_is_definition_found = !field_omei_is_definition_found;
        omei_decl_pointer = !field_omei_decl_pointer;
        omei_receiver_kind = !field_omei_receiver_kind;
      }
     : obj_c_message_expr_info)
)
let obj_c_message_expr_info_of_string ?pos s =
  read_obj_c_message_expr_info (Bi_inbuf.from_string ?pos s)
let type_info_tag = Bi_io.record_tag
let write_untagged_type_info : Bi_outbuf.t -> type_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_ti_desugared_type = x.ti_desugared_type in
    if x_ti_desugared_type != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\209' '!' '\192' '\189';
    (
      write_pointer
    ) ob x.ti_pointer;
    (match x_ti_desugared_type with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\166' '\243' '+' '\229';
      (
        write_type_ptr
      ) ob x;
    );
)
let write_type_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_type_info ob x
let string_of_type_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_type_info ob x;
  Bi_outbuf.contents ob
let get_type_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ti_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ti_desugared_type = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -786317123 ->
              field_ti_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 653470693 ->
              field_ti_desugared_type := (
                Some (
                  (
                    read_type_ptr
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer" |];
        (
          {
            ti_pointer = !field_ti_pointer;
            ti_desugared_type = !field_ti_desugared_type;
          }
         : type_info)
)
let read_type_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ti_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ti_desugared_type = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -786317123 ->
          field_ti_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 653470693 ->
          field_ti_desugared_type := (
            Some (
              (
                read_type_ptr
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer" |];
    (
      {
        ti_pointer = !field_ti_pointer;
        ti_desugared_type = !field_ti_desugared_type;
      }
     : type_info)
)
let type_info_of_string ?pos s =
  read_type_info (Bi_inbuf.from_string ?pos s)
let type_trait_info_tag = Bi_io.record_tag
let write_untagged_type_trait_info : Bi_outbuf.t -> type_trait_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_xtti_value = x.xtti_value in
    if x_xtti_value != false then incr len;
    Bi_vint.write_uvint ob !len;
    if x_xtti_value != false then (
      Bi_outbuf.add_char4 ob '\177' '\184' '\127' 'q';
      (
        Bi_io.write_bool
      ) ob x_xtti_value;
    );
)
let write_type_trait_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_type_trait_info ob x
let string_of_type_trait_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_type_trait_info ob x;
  Bi_outbuf.contents ob
let get_type_trait_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xtti_value = ref (false) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 834174833 ->
              field_xtti_value := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            xtti_value = !field_xtti_value;
          }
         : type_trait_info)
)
let read_type_trait_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xtti_value = ref (false) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 834174833 ->
          field_xtti_value := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        xtti_value = !field_xtti_value;
      }
     : type_trait_info)
)
let type_trait_info_of_string ?pos s =
  read_type_trait_info (Bi_inbuf.from_string ?pos s)
let typedef_decl_info_tag = Bi_io.record_tag
let write_untagged_typedef_decl_info : Bi_outbuf.t -> typedef_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_tdi_is_module_private = x.tdi_is_module_private in
    if x_tdi_is_module_private != false then incr len;
    Bi_vint.write_uvint ob !len;
    if x_tdi_is_module_private != false then (
      Bi_outbuf.add_char4 ob '\204' '\133' '+' '%';
      (
        Bi_io.write_bool
      ) ob x_tdi_is_module_private;
    );
)
let write_typedef_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_typedef_decl_info ob x
let string_of_typedef_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_typedef_decl_info ob x;
  Bi_outbuf.contents ob
let get_typedef_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_tdi_is_module_private = ref (false) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -863687899 ->
              field_tdi_is_module_private := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            tdi_is_module_private = !field_tdi_is_module_private;
          }
         : typedef_decl_info)
)
let read_typedef_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_tdi_is_module_private = ref (false) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -863687899 ->
          field_tdi_is_module_private := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        tdi_is_module_private = !field_tdi_is_module_private;
      }
     : typedef_decl_info)
)
let typedef_decl_info_of_string ?pos s =
  read_typedef_decl_info (Bi_inbuf.from_string ?pos s)
let typedef_type_info_tag = Bi_io.record_tag
let write_untagged_typedef_type_info : Bi_outbuf.t -> typedef_type_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\139' 'h' '\015' '}';
    (
      write_qual_type
    ) ob x.tti_child_type;
    Bi_outbuf.add_char4 ob '\195' 'h' 't' 'Y';
    (
      write_pointer
    ) ob x.tti_decl_ptr;
)
let write_typedef_type_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_typedef_type_info ob x
let string_of_typedef_type_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_typedef_type_info ob x;
  Bi_outbuf.contents ob
let get_typedef_type_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_tti_child_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_tti_decl_ptr = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 191369085 ->
              field_tti_child_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -1016564647 ->
              field_tti_decl_ptr := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "child_type"; "decl_ptr" |];
        (
          {
            tti_child_type = !field_tti_child_type;
            tti_decl_ptr = !field_tti_decl_ptr;
          }
         : typedef_type_info)
)
let read_typedef_type_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_tti_child_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_tti_decl_ptr = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 191369085 ->
          field_tti_child_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -1016564647 ->
          field_tti_decl_ptr := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "child_type"; "decl_ptr" |];
    (
      {
        tti_child_type = !field_tti_child_type;
        tti_decl_ptr = !field_tti_decl_ptr;
      }
     : typedef_type_info)
)
let typedef_type_info_of_string ?pos s =
  read_typedef_type_info (Bi_inbuf.from_string ?pos s)
let c_type_tag = Bi_io.variant_tag
let write_untagged_c_type : Bi_outbuf.t -> c_type -> unit = (
  fun ob x ->
    match x with
      | NoneType x ->
        Bi_outbuf.add_char4 ob '\207' '\201' '\169' '\178';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | BuiltinType x ->
        Bi_outbuf.add_char4 ob '\162' '\213' 'F' '\221';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_builtin_type_kind
              ) ob x
            );
        ) ob x
      | ComplexType x ->
        Bi_outbuf.add_char4 ob '\174' 'l' '\244' '\234';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | PointerType x ->
        Bi_outbuf.add_char4 ob '\211' '\210' '\025' '\247';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | BlockPointerType x ->
        Bi_outbuf.add_char4 ob '\229' '\254' '\153' '\234';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | LValueReferenceType x ->
        Bi_outbuf.add_char4 ob '\139' '\b' '\205' '`';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | RValueReferenceType x ->
        Bi_outbuf.add_char4 ob '\169' 'W' 'F' '\230';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | MemberPointerType x ->
        Bi_outbuf.add_char4 ob '\142' '\213' '\193' '\189';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | ConstantArrayType x ->
        Bi_outbuf.add_char4 ob '\218' '\012' '^' '\207';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_array_type_info
              ) ob x
            );
            (
              let _, _, x = x in (
                Bi_io.write_svint
              ) ob x
            );
        ) ob x
      | IncompleteArrayType x ->
        Bi_outbuf.add_char4 ob '\205' '\001' '\183' 'U';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_array_type_info
              ) ob x
            );
        ) ob x
      | VariableArrayType x ->
        Bi_outbuf.add_char4 ob '\181' '\b' '2' '\247';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_array_type_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_pointer
              ) ob x
            );
        ) ob x
      | DependentSizedArrayType x ->
        Bi_outbuf.add_char4 ob '\251' '&' '\242' '/';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_array_type_info
              ) ob x
            );
        ) ob x
      | DependentSizedExtVectorType x ->
        Bi_outbuf.add_char4 ob '\203' 'N' '\228' 'Z';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | VectorType x ->
        Bi_outbuf.add_char4 ob '\133' '\171' '\241' '=';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | ExtVectorType x ->
        Bi_outbuf.add_char4 ob '\137' '\017' '\192' '\254';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | FunctionProtoType x ->
        Bi_outbuf.add_char4 ob '\166' 'y' 'o' 'j';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_function_type_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_params_type_info
              ) ob x
            );
        ) ob x
      | FunctionNoProtoType x ->
        Bi_outbuf.add_char4 ob '\129' '\254' '\024' '\233';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_function_type_info
              ) ob x
            );
        ) ob x
      | UnresolvedUsingType x ->
        Bi_outbuf.add_char4 ob '\204' '\221' '\b' 'm';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | ParenType x ->
        Bi_outbuf.add_char4 ob '\140' '\030' 'O' '\196';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | TypedefType x ->
        Bi_outbuf.add_char4 ob '\153' '\225' '\239' '\133';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_typedef_type_info
              ) ob x
            );
        ) ob x
      | AdjustedType x ->
        Bi_outbuf.add_char4 ob '\199' '\n' '\000' '\168';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | DecayedType x ->
        Bi_outbuf.add_char4 ob '\173' '\147' 'U' 'S';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | TypeOfExprType x ->
        Bi_outbuf.add_char4 ob '\227' '\182' '\222' '@';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | TypeOfType x ->
        Bi_outbuf.add_char4 ob '\195' '\134' '\137' '\235';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | DecltypeType x ->
        Bi_outbuf.add_char4 ob '\227' '\018' '\r' '\030';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | UnaryTransformType x ->
        Bi_outbuf.add_char4 ob '\247' 'r' 'o' '7';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | RecordType x ->
        Bi_outbuf.add_char4 ob '\216' '\012' '\182' '\011';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_pointer
              ) ob x
            );
        ) ob x
      | EnumType x ->
        Bi_outbuf.add_char4 ob '\139' '"' 'Z' '{';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_pointer
              ) ob x
            );
        ) ob x
      | ElaboratedType x ->
        Bi_outbuf.add_char4 ob '\166' ';' '_' '7';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | AttributedType x ->
        Bi_outbuf.add_char4 ob '\255' '\193' '_' '\194';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_attr_type_info
              ) ob x
            );
        ) ob x
      | TemplateTypeParmType x ->
        Bi_outbuf.add_char4 ob '\243' '\243' 'q' '\026';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | SubstTemplateTypeParmType x ->
        Bi_outbuf.add_char4 ob '\221' 'd' '\181' '\155';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | SubstTemplateTypeParmPackType x ->
        Bi_outbuf.add_char4 ob '\212' 'X' '\029' '\148';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | TemplateSpecializationType x ->
        Bi_outbuf.add_char4 ob '\236' '\226' 'c' '_';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | AutoType x ->
        Bi_outbuf.add_char4 ob '\137' '\224' '\157' '\233';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | DeducedTemplateSpecializationType x ->
        Bi_outbuf.add_char4 ob '\235' 'd' '4' '\175';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | InjectedClassNameType x ->
        Bi_outbuf.add_char4 ob '\212' '\159' '\151' '\141';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | DependentNameType x ->
        Bi_outbuf.add_char4 ob '\179' '\029' '\191' '\164';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | DependentTemplateSpecializationType x ->
        Bi_outbuf.add_char4 ob '\184' '\222' '\247' '\254';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | PackExpansionType x ->
        Bi_outbuf.add_char4 ob '\144' '\154' 'v' '\160';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | ObjCTypeParamType x ->
        Bi_outbuf.add_char4 ob '\225' '\217' '\003' '\161';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | ObjCObjectType x ->
        Bi_outbuf.add_char4 ob '\128' '\152' '\168' '\197';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_objc_object_type_info
              ) ob x
            );
        ) ob x
      | ObjCInterfaceType x ->
        Bi_outbuf.add_char4 ob '\163' 't' '\244' '\231';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_pointer
              ) ob x
            );
        ) ob x
      | ObjCObjectPointerType x ->
        Bi_outbuf.add_char4 ob '\174' '=' 's' 'l';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | PipeType x ->
        Bi_outbuf.add_char4 ob '\149' 'd' '~' '(';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_type_info
              ) ob x
            );
        ) ob x
      | AtomicType x ->
        Bi_outbuf.add_char4 ob '\157' '\213' '\127' 'e';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_type_info
              ) ob x
            );
            (
              let _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
)
let write_c_type ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_c_type ob x
let string_of_c_type ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_c_type ob x;
  Bi_outbuf.contents ob
let get_c_type_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -808867406, true -> (NoneType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 584402653, true -> (BuiltinType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_builtin_type_kind
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 778892522, true -> (ComplexType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -741205513, true -> (PointerType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -436299286, true -> (BlockPointerType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 185126240, true -> (LValueReferenceType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 693585638, true -> (RValueReferenceType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 248889789, true -> (MemberPointerType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -636723505, true -> (ConstantArrayType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_array_type_info
                      ) ib
                    in
                    let x2 =
                      (
                        Ag_ob_run.read_int
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : c_type)
            | -855525547, true -> (IncompleteArrayType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_array_type_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 889729783, true -> (VariableArrayType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_array_type_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_pointer
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : c_type)
            | -81333713, true -> (DependentSizedArrayType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_array_type_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -884022182, true -> (DependentSizedExtVectorType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 95154493, true -> (VectorType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 152158462, true -> (ExtVectorType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 645492586, true -> (FunctionProtoType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_function_type_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_params_type_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : c_type)
            | 33429737, true -> (FunctionNoProtoType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_function_type_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -857929619, true -> (UnresolvedUsingType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 203313092, true -> (ParenType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 434237317, true -> (TypedefType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_typedef_type_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -955645784, true -> (AdjustedType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 764630355, true -> (DecayedType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -474554816, true -> (TypeOfExprType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -1014593045, true -> (TypeOfType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -485356258, true -> (DecltypeType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -143495369, true -> (UnaryTransformType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -670255605, true -> (RecordType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_pointer
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 186800763, true -> (EnumType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_pointer
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 641425207, true -> (ElaboratedType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -4104254, true -> (AttributedType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_attr_type_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | -202149606, true -> (TemplateTypeParmType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -580602469, true -> (SubstTemplateTypeParmType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -732422764, true -> (SubstTemplateTypeParmPackType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -320707745, true -> (TemplateSpecializationType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 165715433, true -> (AutoType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -345754449, true -> (DeducedTemplateSpecializationType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -727738483, true -> (InjectedClassNameType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 857587620, true -> (DependentNameType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 954136574, true -> (DependentTemplateSpecializationType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 278558368, true -> (PackExpansionType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | -505871455, true -> (ObjCTypeParamType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 10004677, true -> (ObjCObjectType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_objc_object_type_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 594867431, true -> (ObjCInterfaceType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_pointer
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 775779180, true -> (ObjCObjectPointerType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | 358907432, true -> (PipeType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : c_type)
            | 500531045, true -> (AtomicType (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_type_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : c_type)
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_c_type = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -808867406, true -> (NoneType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 584402653, true -> (BuiltinType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_builtin_type_kind
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 778892522, true -> (ComplexType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -741205513, true -> (PointerType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -436299286, true -> (BlockPointerType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 185126240, true -> (LValueReferenceType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 693585638, true -> (RValueReferenceType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 248889789, true -> (MemberPointerType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -636723505, true -> (ConstantArrayType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_array_type_info
                  ) ib
                in
                let x2 =
                  (
                    Ag_ob_run.read_int
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : c_type)
        | -855525547, true -> (IncompleteArrayType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_array_type_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 889729783, true -> (VariableArrayType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_array_type_info
                  ) ib
                in
                let x2 =
                  (
                    read_pointer
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : c_type)
        | -81333713, true -> (DependentSizedArrayType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_array_type_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -884022182, true -> (DependentSizedExtVectorType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 95154493, true -> (VectorType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 152158462, true -> (ExtVectorType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 645492586, true -> (FunctionProtoType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_function_type_info
                  ) ib
                in
                let x2 =
                  (
                    read_params_type_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : c_type)
        | 33429737, true -> (FunctionNoProtoType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_function_type_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -857929619, true -> (UnresolvedUsingType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 203313092, true -> (ParenType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 434237317, true -> (TypedefType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_typedef_type_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -955645784, true -> (AdjustedType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 764630355, true -> (DecayedType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -474554816, true -> (TypeOfExprType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -1014593045, true -> (TypeOfType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -485356258, true -> (DecltypeType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -143495369, true -> (UnaryTransformType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -670255605, true -> (RecordType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_pointer
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 186800763, true -> (EnumType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_pointer
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 641425207, true -> (ElaboratedType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -4104254, true -> (AttributedType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_attr_type_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | -202149606, true -> (TemplateTypeParmType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -580602469, true -> (SubstTemplateTypeParmType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -732422764, true -> (SubstTemplateTypeParmPackType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -320707745, true -> (TemplateSpecializationType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 165715433, true -> (AutoType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -345754449, true -> (DeducedTemplateSpecializationType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -727738483, true -> (InjectedClassNameType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 857587620, true -> (DependentNameType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 954136574, true -> (DependentTemplateSpecializationType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 278558368, true -> (PackExpansionType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | -505871455, true -> (ObjCTypeParamType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 10004677, true -> (ObjCObjectType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_objc_object_type_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 594867431, true -> (ObjCInterfaceType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_pointer
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 775779180, true -> (ObjCObjectPointerType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | 358907432, true -> (PipeType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : c_type)
        | 500531045, true -> (AtomicType (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_type_info
                  ) ib
                in
                let x1 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : c_type)
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let c_type_of_string ?pos s =
  read_c_type (Bi_inbuf.from_string ?pos s)
let _14_tag = Bi_io.array_tag
let write_untagged__14 = (
  Ag_ob_run.write_untagged_list
    c_type_tag
    (
      write_untagged_c_type
    )
)
let write__14 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__14 ob x
let string_of__14 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__14 ob x;
  Bi_outbuf.contents ob
let get__14_reader = (
  Ag_ob_run.get_list_reader (
    get_c_type_reader
  )
)
let read__14 = (
  Ag_ob_run.read_list (
    get_c_type_reader
  )
)
let _14_of_string ?pos s =
  read__14 (Bi_inbuf.from_string ?pos s)
let translation_unit_decl_info_tag = Bi_io.record_tag
let write_untagged_translation_unit_decl_info : Bi_outbuf.t -> translation_unit_decl_info -> unit = (
  fun ob x ->
    let len = ref 3 in
    let x_tudi_arc_enabled = x.tudi_arc_enabled in
    if x_tudi_arc_enabled != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\232' 'p' 'Y' ':';
    (
      write_source_file
    ) ob x.tudi_input_path;
    Bi_outbuf.add_char4 ob '\229' '(' 'T' '\233';
    (
      write_input_kind
    ) ob x.tudi_input_kind;
    if x_tudi_arc_enabled != false then (
      Bi_outbuf.add_char4 ob '\192' '\180' '\254' 'T';
      (
        Bi_io.write_bool
      ) ob x_tudi_arc_enabled;
    );
    Bi_outbuf.add_char4 ob '\154' '\203' 'p' 'y';
    (
      write__14
    ) ob x.tudi_types;
)
let write_translation_unit_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_translation_unit_decl_info ob x
let string_of_translation_unit_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_translation_unit_decl_info ob x;
  Bi_outbuf.contents ob
let get_translation_unit_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_tudi_input_path = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_tudi_input_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_tudi_arc_enabled = ref (false) in
        let field_tudi_types = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -395290310 ->
              field_tudi_input_path := (
                (
                  read_source_file
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -450341655 ->
              field_tudi_input_kind := (
                (
                  read_input_kind
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -1061880236 ->
              field_tudi_arc_enabled := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 449540217 ->
              field_tudi_types := (
                (
                  read__14
                ) ib
              );
              bits0 := !bits0 lor 0x4;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x7 then Ag_ob_run.missing_fields [| !bits0 |] [| "input_path"; "input_kind"; "types" |];
        (
          {
            tudi_input_path = !field_tudi_input_path;
            tudi_input_kind = !field_tudi_input_kind;
            tudi_arc_enabled = !field_tudi_arc_enabled;
            tudi_types = !field_tudi_types;
          }
         : translation_unit_decl_info)
)
let read_translation_unit_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_tudi_input_path = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_tudi_input_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_tudi_arc_enabled = ref (false) in
    let field_tudi_types = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -395290310 ->
          field_tudi_input_path := (
            (
              read_source_file
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -450341655 ->
          field_tudi_input_kind := (
            (
              read_input_kind
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -1061880236 ->
          field_tudi_arc_enabled := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 449540217 ->
          field_tudi_types := (
            (
              read__14
            ) ib
          );
          bits0 := !bits0 lor 0x4;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x7 then Ag_ob_run.missing_fields [| !bits0 |] [| "input_path"; "input_kind"; "types" |];
    (
      {
        tudi_input_path = !field_tudi_input_path;
        tudi_input_kind = !field_tudi_input_kind;
        tudi_arc_enabled = !field_tudi_arc_enabled;
        tudi_types = !field_tudi_types;
      }
     : translation_unit_decl_info)
)
let translation_unit_decl_info_of_string ?pos s =
  read_translation_unit_decl_info (Bi_inbuf.from_string ?pos s)
let unary_expr_or_type_trait_kind_tag = Bi_io.variant_tag
let write_untagged_unary_expr_or_type_trait_kind = (
  fun ob x ->
    match x with
      | `SizeOfWithSize x ->
        Bi_outbuf.add_char4 ob '\194' '\252' '^' '_';
        (
          Bi_io.write_svint
        ) ob x
      | `SizeOf -> Bi_outbuf.add_char4 ob 'u' '\162' '\204' 'X'
      | `AlignOf -> Bi_outbuf.add_char4 ob 'v' '\249' '\191' '\028'
      | `VecStep -> Bi_outbuf.add_char4 ob '\018' '!' '\215' '\160'
      | `OpenMPRequiredSimdAlign -> Bi_outbuf.add_char4 ob ')' 'h' '8' ','
)
let write_unary_expr_or_type_trait_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_unary_expr_or_type_trait_kind ob x
let string_of_unary_expr_or_type_trait_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_unary_expr_or_type_trait_kind ob x;
  Bi_outbuf.contents ob
let get_unary_expr_or_type_trait_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -1023648161, true -> (`SizeOfWithSize (
                (
                  Ag_ob_run.read_int
                ) ib
              ))
            | -173880232, false -> `SizeOf
            | -151404772, false -> `AlignOf
            | 304207776, false -> `VecStep
            | 694695980, false -> `OpenMPRequiredSimdAlign
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_unary_expr_or_type_trait_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -1023648161, true -> (`SizeOfWithSize (
            (
              Ag_ob_run.read_int
            ) ib
          ))
        | -173880232, false -> `SizeOf
        | -151404772, false -> `AlignOf
        | 304207776, false -> `VecStep
        | 694695980, false -> `OpenMPRequiredSimdAlign
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let unary_expr_or_type_trait_kind_of_string ?pos s =
  read_unary_expr_or_type_trait_kind (Bi_inbuf.from_string ?pos s)
let unary_expr_or_type_trait_expr_info_tag = Bi_io.record_tag
let write_untagged_unary_expr_or_type_trait_expr_info : Bi_outbuf.t -> unary_expr_or_type_trait_expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_uttei_qual_type = x.uttei_qual_type in
    if x_uttei_qual_type != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_unary_expr_or_type_trait_kind
    ) ob x.uttei_kind;
    (match x_uttei_qual_type with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\176' '\228' '\135' 'j';
      (
        write_qual_type
      ) ob x;
    );
)
let write_unary_expr_or_type_trait_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_unary_expr_or_type_trait_expr_info ob x
let string_of_unary_expr_or_type_trait_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_unary_expr_or_type_trait_expr_info ob x;
  Bi_outbuf.contents ob
let get_unary_expr_or_type_trait_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_uttei_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_uttei_qual_type = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_uttei_kind := (
                (
                  read_unary_expr_or_type_trait_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 820283242 ->
              field_uttei_qual_type := (
                Some (
                  (
                    read_qual_type
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
        (
          {
            uttei_kind = !field_uttei_kind;
            uttei_qual_type = !field_uttei_qual_type;
          }
         : unary_expr_or_type_trait_expr_info)
)
let read_unary_expr_or_type_trait_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_uttei_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_uttei_qual_type = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_uttei_kind := (
            (
              read_unary_expr_or_type_trait_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 820283242 ->
          field_uttei_qual_type := (
            Some (
              (
                read_qual_type
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
    (
      {
        uttei_kind = !field_uttei_kind;
        uttei_qual_type = !field_uttei_qual_type;
      }
     : unary_expr_or_type_trait_expr_info)
)
let unary_expr_or_type_trait_expr_info_of_string ?pos s =
  read_unary_expr_or_type_trait_expr_info (Bi_inbuf.from_string ?pos s)
let unary_operator_kind_tag = Bi_io.variant_tag
let write_untagged_unary_operator_kind = (
  fun ob x ->
    match x with
      | `PostInc -> Bi_outbuf.add_char4 ob 'd' 'K' 'd' '>'
      | `PostDec -> Bi_outbuf.add_char4 ob 'd' 'G' '\145' '"'
      | `PreInc -> Bi_outbuf.add_char4 ob 'c' '5' 'P' '\155'
      | `PreDec -> Bi_outbuf.add_char4 ob 'c' '1' '}' '\127'
      | `AddrOf -> Bi_outbuf.add_char4 ob 'S' '\180' '\146' '\200'
      | `Deref -> Bi_outbuf.add_char4 ob 'j' 'X' '\216' 'R'
      | `Plus -> Bi_outbuf.add_char4 ob '5' '3' 'k' 'z'
      | `Minus -> Bi_outbuf.add_char4 ob '\027' '\149' '\240' 'P'
      | `Not -> Bi_outbuf.add_char4 ob '\000' ';' '\144' '\243'
      | `LNot -> Bi_outbuf.add_char4 ob '2' 'w' '\200' '\''
      | `Real -> Bi_outbuf.add_char4 ob '6' '\128' 'w' '~'
      | `Imag -> Bi_outbuf.add_char4 ob '0' '\147' '\157' '\234'
      | `Extension -> Bi_outbuf.add_char4 ob '\006' '\227' 's' '_'
      | `Coawait -> Bi_outbuf.add_char4 ob 'l' '\139' '\193' '\n'
)
let write_unary_operator_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_unary_operator_kind ob x
let string_of_unary_operator_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_unary_operator_kind ob x;
  Bi_outbuf.contents ob
let get_unary_operator_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -464821186, false -> `PostInc
            | -465071838, false -> `PostDec
            | -483045221, false -> `PreInc
            | -483295873, false -> `PreDec
            | -743140664, false -> `AddrOf
            | -363276206, false -> `Deref
            | 892562298, false -> `Plus
            | 462811216, false -> `Minus
            | 3903731, false -> `Not
            | 846710823, false -> `LNot
            | 914388862, false -> `Real
            | 814980586, false -> `Imag
            | 115569503, false -> `Extension
            | -326385398, false -> `Coawait
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_unary_operator_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -464821186, false -> `PostInc
        | -465071838, false -> `PostDec
        | -483045221, false -> `PreInc
        | -483295873, false -> `PreDec
        | -743140664, false -> `AddrOf
        | -363276206, false -> `Deref
        | 892562298, false -> `Plus
        | 462811216, false -> `Minus
        | 3903731, false -> `Not
        | 846710823, false -> `LNot
        | 914388862, false -> `Real
        | 814980586, false -> `Imag
        | 115569503, false -> `Extension
        | -326385398, false -> `Coawait
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let unary_operator_kind_of_string ?pos s =
  read_unary_operator_kind (Bi_inbuf.from_string ?pos s)
let unary_operator_info_tag = Bi_io.record_tag
let write_untagged_unary_operator_info : Bi_outbuf.t -> unary_operator_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_uoi_is_postfix = x.uoi_is_postfix in
    if x_uoi_is_postfix != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\199' '\t' '\225' 'T';
    (
      write_unary_operator_kind
    ) ob x.uoi_kind;
    if x_uoi_is_postfix != false then (
      Bi_outbuf.add_char4 ob '\241' '\197' '\232' '\224';
      (
        Bi_io.write_bool
      ) ob x_uoi_is_postfix;
    );
)
let write_unary_operator_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_unary_operator_info ob x
let string_of_unary_operator_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_unary_operator_info ob x;
  Bi_outbuf.contents ob
let get_unary_operator_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_uoi_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_uoi_is_postfix = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -955653804 ->
              field_uoi_kind := (
                (
                  read_unary_operator_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -238688032 ->
              field_uoi_is_postfix := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
        (
          {
            uoi_kind = !field_uoi_kind;
            uoi_is_postfix = !field_uoi_is_postfix;
          }
         : unary_operator_info)
)
let read_unary_operator_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_uoi_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_uoi_is_postfix = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -955653804 ->
          field_uoi_kind := (
            (
              read_unary_operator_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -238688032 ->
          field_uoi_is_postfix := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "kind" |];
    (
      {
        uoi_kind = !field_uoi_kind;
        uoi_is_postfix = !field_uoi_is_postfix;
      }
     : unary_operator_info)
)
let unary_operator_info_of_string ?pos s =
  read_unary_operator_info (Bi_inbuf.from_string ?pos s)
let unresolved_lookup_expr_info_tag = Bi_io.record_tag
let write_untagged_unresolved_lookup_expr_info : Bi_outbuf.t -> unresolved_lookup_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ulei_requires_ADL = x.ulei_requires_ADL in
    if x_ulei_requires_ADL != false then incr len;
    let x_ulei_is_overloaded = x.ulei_is_overloaded in
    if x_ulei_is_overloaded != false then incr len;
    let x_ulei_naming_class = x.ulei_naming_class in
    if x_ulei_naming_class != None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_ulei_requires_ADL != false then (
      Bi_outbuf.add_char4 ob '\186' '\143' '\179' 'x';
      (
        Bi_io.write_bool
      ) ob x_ulei_requires_ADL;
    );
    if x_ulei_is_overloaded != false then (
      Bi_outbuf.add_char4 ob '\128' '\241' '\021' '\206';
      (
        Bi_io.write_bool
      ) ob x_ulei_is_overloaded;
    );
    (match x_ulei_naming_class with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\140' 'P' 'i' '\193';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_unresolved_lookup_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_unresolved_lookup_expr_info ob x
let string_of_unresolved_lookup_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_unresolved_lookup_expr_info ob x;
  Bi_outbuf.contents ob
let get_unresolved_lookup_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ulei_requires_ADL = ref (false) in
        let field_ulei_is_overloaded = ref (false) in
        let field_ulei_naming_class = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 982496120 ->
              field_ulei_requires_ADL := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 15799758 ->
              field_ulei_is_overloaded := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 206596545 ->
              field_ulei_naming_class := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ulei_requires_ADL = !field_ulei_requires_ADL;
            ulei_is_overloaded = !field_ulei_is_overloaded;
            ulei_naming_class = !field_ulei_naming_class;
          }
         : unresolved_lookup_expr_info)
)
let read_unresolved_lookup_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ulei_requires_ADL = ref (false) in
    let field_ulei_is_overloaded = ref (false) in
    let field_ulei_naming_class = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 982496120 ->
          field_ulei_requires_ADL := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 15799758 ->
          field_ulei_is_overloaded := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 206596545 ->
          field_ulei_naming_class := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ulei_requires_ADL = !field_ulei_requires_ADL;
        ulei_is_overloaded = !field_ulei_is_overloaded;
        ulei_naming_class = !field_ulei_naming_class;
      }
     : unresolved_lookup_expr_info)
)
let unresolved_lookup_expr_info_of_string ?pos s =
  read_unresolved_lookup_expr_info (Bi_inbuf.from_string ?pos s)
let using_directive_decl_info_tag = Bi_io.record_tag
let write_untagged_using_directive_decl_info : Bi_outbuf.t -> using_directive_decl_info -> unit = (
  fun ob x ->
    let len = ref 3 in
    let x_uddi_nominated_namespace = x.uddi_nominated_namespace in
    if x_uddi_nominated_namespace != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\176' '\152' '\'' '\208';
    (
      write_source_location
    ) ob x.uddi_using_location;
    Bi_outbuf.add_char4 ob '\250' 'Z' '\019' 'y';
    (
      write_source_location
    ) ob x.uddi_namespace_key_location;
    Bi_outbuf.add_char4 ob '\209' '_' '\232' '\000';
    (
      write__18
    ) ob x.uddi_nested_name_specifier_locs;
    (match x_uddi_nominated_namespace with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\135' '\129' '4' '\159';
      (
        write_decl_ref
      ) ob x;
    );
)
let write_using_directive_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_using_directive_decl_info ob x
let string_of_using_directive_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_using_directive_decl_info ob x;
  Bi_outbuf.contents ob
let get_using_directive_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_uddi_using_location = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_uddi_namespace_key_location = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_uddi_nested_name_specifier_locs = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_uddi_nominated_namespace = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 815278032 ->
              field_uddi_using_location := (
                (
                  read_source_location
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -94760071 ->
              field_uddi_namespace_key_location := (
                (
                  read_source_location
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -782243840 ->
              field_uddi_nested_name_specifier_locs := (
                (
                  read__18
                ) ib
              );
              bits0 := !bits0 lor 0x4;
            | 125908127 ->
              field_uddi_nominated_namespace := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x7 then Ag_ob_run.missing_fields [| !bits0 |] [| "using_location"; "namespace_key_location"; "nested_name_specifier_locs" |];
        (
          {
            uddi_using_location = !field_uddi_using_location;
            uddi_namespace_key_location = !field_uddi_namespace_key_location;
            uddi_nested_name_specifier_locs = !field_uddi_nested_name_specifier_locs;
            uddi_nominated_namespace = !field_uddi_nominated_namespace;
          }
         : using_directive_decl_info)
)
let read_using_directive_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_uddi_using_location = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_uddi_namespace_key_location = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_uddi_nested_name_specifier_locs = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_uddi_nominated_namespace = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 815278032 ->
          field_uddi_using_location := (
            (
              read_source_location
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -94760071 ->
          field_uddi_namespace_key_location := (
            (
              read_source_location
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -782243840 ->
          field_uddi_nested_name_specifier_locs := (
            (
              read__18
            ) ib
          );
          bits0 := !bits0 lor 0x4;
        | 125908127 ->
          field_uddi_nominated_namespace := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x7 then Ag_ob_run.missing_fields [| !bits0 |] [| "using_location"; "namespace_key_location"; "nested_name_specifier_locs" |];
    (
      {
        uddi_using_location = !field_uddi_using_location;
        uddi_namespace_key_location = !field_uddi_namespace_key_location;
        uddi_nested_name_specifier_locs = !field_uddi_nested_name_specifier_locs;
        uddi_nominated_namespace = !field_uddi_nominated_namespace;
      }
     : using_directive_decl_info)
)
let using_directive_decl_info_of_string ?pos s =
  read_using_directive_decl_info (Bi_inbuf.from_string ?pos s)
let value_kind_tag = Bi_io.variant_tag
let write_untagged_value_kind = (
  fun ob x ->
    match x with
      | `RValue -> Bi_outbuf.add_char4 ob '\014' ')' '\133' '\191'
      | `LValue -> Bi_outbuf.add_char4 ob '(' '\005' '[' '\133'
      | `XValue -> Bi_outbuf.add_char4 ob 't' 'M' '\175' '\249'
)
let write_value_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_value_kind ob x
let string_of_value_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_value_kind ob x;
  Bi_outbuf.contents ob
let get_value_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 237602239, false -> `RValue
            | 671439749, false -> `LValue
            | -196235271, false -> `XValue
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
let read_value_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 237602239, false -> `RValue
        | 671439749, false -> `LValue
        | -196235271, false -> `XValue
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
let value_kind_of_string ?pos s =
  read_value_kind (Bi_inbuf.from_string ?pos s)
let expr_info_tag = Bi_io.record_tag
let write_untagged_expr_info : Bi_outbuf.t -> expr_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_ei_value_kind = x.ei_value_kind in
    if x_ei_value_kind != `RValue then incr len;
    let x_ei_object_kind = x.ei_object_kind in
    if x_ei_object_kind != `Ordinary then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\176' '\228' '\135' 'j';
    (
      write_qual_type
    ) ob x.ei_qual_type;
    if x_ei_value_kind != `RValue then (
      Bi_outbuf.add_char4 ob '\142' '\137' '\228' '"';
      (
        write_value_kind
      ) ob x_ei_value_kind;
    );
    if x_ei_object_kind != `Ordinary then (
      Bi_outbuf.add_char4 ob '\214' '\028' '\170' '\020';
      (
        write_object_kind
      ) ob x_ei_object_kind;
    );
)
let write_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_expr_info ob x
let string_of_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_expr_info ob x;
  Bi_outbuf.contents ob
let get_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ei_qual_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_ei_value_kind = ref (`RValue) in
        let field_ei_object_kind = ref (`Ordinary) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 820283242 ->
              field_ei_qual_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 243917858 ->
              field_ei_value_kind := (
                (
                  read_value_kind
                ) ib
              );
            | -702764524 ->
              field_ei_object_kind := (
                (
                  read_object_kind
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "qual_type" |];
        (
          {
            ei_qual_type = !field_ei_qual_type;
            ei_value_kind = !field_ei_value_kind;
            ei_object_kind = !field_ei_object_kind;
          }
         : expr_info)
)
let read_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ei_qual_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_ei_value_kind = ref (`RValue) in
    let field_ei_object_kind = ref (`Ordinary) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 820283242 ->
          field_ei_qual_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 243917858 ->
          field_ei_value_kind := (
            (
              read_value_kind
            ) ib
          );
        | -702764524 ->
          field_ei_object_kind := (
            (
              read_object_kind
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "qual_type" |];
    (
      {
        ei_qual_type = !field_ei_qual_type;
        ei_value_kind = !field_ei_value_kind;
        ei_object_kind = !field_ei_object_kind;
      }
     : expr_info)
)
let expr_info_of_string ?pos s =
  read_expr_info (Bi_inbuf.from_string ?pos s)
let rec _22_tag = Bi_io.array_tag
and write_untagged__22 ob x = (
  Ag_ob_run.write_untagged_list
    template_instantiation_arg_info_tag
    (
      write_untagged_template_instantiation_arg_info
    )
) ob x
and write__22 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__22 ob x
and string_of__22 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__22 ob x;
  Bi_outbuf.contents ob
and template_instantiation_arg_info_tag = Bi_io.variant_tag
and write_untagged_template_instantiation_arg_info = (
  fun ob x ->
    match x with
      | `Null -> Bi_outbuf.add_char4 ob '3' '\231' '\202' '\167'
      | `Type x ->
        Bi_outbuf.add_char4 ob '\183' '\226' '\030' '\218';
        (
          write_qual_type
        ) ob x
      | `Declaration x ->
        Bi_outbuf.add_char4 ob '\202' 'E' '\188' '\218';
        (
          write_pointer
        ) ob x
      | `NullPtr -> Bi_outbuf.add_char4 ob 'j' '2' '1' '\135'
      | `Integral x ->
        Bi_outbuf.add_char4 ob '\250' '\229' '\211' '\140';
        (
          Bi_io.write_string
        ) ob x
      | `Template -> Bi_outbuf.add_char4 ob '\005' '\249' '\164' 'Z'
      | `TemplateExpansion -> Bi_outbuf.add_char4 ob '\t' '\000' '\'' 'E'
      | `Expression -> Bi_outbuf.add_char4 ob '%' 'P' '\021' '\184'
      | `Pack x ->
        Bi_outbuf.add_char4 ob '\181' '+' '\002' '\249';
        (
          write__22
        ) ob x
)
and write_template_instantiation_arg_info ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_template_instantiation_arg_info ob x
and string_of_template_instantiation_arg_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_template_instantiation_arg_info ob x;
  Bi_outbuf.contents ob
let rec get__22_reader tag = (
  Ag_ob_run.get_list_reader (
    get_template_instantiation_arg_info_reader
  )
) tag
and read__22 ib = (
  Ag_ob_run.read_list (
    get_template_instantiation_arg_info_reader
  )
) ib
and _22_of_string ?pos s =
  read__22 (Bi_inbuf.from_string ?pos s)
and get_template_instantiation_arg_info_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 870828711, false -> `Null
            | 937565914, true -> (`Type (
                (
                  read_qual_type
                ) ib
              ))
            | -901399334, true -> (`Declaration (
                (
                  read_pointer
                ) ib
              ))
            | -365809273, false -> `NullPtr
            | -85601396, true -> (`Integral (
                (
                  Ag_ob_run.read_string
                ) ib
              ))
            | 100246618, false -> `Template
            | 151004997, false -> `TemplateExpansion
            | 626005432, false -> `Expression
            | 892011257, true -> (`Pack (
                (
                  read__22
                ) ib
              ))
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
and read_template_instantiation_arg_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 870828711, false -> `Null
        | 937565914, true -> (`Type (
            (
              read_qual_type
            ) ib
          ))
        | -901399334, true -> (`Declaration (
            (
              read_pointer
            ) ib
          ))
        | -365809273, false -> `NullPtr
        | -85601396, true -> (`Integral (
            (
              Ag_ob_run.read_string
            ) ib
          ))
        | 100246618, false -> `Template
        | 151004997, false -> `TemplateExpansion
        | 626005432, false -> `Expression
        | 892011257, true -> (`Pack (
            (
              read__22
            ) ib
          ))
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
and template_instantiation_arg_info_of_string ?pos s =
  read_template_instantiation_arg_info (Bi_inbuf.from_string ?pos s)
let template_specialization_info_tag = Bi_io.record_tag
let write_untagged_template_specialization_info : Bi_outbuf.t -> template_specialization_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_tsi_specialization_args = x.tsi_specialization_args in
    if x_tsi_specialization_args != [] then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\228' '9' 'q' '\207';
    (
      write_pointer
    ) ob x.tsi_template_decl;
    if x_tsi_specialization_args != [] then (
      Bi_outbuf.add_char4 ob '\141' '\229' '%' 'Q';
      (
        write__22
      ) ob x_tsi_specialization_args;
    );
)
let write_template_specialization_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_template_specialization_info ob x
let string_of_template_specialization_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_template_specialization_info ob x;
  Bi_outbuf.contents ob
let get_template_specialization_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_tsi_template_decl = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_tsi_specialization_args = ref ([]) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -465997361 ->
              field_tsi_template_decl := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 233121105 ->
              field_tsi_specialization_args := (
                (
                  read__22
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "template_decl" |];
        (
          {
            tsi_template_decl = !field_tsi_template_decl;
            tsi_specialization_args = !field_tsi_specialization_args;
          }
         : template_specialization_info)
)
let read_template_specialization_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_tsi_template_decl = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_tsi_specialization_args = ref ([]) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -465997361 ->
          field_tsi_template_decl := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 233121105 ->
          field_tsi_specialization_args := (
            (
              read__22
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "template_decl" |];
    (
      {
        tsi_template_decl = !field_tsi_template_decl;
        tsi_specialization_args = !field_tsi_specialization_args;
      }
     : template_specialization_info)
)
let template_specialization_info_of_string ?pos s =
  read_template_specialization_info (Bi_inbuf.from_string ?pos s)
let _17_tag = Bi_io.num_variant_tag
let write_untagged__17 = (
  Ag_ob_run.write_untagged_option (
    write_template_specialization_info
  )
)
let write__17 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__17 ob x
let string_of__17 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__17 ob x;
  Bi_outbuf.contents ob
let get__17_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_template_specialization_info
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__17 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_template_specialization_info
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _17_of_string ?pos s =
  read__17 (Bi_inbuf.from_string ?pos s)
let rec _29_tag = Bi_io.array_tag
and write_untagged__29 ob x = (
  Ag_ob_run.write_untagged_list
    comment_tag
    (
      write_untagged_comment
    )
) ob x
and write__29 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__29 ob x
and string_of__29 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__29 ob x;
  Bi_outbuf.contents ob
and comment_tag = Bi_io.variant_tag
and write_untagged_comment : Bi_outbuf.t -> comment -> unit = (
  fun ob x ->
    match x with
      | BlockCommandComment x ->
        Bi_outbuf.add_char4 ob '\217' '}' '\014' 'a';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | ParamCommandComment x ->
        Bi_outbuf.add_char4 ob '\250' '[' 'I' '\161';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | TParamCommandComment x ->
        Bi_outbuf.add_char4 ob '\147' 'a' 'M' '\205';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | VerbatimBlockComment x ->
        Bi_outbuf.add_char4 ob '\184' '\204' '\021' '\136';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | VerbatimLineComment x ->
        Bi_outbuf.add_char4 ob '\237' '"' '\140' '\149';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | ParagraphComment x ->
        Bi_outbuf.add_char4 ob '\217' '\169' 'H' '\177';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | FullComment x ->
        Bi_outbuf.add_char4 ob '\140' '\188' '0' 'p';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | HTMLEndTagComment x ->
        Bi_outbuf.add_char4 ob '\135' '~' '\218' 'u';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | HTMLStartTagComment x ->
        Bi_outbuf.add_char4 ob '\240' '%' '\168' '\252';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | InlineCommandComment x ->
        Bi_outbuf.add_char4 ob '\233' '\228' '\148' '\173';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
      | TextComment x ->
        Bi_outbuf.add_char4 ob '\193' '#' '\r' '\018';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__29
              ) ob x
            );
            (
              let _, _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | VerbatimBlockLineComment x ->
        Bi_outbuf.add_char4 ob '\247' '\247' '\020' 't';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_comment_info
              ) ob x
            );
            (
              let _, x = x in (
                write__29
              ) ob x
            );
        ) ob x
)
and write_comment ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_comment ob x
and string_of_comment ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_comment ob x;
  Bi_outbuf.contents ob
let rec get__29_reader tag = (
  Ag_ob_run.get_list_reader (
    get_comment_reader
  )
) tag
and read__29 ib = (
  Ag_ob_run.read_list (
    get_comment_reader
  )
) ib
and _29_of_string ?pos s =
  read__29 (Bi_inbuf.from_string ?pos s)
and get_comment_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | -646115743, true -> (BlockCommandComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | -94680671, true -> (ParamCommandComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | 325144013, true -> (TParamCommandComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | 952898952, true -> (VerbatimBlockComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | -316502891, true -> (VerbatimLineComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | -643217231, true -> (ParagraphComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | 213659760, true -> (FullComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | 125753973, true -> (HTMLEndTagComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | -265967364, true -> (HTMLStartTagComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | -370895699, true -> (InlineCommandComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | -1054667502, true -> (TextComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    let x2 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : comment)
            | -134802316, true -> (VerbatimBlockLineComment (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_comment_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__29
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : comment)
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
and read_comment = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | -646115743, true -> (BlockCommandComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | -94680671, true -> (ParamCommandComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | 325144013, true -> (TParamCommandComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | 952898952, true -> (VerbatimBlockComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | -316502891, true -> (VerbatimLineComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | -643217231, true -> (ParagraphComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | 213659760, true -> (FullComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | 125753973, true -> (HTMLEndTagComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | -265967364, true -> (HTMLStartTagComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | -370895699, true -> (InlineCommandComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | -1054667502, true -> (TextComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                let x2 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : comment)
        | -134802316, true -> (VerbatimBlockLineComment (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_comment_info
                  ) ib
                in
                let x1 =
                  (
                    read__29
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : comment)
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
and comment_of_string ?pos s =
  read_comment (Bi_inbuf.from_string ?pos s)
let _13_tag = Bi_io.num_variant_tag
let write_untagged__13 = (
  Ag_ob_run.write_untagged_option (
    write_comment
  )
)
let write__13 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__13 ob x
let string_of__13 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__13 ob x;
  Bi_outbuf.contents ob
let get__13_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_comment
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
let read__13 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_comment
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
let _13_of_string ?pos s =
  read__13 (Bi_inbuf.from_string ?pos s)
let decl_info_tag = Bi_io.record_tag
let write_untagged_decl_info : Bi_outbuf.t -> decl_info -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_di_parent_pointer = x.di_parent_pointer in
    if x_di_parent_pointer != None then incr len;
    let x_di_owning_module = x.di_owning_module in
    if x_di_owning_module != None then incr len;
    let x_di_is_hidden = x.di_is_hidden in
    if x_di_is_hidden != false then incr len;
    let x_di_is_implicit = x.di_is_implicit in
    if x_di_is_implicit != false then incr len;
    let x_di_is_used = x.di_is_used in
    if x_di_is_used != false then incr len;
    let x_di_is_this_declaration_referenced = x.di_is_this_declaration_referenced in
    if x_di_is_this_declaration_referenced != false then incr len;
    let x_di_is_invalid_decl = x.di_is_invalid_decl in
    if x_di_is_invalid_decl != false then incr len;
    let x_di_attributes = x.di_attributes in
    if x_di_attributes != [] then incr len;
    let x_di_full_comment = x.di_full_comment in
    if x_di_full_comment != None then incr len;
    let x_di_access = x.di_access in
    if x_di_access != `None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\209' '!' '\192' '\189';
    (
      write_pointer
    ) ob x.di_pointer;
    (match x_di_parent_pointer with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\249' '\000' 'Y' 'h';
      (
        write_pointer
      ) ob x;
    );
    Bi_outbuf.add_char4 ob '\161' 'y' '4' '\025';
    (
      write_source_range
    ) ob x.di_source_range;
    (match x_di_owning_module with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\226' '\224' '\239' 'o';
      (
        Bi_io.write_string
      ) ob x;
    );
    if x_di_is_hidden != false then (
      Bi_outbuf.add_char4 ob '\241' '\186' 'f' '_';
      (
        Bi_io.write_bool
      ) ob x_di_is_hidden;
    );
    if x_di_is_implicit != false then (
      Bi_outbuf.add_char4 ob '\235' '\138' '\031' 'Z';
      (
        Bi_io.write_bool
      ) ob x_di_is_implicit;
    );
    if x_di_is_used != false then (
      Bi_outbuf.add_char4 ob '\138' '\022' '\225' '\242';
      (
        Bi_io.write_bool
      ) ob x_di_is_used;
    );
    if x_di_is_this_declaration_referenced != false then (
      Bi_outbuf.add_char4 ob '\211' '6' '\140' '\138';
      (
        Bi_io.write_bool
      ) ob x_di_is_this_declaration_referenced;
    );
    if x_di_is_invalid_decl != false then (
      Bi_outbuf.add_char4 ob '\249' '\030' '\254' '\167';
      (
        Bi_io.write_bool
      ) ob x_di_is_invalid_decl;
    );
    if x_di_attributes != [] then (
      Bi_outbuf.add_char4 ob '\151' 'q' '\168' '\215';
      (
        write__12
      ) ob x_di_attributes;
    );
    (match x_di_full_comment with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\240' 'X' 'd' 'o';
      (
        write_comment
      ) ob x;
    );
    if x_di_access != `None then (
      Bi_outbuf.add_char4 ob '\139' '\006' '\149' '\164';
      (
        write_access_specifier
      ) ob x_di_access;
    );
)
let write_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_decl_info ob x
let string_of_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_decl_info ob x;
  Bi_outbuf.contents ob
let get_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_di_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_di_parent_pointer = ref (None) in
        let field_di_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_di_owning_module = ref (None) in
        let field_di_is_hidden = ref (false) in
        let field_di_is_implicit = ref (false) in
        let field_di_is_used = ref (false) in
        let field_di_is_this_declaration_referenced = ref (false) in
        let field_di_is_invalid_decl = ref (false) in
        let field_di_attributes = ref ([]) in
        let field_di_full_comment = ref (None) in
        let field_di_access = ref (`None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -786317123 ->
              field_di_pointer := (
                (
                  read_pointer
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -117417624 ->
              field_di_parent_pointer := (
                Some (
                  (
                    read_pointer
                  ) ib
                )
              );
            | 561591321 ->
              field_di_source_range := (
                (
                  read_source_range
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -488575121 ->
              field_di_owning_module := (
                Some (
                  (
                    Ag_ob_run.read_string
                  ) ib
                )
              );
            | -239442337 ->
              field_di_is_hidden := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -343269542 ->
              field_di_is_implicit := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 169271794 ->
              field_di_is_used := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -751399798 ->
              field_di_is_this_declaration_referenced := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -115409241 ->
              field_di_is_invalid_decl := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 393324759 ->
              field_di_attributes := (
                (
                  read__12
                ) ib
              );
            | -262642577 ->
              field_di_full_comment := (
                Some (
                  (
                    read_comment
                  ) ib
                )
              );
            | 184980900 ->
              field_di_access := (
                (
                  read_access_specifier
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer"; "source_range" |];
        (
          {
            di_pointer = !field_di_pointer;
            di_parent_pointer = !field_di_parent_pointer;
            di_source_range = !field_di_source_range;
            di_owning_module = !field_di_owning_module;
            di_is_hidden = !field_di_is_hidden;
            di_is_implicit = !field_di_is_implicit;
            di_is_used = !field_di_is_used;
            di_is_this_declaration_referenced = !field_di_is_this_declaration_referenced;
            di_is_invalid_decl = !field_di_is_invalid_decl;
            di_attributes = !field_di_attributes;
            di_full_comment = !field_di_full_comment;
            di_access = !field_di_access;
          }
         : decl_info)
)
let read_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_di_pointer = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_di_parent_pointer = ref (None) in
    let field_di_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_di_owning_module = ref (None) in
    let field_di_is_hidden = ref (false) in
    let field_di_is_implicit = ref (false) in
    let field_di_is_used = ref (false) in
    let field_di_is_this_declaration_referenced = ref (false) in
    let field_di_is_invalid_decl = ref (false) in
    let field_di_attributes = ref ([]) in
    let field_di_full_comment = ref (None) in
    let field_di_access = ref (`None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -786317123 ->
          field_di_pointer := (
            (
              read_pointer
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -117417624 ->
          field_di_parent_pointer := (
            Some (
              (
                read_pointer
              ) ib
            )
          );
        | 561591321 ->
          field_di_source_range := (
            (
              read_source_range
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -488575121 ->
          field_di_owning_module := (
            Some (
              (
                Ag_ob_run.read_string
              ) ib
            )
          );
        | -239442337 ->
          field_di_is_hidden := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -343269542 ->
          field_di_is_implicit := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 169271794 ->
          field_di_is_used := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -751399798 ->
          field_di_is_this_declaration_referenced := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -115409241 ->
          field_di_is_invalid_decl := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 393324759 ->
          field_di_attributes := (
            (
              read__12
            ) ib
          );
        | -262642577 ->
          field_di_full_comment := (
            Some (
              (
                read_comment
              ) ib
            )
          );
        | 184980900 ->
          field_di_access := (
            (
              read_access_specifier
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "pointer"; "source_range" |];
    (
      {
        di_pointer = !field_di_pointer;
        di_parent_pointer = !field_di_parent_pointer;
        di_source_range = !field_di_source_range;
        di_owning_module = !field_di_owning_module;
        di_is_hidden = !field_di_is_hidden;
        di_is_implicit = !field_di_is_implicit;
        di_is_used = !field_di_is_used;
        di_is_this_declaration_referenced = !field_di_is_this_declaration_referenced;
        di_is_invalid_decl = !field_di_is_invalid_decl;
        di_attributes = !field_di_attributes;
        di_full_comment = !field_di_full_comment;
        di_access = !field_di_access;
      }
     : decl_info)
)
let decl_info_of_string ?pos s =
  read_decl_info (Bi_inbuf.from_string ?pos s)
let rec _16_tag = Bi_io.array_tag
and write_untagged__16 ob x = (
  Ag_ob_run.write_untagged_list
    decl_tag
    (
      write_untagged_decl
    )
) ob x
and write__16 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__16 ob x
and string_of__16 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__16 ob x;
  Bi_outbuf.contents ob
and _19_tag = Bi_io.num_variant_tag
and write_untagged__19 ob x = (
  Ag_ob_run.write_untagged_option (
    write_decl
  )
) ob x
and write__19 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__19 ob x
and string_of__19 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__19 ob x;
  Bi_outbuf.contents ob
and _21_tag = Bi_io.array_tag
and write_untagged__21 ob x = (
  Ag_ob_run.write_untagged_list
    lambda_capture_info_tag
    (
      write_untagged_lambda_capture_info
    )
) ob x
and write__21 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__21 ob x
and string_of__21 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__21 ob x;
  Bi_outbuf.contents ob
and _23_tag = Bi_io.array_tag
and write_untagged__23 ob x = (
  Ag_ob_run.write_untagged_list
    cxx_ctor_initializer_tag
    (
      write_untagged_cxx_ctor_initializer
    )
) ob x
and write__23 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__23 ob x
and string_of__23 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__23 ob x;
  Bi_outbuf.contents ob
and _25_tag = Bi_io.array_tag
and write_untagged__25 ob x = (
  Ag_ob_run.write_untagged_list
    block_captured_variable_tag
    (
      write_untagged_block_captured_variable
    )
) ob x
and write__25 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__25 ob x
and string_of__25 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__25 ob x;
  Bi_outbuf.contents ob
and _28_tag = Bi_io.array_tag
and write_untagged__28 ob x = (
  Ag_ob_run.write_untagged_list
    stmt_tag
    (
      write_untagged_stmt
    )
) ob x
and write__28 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__28 ob x
and string_of__28 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__28 ob x;
  Bi_outbuf.contents ob
and _9_tag = Bi_io.num_variant_tag
and write_untagged__9 ob x = (
  Ag_ob_run.write_untagged_option (
    write_stmt
  )
) ob x
and write__9 ob x =
  Bi_io.write_tag ob Bi_io.num_variant_tag;
  write_untagged__9 ob x
and string_of__9 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__9 ob x;
  Bi_outbuf.contents ob
and block_captured_variable_tag = Bi_io.record_tag
and write_untagged_block_captured_variable : Bi_outbuf.t -> block_captured_variable -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_bcv_is_by_ref = x.bcv_is_by_ref in
    if x_bcv_is_by_ref != false then incr len;
    let x_bcv_is_nested = x.bcv_is_nested in
    if x_bcv_is_nested != false then incr len;
    let x_bcv_variable = x.bcv_variable in
    if x_bcv_variable != None then incr len;
    let x_bcv_copy_expr = x.bcv_copy_expr in
    if x_bcv_copy_expr != None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_bcv_is_by_ref != false then (
      Bi_outbuf.add_char4 ob '\190' '\188' '\018' '\160';
      (
        Bi_io.write_bool
      ) ob x_bcv_is_by_ref;
    );
    if x_bcv_is_nested != false then (
      Bi_outbuf.add_char4 ob '\148' ':' '\149' '\236';
      (
        Bi_io.write_bool
      ) ob x_bcv_is_nested;
    );
    (match x_bcv_variable with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\233' '\r' '\018' '<';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_bcv_copy_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\232' '\252' '\205' '?';
      (
        write_stmt
      ) ob x;
    );
)
and write_block_captured_variable ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_block_captured_variable ob x
and string_of_block_captured_variable ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_block_captured_variable ob x;
  Bi_outbuf.contents ob
and block_decl_info_tag = Bi_io.record_tag
and write_untagged_block_decl_info : Bi_outbuf.t -> block_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_bdi_parameters = x.bdi_parameters in
    if x_bdi_parameters != [] then incr len;
    let x_bdi_is_variadic = x.bdi_is_variadic in
    if x_bdi_is_variadic != false then incr len;
    let x_bdi_captures_cxx_this = x.bdi_captures_cxx_this in
    if x_bdi_captures_cxx_this != false then incr len;
    let x_bdi_captured_variables = x.bdi_captured_variables in
    if x_bdi_captured_variables != [] then incr len;
    let x_bdi_body = x.bdi_body in
    if x_bdi_body != None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_bdi_parameters != [] then (
      Bi_outbuf.add_char4 ob '\209' '~' '\190' '\170';
      (
        write__16
      ) ob x_bdi_parameters;
    );
    if x_bdi_is_variadic != false then (
      Bi_outbuf.add_char4 ob '\237' 'R' 'b' 'T';
      (
        Bi_io.write_bool
      ) ob x_bdi_is_variadic;
    );
    if x_bdi_captures_cxx_this != false then (
      Bi_outbuf.add_char4 ob '\194' '\157' '\255' '\204';
      (
        Bi_io.write_bool
      ) ob x_bdi_captures_cxx_this;
    );
    if x_bdi_captured_variables != [] then (
      Bi_outbuf.add_char4 ob '\144' 'z' '\213' '\022';
      (
        write__25
      ) ob x_bdi_captured_variables;
    );
    (match x_bdi_body with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\193' '\027' 'z' '\162';
      (
        write_stmt
      ) ob x;
    );
)
and write_block_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_block_decl_info ob x
and string_of_block_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_block_decl_info ob x;
  Bi_outbuf.contents ob
and cxx_catch_stmt_info_tag = Bi_io.record_tag
and write_untagged_cxx_catch_stmt_info : Bi_outbuf.t -> cxx_catch_stmt_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_xcsi_variable = x.xcsi_variable in
    if x_xcsi_variable != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_xcsi_variable with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\233' '\r' '\018' '<';
      (
        write_decl
      ) ob x;
    );
)
and write_cxx_catch_stmt_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_catch_stmt_info ob x
and string_of_cxx_catch_stmt_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_catch_stmt_info ob x;
  Bi_outbuf.contents ob
and cxx_ctor_initializer_tag = Bi_io.record_tag
and write_untagged_cxx_ctor_initializer : Bi_outbuf.t -> cxx_ctor_initializer -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_xci_init_expr = x.xci_init_expr in
    if x_xci_init_expr != None then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\169' '\136' '\001' '\172';
    (
      write_cxx_ctor_initializer_subject
    ) ob x.xci_subject;
    Bi_outbuf.add_char4 ob '\161' 'y' '4' '\025';
    (
      write_source_range
    ) ob x.xci_source_range;
    (match x_xci_init_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\254' '\147' '\196' '\004';
      (
        write_stmt
      ) ob x;
    );
)
and write_cxx_ctor_initializer ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_ctor_initializer ob x
and string_of_cxx_ctor_initializer ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_ctor_initializer ob x;
  Bi_outbuf.contents ob
and cxx_default_expr_info_tag = Bi_io.record_tag
and write_untagged_cxx_default_expr_info : Bi_outbuf.t -> cxx_default_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_xdaei_init_expr = x.xdaei_init_expr in
    if x_xdaei_init_expr != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_xdaei_init_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\254' '\147' '\196' '\004';
      (
        write_stmt
      ) ob x;
    );
)
and write_cxx_default_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_default_expr_info ob x
and string_of_cxx_default_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_default_expr_info ob x;
  Bi_outbuf.contents ob
and cxx_method_decl_info_tag = Bi_io.record_tag
and write_untagged_cxx_method_decl_info : Bi_outbuf.t -> cxx_method_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_xmdi_is_virtual = x.xmdi_is_virtual in
    if x_xmdi_is_virtual != false then incr len;
    let x_xmdi_is_static = x.xmdi_is_static in
    if x_xmdi_is_static != false then incr len;
    let x_xmdi_is_constexpr = x.xmdi_is_constexpr in
    if x_xmdi_is_constexpr != false then incr len;
    let x_xmdi_cxx_ctor_initializers = x.xmdi_cxx_ctor_initializers in
    if x_xmdi_cxx_ctor_initializers != [] then incr len;
    let x_xmdi_overriden_methods = x.xmdi_overriden_methods in
    if x_xmdi_overriden_methods != [] then incr len;
    Bi_vint.write_uvint ob !len;
    if x_xmdi_is_virtual != false then (
      Bi_outbuf.add_char4 ob '\241' '\199' 'M' 'v';
      (
        Bi_io.write_bool
      ) ob x_xmdi_is_virtual;
    );
    if x_xmdi_is_static != false then (
      Bi_outbuf.add_char4 ob '\171' ' ' 'C' '\163';
      (
        Bi_io.write_bool
      ) ob x_xmdi_is_static;
    );
    if x_xmdi_is_constexpr != false then (
      Bi_outbuf.add_char4 ob '\254' '(' '\132' 'C';
      (
        Bi_io.write_bool
      ) ob x_xmdi_is_constexpr;
    );
    if x_xmdi_cxx_ctor_initializers != [] then (
      Bi_outbuf.add_char4 ob '\239' 'h' 'K' '\000';
      (
        write__23
      ) ob x_xmdi_cxx_ctor_initializers;
    );
    if x_xmdi_overriden_methods != [] then (
      Bi_outbuf.add_char4 ob '\207' '\143' '\186' '\149';
      (
        write__8
      ) ob x_xmdi_overriden_methods;
    );
)
and write_cxx_method_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_method_decl_info ob x
and string_of_cxx_method_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_method_decl_info ob x;
  Bi_outbuf.contents ob
and cxx_record_decl_info_tag = Bi_io.record_tag
and write_untagged_cxx_record_decl_info : Bi_outbuf.t -> cxx_record_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_xrdi_bases = x.xrdi_bases in
    if x_xrdi_bases != [] then incr len;
    let x_xrdi_vbases = x.xrdi_vbases in
    if x_xrdi_vbases != [] then incr len;
    let x_xrdi_transitive_vbases = x.xrdi_transitive_vbases in
    if x_xrdi_transitive_vbases != [] then incr len;
    let x_xrdi_is_pod = x.xrdi_is_pod in
    if x_xrdi_is_pod != false then incr len;
    let x_xrdi_destructor = x.xrdi_destructor in
    if x_xrdi_destructor != None then incr len;
    let x_xrdi_lambda_call_operator = x.xrdi_lambda_call_operator in
    if x_xrdi_lambda_call_operator != None then incr len;
    let x_xrdi_lambda_captures = x.xrdi_lambda_captures in
    if x_xrdi_lambda_captures != [] then incr len;
    Bi_vint.write_uvint ob !len;
    if x_xrdi_bases != [] then (
      Bi_outbuf.add_char4 ob '\173' '\186' '\'' 'B';
      (
        write__20
      ) ob x_xrdi_bases;
    );
    if x_xrdi_vbases != [] then (
      Bi_outbuf.add_char4 ob '\219' '\214' '\187' '\012';
      (
        write__20
      ) ob x_xrdi_vbases;
    );
    if x_xrdi_transitive_vbases != [] then (
      Bi_outbuf.add_char4 ob '\202' '\138' '\'' '\166';
      (
        write__20
      ) ob x_xrdi_transitive_vbases;
    );
    if x_xrdi_is_pod != false then (
      Bi_outbuf.add_char4 ob '\241' '\174' ';' 'p';
      (
        Bi_io.write_bool
      ) ob x_xrdi_is_pod;
    );
    (match x_xrdi_destructor with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\148' '\017' '\219' '9';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_xrdi_lambda_call_operator with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\255' '\b' '\184' '-';
      (
        write_decl_ref
      ) ob x;
    );
    if x_xrdi_lambda_captures != [] then (
      Bi_outbuf.add_char4 ob '\183' '\005' 'P' '\165';
      (
        write__21
      ) ob x_xrdi_lambda_captures;
    );
)
and write_cxx_record_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_cxx_record_decl_info ob x
and string_of_cxx_record_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_cxx_record_decl_info ob x;
  Bi_outbuf.contents ob
and decl_tag = Bi_io.variant_tag
and write_untagged_decl : Bi_outbuf.t -> decl -> unit = (
  fun ob x ->
    match x with
      | AccessSpecDecl x ->
        Bi_outbuf.add_char4 ob '\156' '\213' '\190' ')';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | BlockDecl x ->
        Bi_outbuf.add_char4 ob '\233' '\199' '\252' '7';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_block_decl_info
              ) ob x
            );
        ) ob x
      | CapturedDecl x ->
        Bi_outbuf.add_char4 ob '\139' 'R' 'T' '\200';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, x = x in (
                write_decl_context_info
              ) ob x
            );
        ) ob x
      | ClassScopeFunctionSpecializationDecl x ->
        Bi_outbuf.add_char4 ob '\210' 'y' '\184' '\201';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | EmptyDecl x ->
        Bi_outbuf.add_char4 ob '\161' '\017' 'a' 'w';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | ExportDecl x ->
        Bi_outbuf.add_char4 ob '\207' '\133' '\220' '\030';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | ExternCContextDecl x ->
        Bi_outbuf.add_char4 ob '\194' '\238' '\007' '\246';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | FileScopeAsmDecl x ->
        Bi_outbuf.add_char4 ob '\148' '=' '\198' '\205';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | FriendDecl x ->
        Bi_outbuf.add_char4 ob '\158' '\025' 'b' '\b';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_friend_info
              ) ob x
            );
        ) ob x
      | FriendTemplateDecl x ->
        Bi_outbuf.add_char4 ob '\228' '\131' '\233' 'b';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | ImportDecl x ->
        Bi_outbuf.add_char4 ob '\192' 'P' '8' '\143';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | LinkageSpecDecl x ->
        Bi_outbuf.add_char4 ob '\191' '\179' '\250' 'J';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, x = x in (
                write_decl_context_info
              ) ob x
            );
        ) ob x
      | LabelDecl x ->
        Bi_outbuf.add_char4 ob '\245' '\145' 't' '^';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | NamespaceDecl x ->
        Bi_outbuf.add_char4 ob '\218' 'v' '\160' '\133';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_namespace_decl_info
              ) ob x
            );
        ) ob x
      | NamespaceAliasDecl x ->
        Bi_outbuf.add_char4 ob '\208' 'q' 'D' '\031';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_namespace_alias_decl_info
              ) ob x
            );
        ) ob x
      | ObjCCompatibleAliasDecl x ->
        Bi_outbuf.add_char4 ob '\221' '\190' ':' '\250';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_obj_c_compatible_alias_decl_info
              ) ob x
            );
        ) ob x
      | ObjCCategoryDecl x ->
        Bi_outbuf.add_char4 ob '\186' '7' '\129' '4';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_obj_c_category_decl_info
              ) ob x
            );
        ) ob x
      | ObjCCategoryImplDecl x ->
        Bi_outbuf.add_char4 ob '\141' '\237' 'I' '4';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_obj_c_category_impl_decl_info
              ) ob x
            );
        ) ob x
      | ObjCImplementationDecl x ->
        Bi_outbuf.add_char4 ob '\142' '(' '\027' 'h';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_obj_c_implementation_decl_info
              ) ob x
            );
        ) ob x
      | ObjCInterfaceDecl x ->
        Bi_outbuf.add_char4 ob '\152' '\210' 'R' '\151';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_obj_c_interface_decl_info
              ) ob x
            );
        ) ob x
      | ObjCProtocolDecl x ->
        Bi_outbuf.add_char4 ob '\225' '\176' 'a' '\142';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_obj_c_protocol_decl_info
              ) ob x
            );
        ) ob x
      | ObjCMethodDecl x ->
        Bi_outbuf.add_char4 ob '\188' '\205' '7' '\151';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_obj_c_method_decl_info
              ) ob x
            );
        ) ob x
      | ObjCPropertyDecl x ->
        Bi_outbuf.add_char4 ob '\197' '\178' '\150' '\011';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_obj_c_property_decl_info
              ) ob x
            );
        ) ob x
      | BuiltinTemplateDecl x ->
        Bi_outbuf.add_char4 ob '\244' '\026' '\184' '\231';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | ClassTemplateDecl x ->
        Bi_outbuf.add_char4 ob '\183' '\185' '\001' '\252';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_template_decl_info
              ) ob x
            );
        ) ob x
      | FunctionTemplateDecl x ->
        Bi_outbuf.add_char4 ob '\197' '\137' '\177' '\028';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_template_decl_info
              ) ob x
            );
        ) ob x
      | TypeAliasTemplateDecl x ->
        Bi_outbuf.add_char4 ob '\210' 't' '\011' ':';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | VarTemplateDecl x ->
        Bi_outbuf.add_char4 ob '\140' '\215' '{' '+';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | TemplateTemplateParmDecl x ->
        Bi_outbuf.add_char4 ob '\161' 'W' '\137' 'J';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | EnumDecl x ->
        Bi_outbuf.add_char4 ob '\128' '\127' '\184' '+';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 7;
            (
              let x, _, _, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _, _, _ = x in (
                write_type_ptr
              ) ob x
            );
            (
              let _, _, _, x, _, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, _, x, _, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, _, x, _ = x in (
                write_tag_kind
              ) ob x
            );
            (
              let _, _, _, _, _, _, x = x in (
                write_enum_decl_info
              ) ob x
            );
        ) ob x
      | RecordDecl x ->
        Bi_outbuf.add_char4 ob '\205' 'j' '\019' '\187';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 7;
            (
              let x, _, _, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _, _, _ = x in (
                write_type_ptr
              ) ob x
            );
            (
              let _, _, _, x, _, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, _, x, _, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, _, x, _ = x in (
                write_tag_kind
              ) ob x
            );
            (
              let _, _, _, _, _, _, x = x in (
                write_record_decl_info
              ) ob x
            );
        ) ob x
      | CXXRecordDecl x ->
        Bi_outbuf.add_char4 ob '\245' '\r' 'y' '~';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 8;
            (
              let x, _, _, _, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _, _, _, _ = x in (
                write_type_ptr
              ) ob x
            );
            (
              let _, _, _, x, _, _, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, _, x, _, _, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, _, x, _, _ = x in (
                write_tag_kind
              ) ob x
            );
            (
              let _, _, _, _, _, _, x, _ = x in (
                write_record_decl_info
              ) ob x
            );
            (
              let _, _, _, _, _, _, _, x = x in (
                write_cxx_record_decl_info
              ) ob x
            );
        ) ob x
      | ClassTemplateSpecializationDecl x ->
        Bi_outbuf.add_char4 ob '\224' '\185' 'g' '\'';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 10;
            (
              let x, _, _, _, _, _, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _, _, _, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _, _, _, _, _, _ = x in (
                write_type_ptr
              ) ob x
            );
            (
              let _, _, _, x, _, _, _, _, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, _, x, _, _, _, _, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, _, x, _, _, _, _ = x in (
                write_tag_kind
              ) ob x
            );
            (
              let _, _, _, _, _, _, x, _, _, _ = x in (
                write_record_decl_info
              ) ob x
            );
            (
              let _, _, _, _, _, _, _, x, _, _ = x in (
                write_cxx_record_decl_info
              ) ob x
            );
            (
              let _, _, _, _, _, _, _, _, x, _ = x in (
                Bi_io.write_string
              ) ob x
            );
            (
              let _, _, _, _, _, _, _, _, _, x = x in (
                write_template_specialization_info
              ) ob x
            );
        ) ob x
      | ClassTemplatePartialSpecializationDecl x ->
        Bi_outbuf.add_char4 ob '\163' '9' '\227' '$';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 10;
            (
              let x, _, _, _, _, _, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _, _, _, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _, _, _, _, _, _ = x in (
                write_type_ptr
              ) ob x
            );
            (
              let _, _, _, x, _, _, _, _, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, _, _, x, _, _, _, _, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, _, _, x, _, _, _, _ = x in (
                write_tag_kind
              ) ob x
            );
            (
              let _, _, _, _, _, _, x, _, _, _ = x in (
                write_record_decl_info
              ) ob x
            );
            (
              let _, _, _, _, _, _, _, x, _, _ = x in (
                write_cxx_record_decl_info
              ) ob x
            );
            (
              let _, _, _, _, _, _, _, _, x, _ = x in (
                Bi_io.write_string
              ) ob x
            );
            (
              let _, _, _, _, _, _, _, _, _, x = x in (
                write_template_specialization_info
              ) ob x
            );
        ) ob x
      | TemplateTypeParmDecl x ->
        Bi_outbuf.add_char4 ob '\233' 'P' '\206' '\202';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_type_ptr
              ) ob x
            );
        ) ob x
      | ObjCTypeParamDecl x ->
        Bi_outbuf.add_char4 ob '\215' '6' 'a' 'Q';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_type_ptr
              ) ob x
            );
        ) ob x
      | TypeAliasDecl x ->
        Bi_outbuf.add_char4 ob '\161' '\'' '\235' '\224';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_type_ptr
              ) ob x
            );
        ) ob x
      | TypedefDecl x ->
        Bi_outbuf.add_char4 ob '\143' '?' 'M' '5';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_type_ptr
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_typedef_decl_info
              ) ob x
            );
        ) ob x
      | UnresolvedUsingTypenameDecl x ->
        Bi_outbuf.add_char4 ob '\140' '\220' '-' '\194';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_type_ptr
              ) ob x
            );
        ) ob x
      | UsingDecl x ->
        Bi_outbuf.add_char4 ob '\192' '\229' '\195' '\174';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | UsingDirectiveDecl x ->
        Bi_outbuf.add_char4 ob '\199' '\189' '\188' '\149';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_using_directive_decl_info
              ) ob x
            );
        ) ob x
      | UsingPackDecl x ->
        Bi_outbuf.add_char4 ob '\140' '\028' '\153' '\'';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | UsingShadowDecl x ->
        Bi_outbuf.add_char4 ob '\169' '\\' '\242' '\174';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | ConstructorUsingShadowDecl x ->
        Bi_outbuf.add_char4 ob '\185' '\196' '\179' '\020';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_named_decl_info
              ) ob x
            );
        ) ob x
      | BindingDecl x ->
        Bi_outbuf.add_char4 ob '\152' 'g' '&' '/';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | FieldDecl x ->
        Bi_outbuf.add_char4 ob '\251' '\135' '\214' '$';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_field_decl_info
              ) ob x
            );
        ) ob x
      | ObjCAtDefsFieldDecl x ->
        Bi_outbuf.add_char4 ob '\171' '\137' '\193' '7';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_field_decl_info
              ) ob x
            );
        ) ob x
      | ObjCIvarDecl x ->
        Bi_outbuf.add_char4 ob '\135' '\014' '\230' 'T';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_field_decl_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_obj_c_ivar_decl_info
              ) ob x
            );
        ) ob x
      | FunctionDecl x ->
        Bi_outbuf.add_char4 ob '\241' 's' '\223' '\194';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_function_decl_info
              ) ob x
            );
        ) ob x
      | CXXDeductionGuideDecl x ->
        Bi_outbuf.add_char4 ob '\193' 'l' '\252' 'D';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_function_decl_info
              ) ob x
            );
        ) ob x
      | CXXMethodDecl x ->
        Bi_outbuf.add_char4 ob '\169' '\202' 'a' '\206';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_function_decl_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_cxx_method_decl_info
              ) ob x
            );
        ) ob x
      | CXXConstructorDecl x ->
        Bi_outbuf.add_char4 ob '\204' 'I' '\141' '\193';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_function_decl_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_cxx_method_decl_info
              ) ob x
            );
        ) ob x
      | CXXConversionDecl x ->
        Bi_outbuf.add_char4 ob '\191' '@' '*' '\003';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_function_decl_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_cxx_method_decl_info
              ) ob x
            );
        ) ob x
      | CXXDestructorDecl x ->
        Bi_outbuf.add_char4 ob '\207' '\228' '\127' '\166';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_function_decl_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_cxx_method_decl_info
              ) ob x
            );
        ) ob x
      | MSPropertyDecl x ->
        Bi_outbuf.add_char4 ob '\147' '\232' '#' '\229';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | NonTypeTemplateParmDecl x ->
        Bi_outbuf.add_char4 ob '\212' 'N' 'y' '7';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | VarDecl x ->
        Bi_outbuf.add_char4 ob '\145' '\193' '\130' '\209';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_var_decl_info
              ) ob x
            );
        ) ob x
      | DecompositionDecl x ->
        Bi_outbuf.add_char4 ob '\128' '\241' '\132' '\243';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_var_decl_info
              ) ob x
            );
        ) ob x
      | ImplicitParamDecl x ->
        Bi_outbuf.add_char4 ob '\208' '\216' 'I' '\146';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_var_decl_info
              ) ob x
            );
        ) ob x
      | OMPCapturedExprDecl x ->
        Bi_outbuf.add_char4 ob '\148' '\014' '\253' '\015';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_var_decl_info
              ) ob x
            );
        ) ob x
      | ParmVarDecl x ->
        Bi_outbuf.add_char4 ob '\253' 'u' '\204' 'E';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_var_decl_info
              ) ob x
            );
        ) ob x
      | VarTemplateSpecializationDecl x ->
        Bi_outbuf.add_char4 ob '\247' '\011' '\244' '\150';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_var_decl_info
              ) ob x
            );
        ) ob x
      | VarTemplatePartialSpecializationDecl x ->
        Bi_outbuf.add_char4 ob '\240' '\226' 'q' '\149';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_var_decl_info
              ) ob x
            );
        ) ob x
      | EnumConstantDecl x ->
        Bi_outbuf.add_char4 ob '\247' '\188' 'P' '\175';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_enum_constant_decl_info
              ) ob x
            );
        ) ob x
      | IndirectFieldDecl x ->
        Bi_outbuf.add_char4 ob '\237' '!' '\235' 'v';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write__8
              ) ob x
            );
        ) ob x
      | OMPDeclareReductionDecl x ->
        Bi_outbuf.add_char4 ob '\191' 'l' ')' 'E';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | UnresolvedUsingValueDecl x ->
        Bi_outbuf.add_char4 ob '\191' '\012' 'i' '\232';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write_named_decl_info
              ) ob x
            );
            (
              let _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | OMPThreadPrivateDecl x ->
        Bi_outbuf.add_char4 ob '\196' '\159' '\014' '\145';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | ObjCPropertyImplDecl x ->
        Bi_outbuf.add_char4 ob '\193' '\169' '\021' '\139';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x = x in (
                write_obj_c_property_impl_decl_info
              ) ob x
            );
        ) ob x
      | PragmaCommentDecl x ->
        Bi_outbuf.add_char4 ob '\163' '\238' '\166' '\237';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | PragmaDetectMismatchDecl x ->
        Bi_outbuf.add_char4 ob '\192' 'K' '\206' '\215';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | StaticAssertDecl x ->
        Bi_outbuf.add_char4 ob '\254' 't' '@' '\190';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 1;
            (
              let x = x in (
                write_decl_info
              ) ob x
            );
        ) ob x
      | TranslationUnitDecl x ->
        Bi_outbuf.add_char4 ob '\131' ' ' '\022' '\255';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_decl_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__16
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_decl_context_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_translation_unit_decl_info
              ) ob x
            );
        ) ob x
)
and write_decl ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_decl ob x
and string_of_decl ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_decl ob x;
  Bi_outbuf.contents ob
and enum_constant_decl_info_tag = Bi_io.record_tag
and write_untagged_enum_constant_decl_info : Bi_outbuf.t -> enum_constant_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ecdi_init_expr = x.ecdi_init_expr in
    if x_ecdi_init_expr != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_ecdi_init_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\254' '\147' '\196' '\004';
      (
        write_stmt
      ) ob x;
    );
)
and write_enum_constant_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_enum_constant_decl_info ob x
and string_of_enum_constant_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_enum_constant_decl_info ob x;
  Bi_outbuf.contents ob
and field_decl_info_tag = Bi_io.record_tag
and write_untagged_field_decl_info : Bi_outbuf.t -> field_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_fldi_is_mutable = x.fldi_is_mutable in
    if x_fldi_is_mutable != false then incr len;
    let x_fldi_is_module_private = x.fldi_is_module_private in
    if x_fldi_is_module_private != false then incr len;
    let x_fldi_init_expr = x.fldi_init_expr in
    if x_fldi_init_expr != None then incr len;
    let x_fldi_bit_width_expr = x.fldi_bit_width_expr in
    if x_fldi_bit_width_expr != None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_fldi_is_mutable != false then (
      Bi_outbuf.add_char4 ob '\225' '\254' '/' '\017';
      (
        Bi_io.write_bool
      ) ob x_fldi_is_mutable;
    );
    if x_fldi_is_module_private != false then (
      Bi_outbuf.add_char4 ob '\204' '\133' '+' '%';
      (
        Bi_io.write_bool
      ) ob x_fldi_is_module_private;
    );
    (match x_fldi_init_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\254' '\147' '\196' '\004';
      (
        write_stmt
      ) ob x;
    );
    (match x_fldi_bit_width_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\225' '\241' '\170' '\192';
      (
        write_stmt
      ) ob x;
    );
)
and write_field_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_field_decl_info ob x
and string_of_field_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_field_decl_info ob x;
  Bi_outbuf.contents ob
and friend_info_tag = Bi_io.variant_tag
and write_untagged_friend_info = (
  fun ob x ->
    match x with
      | `Type x ->
        Bi_outbuf.add_char4 ob '\183' '\226' '\030' '\218';
        (
          write_type_ptr
        ) ob x
      | `Decl x ->
        Bi_outbuf.add_char4 ob '\173' '?' '|' '\138';
        (
          write_decl
        ) ob x
)
and write_friend_info ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_friend_info ob x
and string_of_friend_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_friend_info ob x;
  Bi_outbuf.contents ob
and function_decl_info_tag = Bi_io.record_tag
and write_untagged_function_decl_info : Bi_outbuf.t -> function_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_fdi_mangled_name = x.fdi_mangled_name in
    if x_fdi_mangled_name != None then incr len;
    let x_fdi_storage_class = x.fdi_storage_class in
    if x_fdi_storage_class != None then incr len;
    let x_fdi_is_inline = x.fdi_is_inline in
    if x_fdi_is_inline != false then incr len;
    let x_fdi_is_module_private = x.fdi_is_module_private in
    if x_fdi_is_module_private != false then incr len;
    let x_fdi_is_pure = x.fdi_is_pure in
    if x_fdi_is_pure != false then incr len;
    let x_fdi_is_delete_as_written = x.fdi_is_delete_as_written in
    if x_fdi_is_delete_as_written != false then incr len;
    let x_fdi_is_no_throw = x.fdi_is_no_throw in
    if x_fdi_is_no_throw != false then incr len;
    let x_fdi_parameters = x.fdi_parameters in
    if x_fdi_parameters != [] then incr len;
    let x_fdi_decl_ptr_with_body = x.fdi_decl_ptr_with_body in
    if x_fdi_decl_ptr_with_body != None then incr len;
    let x_fdi_body = x.fdi_body in
    if x_fdi_body != None then incr len;
    let x_fdi_template_specialization = x.fdi_template_specialization in
    if x_fdi_template_specialization != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_fdi_mangled_name with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\210' '\233' '\180' '\012';
      (
        Bi_io.write_string
      ) ob x;
    );
    (match x_fdi_storage_class with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\190' '\204' '<' '\244';
      (
        Bi_io.write_string
      ) ob x;
    );
    if x_fdi_is_inline != false then (
      Bi_outbuf.add_char4 ob '\190' 'd' '1' 'N';
      (
        Bi_io.write_bool
      ) ob x_fdi_is_inline;
    );
    if x_fdi_is_module_private != false then (
      Bi_outbuf.add_char4 ob '\204' '\133' '+' '%';
      (
        Bi_io.write_bool
      ) ob x_fdi_is_module_private;
    );
    if x_fdi_is_pure != false then (
      Bi_outbuf.add_char4 ob '\134' '\202' '`' '\173';
      (
        Bi_io.write_bool
      ) ob x_fdi_is_pure;
    );
    if x_fdi_is_delete_as_written != false then (
      Bi_outbuf.add_char4 ob '\222' '\241' '\007' 'I';
      (
        Bi_io.write_bool
      ) ob x_fdi_is_delete_as_written;
    );
    if x_fdi_is_no_throw != false then (
      Bi_outbuf.add_char4 ob '\171' '6' '\249' '\157';
      (
        Bi_io.write_bool
      ) ob x_fdi_is_no_throw;
    );
    if x_fdi_parameters != [] then (
      Bi_outbuf.add_char4 ob '\209' '~' '\190' '\170';
      (
        write__16
      ) ob x_fdi_parameters;
    );
    (match x_fdi_decl_ptr_with_body with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\235' '\227' '\196' '\021';
      (
        write_pointer
      ) ob x;
    );
    (match x_fdi_body with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\193' '\027' 'z' '\162';
      (
        write_stmt
      ) ob x;
    );
    (match x_fdi_template_specialization with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\243' '\194' '\173' '\176';
      (
        write_template_specialization_info
      ) ob x;
    );
)
and write_function_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_function_decl_info ob x
and string_of_function_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_function_decl_info ob x;
  Bi_outbuf.contents ob
and lambda_capture_info_tag = Bi_io.record_tag
and write_untagged_lambda_capture_info : Bi_outbuf.t -> lambda_capture_info -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_lci_capture_this = x.lci_capture_this in
    if x_lci_capture_this != false then incr len;
    let x_lci_capture_variable = x.lci_capture_variable in
    if x_lci_capture_variable != false then incr len;
    let x_lci_capture_VLAtype = x.lci_capture_VLAtype in
    if x_lci_capture_VLAtype != false then incr len;
    let x_lci_init_captured_vardecl = x.lci_init_captured_vardecl in
    if x_lci_init_captured_vardecl != None then incr len;
    let x_lci_captured_var = x.lci_captured_var in
    if x_lci_captured_var != None then incr len;
    let x_lci_is_implicit = x.lci_is_implicit in
    if x_lci_is_implicit != false then incr len;
    let x_lci_is_pack_expansion = x.lci_is_pack_expansion in
    if x_lci_is_pack_expansion != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\252' '\t' '\134' '\237';
    (
      write_lambda_capture_kind
    ) ob x.lci_capture_kind;
    if x_lci_capture_this != false then (
      Bi_outbuf.add_char4 ob '\129' '\251' '\171' '\247';
      (
        Bi_io.write_bool
      ) ob x_lci_capture_this;
    );
    if x_lci_capture_variable != false then (
      Bi_outbuf.add_char4 ob '\191' '\145' '\248' 'U';
      (
        Bi_io.write_bool
      ) ob x_lci_capture_variable;
    );
    if x_lci_capture_VLAtype != false then (
      Bi_outbuf.add_char4 ob '\191' '!' '\024' '\140';
      (
        Bi_io.write_bool
      ) ob x_lci_capture_VLAtype;
    );
    (match x_lci_init_captured_vardecl with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\231' '7' '\188' '\191';
      (
        write_decl
      ) ob x;
    );
    (match x_lci_captured_var with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\213' '%' '\176' '\006';
      (
        write_decl_ref
      ) ob x;
    );
    if x_lci_is_implicit != false then (
      Bi_outbuf.add_char4 ob '\235' '\138' '\031' 'Z';
      (
        Bi_io.write_bool
      ) ob x_lci_is_implicit;
    );
    Bi_outbuf.add_char4 ob '\229' 'F' 'n' '5';
    (
      write_source_range
    ) ob x.lci_location;
    if x_lci_is_pack_expansion != false then (
      Bi_outbuf.add_char4 ob '\222' '\181' '\230' '\206';
      (
        Bi_io.write_bool
      ) ob x_lci_is_pack_expansion;
    );
)
and write_lambda_capture_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_lambda_capture_info ob x
and string_of_lambda_capture_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_lambda_capture_info ob x;
  Bi_outbuf.contents ob
and lambda_expr_info_tag = Bi_io.record_tag
and write_untagged_lambda_expr_info : Bi_outbuf.t -> lambda_expr_info -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 1;
    Bi_outbuf.add_char4 ob '\236' '\157' '\223' '\226';
    (
      write_decl
    ) ob x.lei_lambda_decl;
)
and write_lambda_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_lambda_expr_info ob x
and string_of_lambda_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_lambda_expr_info ob x;
  Bi_outbuf.contents ob
and obj_c_implementation_decl_info_tag = Bi_io.record_tag
and write_untagged_obj_c_implementation_decl_info : Bi_outbuf.t -> obj_c_implementation_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_oidi_super = x.oidi_super in
    if x_oidi_super != None then incr len;
    let x_oidi_class_interface = x.oidi_class_interface in
    if x_oidi_class_interface != None then incr len;
    let x_oidi_ivar_initializers = x.oidi_ivar_initializers in
    if x_oidi_ivar_initializers != [] then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_oidi_super with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\132' '\192' '\001' '{';
      (
        write_decl_ref
      ) ob x;
    );
    (match x_oidi_class_interface with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\174' '\194' '\155' '\178';
      (
        write_decl_ref
      ) ob x;
    );
    if x_oidi_ivar_initializers != [] then (
      Bi_outbuf.add_char4 ob '\132' '\015' '\219' '\018';
      (
        write__23
      ) ob x_oidi_ivar_initializers;
    );
)
and write_obj_c_implementation_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_implementation_decl_info ob x
and string_of_obj_c_implementation_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_implementation_decl_info ob x;
  Bi_outbuf.contents ob
and obj_c_message_expr_kind_tag = Bi_io.variant_tag
and write_untagged_obj_c_message_expr_kind = (
  fun ob x ->
    match x with
      | `CatchParam x ->
        Bi_outbuf.add_char4 ob '\166' '?' 'B' 'r';
        (
          write_decl
        ) ob x
      | `CatchAll -> Bi_outbuf.add_char4 ob '`' '\215' '\007' '\198'
)
and write_obj_c_message_expr_kind ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_obj_c_message_expr_kind ob x
and string_of_obj_c_message_expr_kind ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_message_expr_kind ob x;
  Bi_outbuf.contents ob
and obj_c_method_decl_info_tag = Bi_io.record_tag
and write_untagged_obj_c_method_decl_info : Bi_outbuf.t -> obj_c_method_decl_info -> unit = (
  fun ob x ->
    let len = ref 1 in
    let x_omdi_is_instance_method = x.omdi_is_instance_method in
    if x_omdi_is_instance_method != false then incr len;
    let x_omdi_is_property_accessor = x.omdi_is_property_accessor in
    if x_omdi_is_property_accessor != false then incr len;
    let x_omdi_property_decl = x.omdi_property_decl in
    if x_omdi_property_decl != None then incr len;
    let x_omdi_parameters = x.omdi_parameters in
    if x_omdi_parameters != [] then incr len;
    let x_omdi_implicit_parameters = x.omdi_implicit_parameters in
    if x_omdi_implicit_parameters != [] then incr len;
    let x_omdi_is_variadic = x.omdi_is_variadic in
    if x_omdi_is_variadic != false then incr len;
    let x_omdi_body = x.omdi_body in
    if x_omdi_body != None then incr len;
    Bi_vint.write_uvint ob !len;
    if x_omdi_is_instance_method != false then (
      Bi_outbuf.add_char4 ob '\187' '\162' '\199' '\246';
      (
        Bi_io.write_bool
      ) ob x_omdi_is_instance_method;
    );
    Bi_outbuf.add_char4 ob '\147' '{' 'd' '\156';
    (
      write_qual_type
    ) ob x.omdi_result_type;
    if x_omdi_is_property_accessor != false then (
      Bi_outbuf.add_char4 ob '\128' '\030' 'g' '\\';
      (
        Bi_io.write_bool
      ) ob x_omdi_is_property_accessor;
    );
    (match x_omdi_property_decl with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\172' '\143' '\207' '\212';
      (
        write_decl_ref
      ) ob x;
    );
    if x_omdi_parameters != [] then (
      Bi_outbuf.add_char4 ob '\209' '~' '\190' '\170';
      (
        write__16
      ) ob x_omdi_parameters;
    );
    if x_omdi_implicit_parameters != [] then (
      Bi_outbuf.add_char4 ob '\168' '\220' '\178' '\196';
      (
        write__16
      ) ob x_omdi_implicit_parameters;
    );
    if x_omdi_is_variadic != false then (
      Bi_outbuf.add_char4 ob '\237' 'R' 'b' 'T';
      (
        Bi_io.write_bool
      ) ob x_omdi_is_variadic;
    );
    (match x_omdi_body with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\193' '\027' 'z' '\162';
      (
        write_stmt
      ) ob x;
    );
)
and write_obj_c_method_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_obj_c_method_decl_info ob x
and string_of_obj_c_method_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_obj_c_method_decl_info ob x;
  Bi_outbuf.contents ob
and opaque_value_expr_info_tag = Bi_io.record_tag
and write_untagged_opaque_value_expr_info : Bi_outbuf.t -> opaque_value_expr_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_ovei_source_expr = x.ovei_source_expr in
    if x_ovei_source_expr != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_ovei_source_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\146' '\007' 'n' 'Y';
      (
        write_stmt
      ) ob x;
    );
)
and write_opaque_value_expr_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_opaque_value_expr_info ob x
and string_of_opaque_value_expr_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_opaque_value_expr_info ob x;
  Bi_outbuf.contents ob
and stmt_tag = Bi_io.variant_tag
and write_untagged_stmt : Bi_outbuf.t -> stmt -> unit = (
  fun ob x ->
    match x with
      | GCCAsmStmt x ->
        Bi_outbuf.add_char4 ob '\133' '\233' '\147' '<';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | MSAsmStmt x ->
        Bi_outbuf.add_char4 ob '\129' '\215' '\144' ']';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | AttributedStmt x ->
        Bi_outbuf.add_char4 ob '\255' '\020' '[' 'P';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write__12
              ) ob x
            );
        ) ob x
      | BreakStmt x ->
        Bi_outbuf.add_char4 ob '\222' '^' '\234' '\135';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | CXXCatchStmt x ->
        Bi_outbuf.add_char4 ob '\130' 'c' 's' '\160';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_cxx_catch_stmt_info
              ) ob x
            );
        ) ob x
      | CXXForRangeStmt x ->
        Bi_outbuf.add_char4 ob '\136' '\166' ':' '\255';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | CXXTryStmt x ->
        Bi_outbuf.add_char4 ob '\156' '<' '\023' '`';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | CapturedStmt x ->
        Bi_outbuf.add_char4 ob '\149' 'G' '\242' '\166';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | CompoundStmt x ->
        Bi_outbuf.add_char4 ob '\211' '\148' '\187' 's';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ContinueStmt x ->
        Bi_outbuf.add_char4 ob '\197' 'F' '\006' 'o';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | CoreturnStmt x ->
        Bi_outbuf.add_char4 ob '\254' '\021' '\b' '\228';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | CoroutineBodyStmt x ->
        Bi_outbuf.add_char4 ob '\234' 'F' 'S' '\226';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | DeclStmt x ->
        Bi_outbuf.add_char4 ob '\149' '.' '\163' '\242';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write__16
              ) ob x
            );
        ) ob x
      | DoStmt x ->
        Bi_outbuf.add_char4 ob '\208' '\244' '\007' '\147';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | BinaryConditionalOperator x ->
        Bi_outbuf.add_char4 ob '\155' '\005' ')' 'i';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ConditionalOperator x ->
        Bi_outbuf.add_char4 ob '\166' '\206' ' ' '\234';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | AddrLabelExpr x ->
        Bi_outbuf.add_char4 ob '\210' '\251' '\023' '\184';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_addr_label_expr_info
              ) ob x
            );
        ) ob x
      | ArrayInitIndexExpr x ->
        Bi_outbuf.add_char4 ob '\232' '\197' '2' '\254';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ArrayInitLoopExpr x ->
        Bi_outbuf.add_char4 ob '\169' 'd' 'T' '\002';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ArraySubscriptExpr x ->
        Bi_outbuf.add_char4 ob '\225' '\179' '\029' '\'';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ArrayTypeTraitExpr x ->
        Bi_outbuf.add_char4 ob '\193' '8' '<' '\208';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | AsTypeExpr x ->
        Bi_outbuf.add_char4 ob '\158' '\245' 'X' 'A';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | AtomicExpr x ->
        Bi_outbuf.add_char4 ob '\147' '\234' '\137' '\224';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | BinaryOperator x ->
        Bi_outbuf.add_char4 ob '\212' '\147' '\144' '\229';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_binary_operator_info
              ) ob x
            );
        ) ob x
      | CompoundAssignOperator x ->
        Bi_outbuf.add_char4 ob '\155' '\170' 'u' '\222';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_binary_operator_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_compound_assign_operator_info
              ) ob x
            );
        ) ob x
      | BlockExpr x ->
        Bi_outbuf.add_char4 ob '\234' '\127' '\169' '\002';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_decl
              ) ob x
            );
        ) ob x
      | CXXBindTemporaryExpr x ->
        Bi_outbuf.add_char4 ob '\210' '\127' '\191' '\230';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_bind_temporary_expr_info
              ) ob x
            );
        ) ob x
      | CXXBoolLiteralExpr x ->
        Bi_outbuf.add_char4 ob '\139' '\r' '%' 'w';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                Bi_io.write_svint
              ) ob x
            );
        ) ob x
      | CXXConstructExpr x ->
        Bi_outbuf.add_char4 ob '\229' '\006' '~' '\233';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_construct_expr_info
              ) ob x
            );
        ) ob x
      | CXXTemporaryObjectExpr x ->
        Bi_outbuf.add_char4 ob '\155' ';' '\130' 'B';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_construct_expr_info
              ) ob x
            );
        ) ob x
      | CXXDefaultArgExpr x ->
        Bi_outbuf.add_char4 ob '\161' '\000' '\251' 'M';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_default_expr_info
              ) ob x
            );
        ) ob x
      | CXXDefaultInitExpr x ->
        Bi_outbuf.add_char4 ob '\157' '\244' '\201' '\131';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_default_expr_info
              ) ob x
            );
        ) ob x
      | CXXDeleteExpr x ->
        Bi_outbuf.add_char4 ob '\180' '\191' 'D' '\227';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_delete_expr_info
              ) ob x
            );
        ) ob x
      | CXXDependentScopeMemberExpr x ->
        Bi_outbuf.add_char4 ob '\233' '\162' 'M' 'G';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXFoldExpr x ->
        Bi_outbuf.add_char4 ob '\242' '\249' '4' '\249';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXInheritedCtorInitExpr x ->
        Bi_outbuf.add_char4 ob '\182' 'I' 'I' '\208';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXNewExpr x ->
        Bi_outbuf.add_char4 ob '\192' '\012' '\131' '\242';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_new_expr_info
              ) ob x
            );
        ) ob x
      | CXXNoexceptExpr x ->
        Bi_outbuf.add_char4 ob '\209' '\205' '\225' '\018';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cxx_noexcept_expr_info
              ) ob x
            );
        ) ob x
      | CXXNullPtrLiteralExpr x ->
        Bi_outbuf.add_char4 ob '\239' '7' '\236' '\192';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXPseudoDestructorExpr x ->
        Bi_outbuf.add_char4 ob '\189' '\248' '\152' '\207';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXScalarValueInitExpr x ->
        Bi_outbuf.add_char4 ob '\163' '\244' '\223' '\231';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXStdInitializerListExpr x ->
        Bi_outbuf.add_char4 ob '\144' 'b' 'C' 'u';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXThisExpr x ->
        Bi_outbuf.add_char4 ob '\224' '\149' '\209' '\214';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXThrowExpr x ->
        Bi_outbuf.add_char4 ob '\167' '\174' '\180' '\248';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXTypeidExpr x ->
        Bi_outbuf.add_char4 ob '\159' '\185' '2' '\205';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXUnresolvedConstructExpr x ->
        Bi_outbuf.add_char4 ob '\234' '\136' '+' '\024';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXUuidofExpr x ->
        Bi_outbuf.add_char4 ob '\231' '8' '\196' 'J';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CallExpr x ->
        Bi_outbuf.add_char4 ob '\197' '\158' '\165' '\019';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CUDAKernelCallExpr x ->
        Bi_outbuf.add_char4 ob '\221' ',' '\206' '\223';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXMemberCallExpr x ->
        Bi_outbuf.add_char4 ob '\238' '\024' '\b' '\208';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CXXOperatorCallExpr x ->
        Bi_outbuf.add_char4 ob '\144' ']' 'z' '\218';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | UserDefinedLiteral x ->
        Bi_outbuf.add_char4 ob '\183' '\157' '\172' 'q';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CStyleCastExpr x ->
        Bi_outbuf.add_char4 ob '\202' '\159' '\175' '\162';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_cast_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | CXXFunctionalCastExpr x ->
        Bi_outbuf.add_char4 ob '\191' '(' '\133' '\154';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_cast_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | CXXConstCastExpr x ->
        Bi_outbuf.add_char4 ob '\138' '\204' '\n' '\020';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 6;
            (
              let x, _, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _, _ = x in (
                write_cast_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, _, _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | CXXDynamicCastExpr x ->
        Bi_outbuf.add_char4 ob '\195' 't' 'e' 'p';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 6;
            (
              let x, _, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _, _ = x in (
                write_cast_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, _, _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | CXXReinterpretCastExpr x ->
        Bi_outbuf.add_char4 ob '\249' 'S' 'e' 'k';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 6;
            (
              let x, _, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _, _ = x in (
                write_cast_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, _, _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | CXXStaticCastExpr x ->
        Bi_outbuf.add_char4 ob '\155' '\210' '\161' '\197';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 6;
            (
              let x, _, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _, _ = x in (
                write_cast_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x, _ = x in (
                write_qual_type
              ) ob x
            );
            (
              let _, _, _, _, _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | ObjCBridgedCastExpr x ->
        Bi_outbuf.add_char4 ob '\163' '!' 'K' 'C';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_cast_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_qual_type
              ) ob x
            );
        ) ob x
      | ImplicitCastExpr x ->
        Bi_outbuf.add_char4 ob '\195' '\177' ')' '\249';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_cast_expr_info
              ) ob x
            );
        ) ob x
      | CharacterLiteral x ->
        Bi_outbuf.add_char4 ob '\239' '\164' '\136' '\230';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                Bi_io.write_svint
              ) ob x
            );
        ) ob x
      | ChooseExpr x ->
        Bi_outbuf.add_char4 ob '\170' '\184' '?' '\204';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CompoundLiteralExpr x ->
        Bi_outbuf.add_char4 ob '\221' '\185' '\180' 'y';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ConvertVectorExpr x ->
        Bi_outbuf.add_char4 ob '\144' 'n' '\199' 'K';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CoawaitExpr x ->
        Bi_outbuf.add_char4 ob '\211' '\249' '7' '_';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | CoyieldExpr x ->
        Bi_outbuf.add_char4 ob '\156' '\215' 'y' '\214';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | DeclRefExpr x ->
        Bi_outbuf.add_char4 ob '\233' '\219' 'X' '\190';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_decl_ref_expr_info
              ) ob x
            );
        ) ob x
      | DependentCoawaitExpr x ->
        Bi_outbuf.add_char4 ob '\149' '\153' '\219' '\224';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | DependentScopeDeclRefExpr x ->
        Bi_outbuf.add_char4 ob '\239' 'B' '+' '\169';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | DesignatedInitExpr x ->
        Bi_outbuf.add_char4 ob '\162' '\141' '\031' '\245';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | DesignatedInitUpdateExpr x ->
        Bi_outbuf.add_char4 ob '\162' '`' '\154' '\158';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ExprWithCleanups x ->
        Bi_outbuf.add_char4 ob '\208' '\205' '\220' '\234';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_expr_with_cleanups_info
              ) ob x
            );
        ) ob x
      | ExpressionTraitExpr x ->
        Bi_outbuf.add_char4 ob '\231' 'F' '\015' 'K';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ExtVectorElementExpr x ->
        Bi_outbuf.add_char4 ob '\132' '\195' '(' 'M';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | FloatingLiteral x ->
        Bi_outbuf.add_char4 ob '\209' '\179' 'm' ')';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | FunctionParmPackExpr x ->
        Bi_outbuf.add_char4 ob '\235' ';' '\244' '\018';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | GNUNullExpr x ->
        Bi_outbuf.add_char4 ob '\216' '\254' '\245' '\202';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | GenericSelectionExpr x ->
        Bi_outbuf.add_char4 ob '\200' '5' '\191' '*';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ImaginaryLiteral x ->
        Bi_outbuf.add_char4 ob '\157' '\016' '\208' '\246';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ImplicitValueInitExpr x ->
        Bi_outbuf.add_char4 ob '\188' '\209' '\\' 'q';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | InitListExpr x ->
        Bi_outbuf.add_char4 ob '\143' '\219' '\160' '\003';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | IntegerLiteral x ->
        Bi_outbuf.add_char4 ob '\143' '\184' '\251' 'q';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_integer_literal_info
              ) ob x
            );
        ) ob x
      | LambdaExpr x ->
        Bi_outbuf.add_char4 ob '\204' '\203' '\239' '\252';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_lambda_expr_info
              ) ob x
            );
        ) ob x
      | MSPropertyRefExpr x ->
        Bi_outbuf.add_char4 ob '\237' '\225' '\243' '\141';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | MSPropertySubscriptExpr x ->
        Bi_outbuf.add_char4 ob '\174' '\012' '\199' '\133';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | MaterializeTemporaryExpr x ->
        Bi_outbuf.add_char4 ob '\194' '{' '\154' '9';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_materialize_temporary_expr_info
              ) ob x
            );
        ) ob x
      | MemberExpr x ->
        Bi_outbuf.add_char4 ob '\137' '\007' 'D' '\207';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_member_expr_info
              ) ob x
            );
        ) ob x
      | NoInitExpr x ->
        Bi_outbuf.add_char4 ob '\174' '\227' '\245' '\230';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | OMPArraySectionExpr x ->
        Bi_outbuf.add_char4 ob '\184' '\213' '\234' '3';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ObjCArrayLiteral x ->
        Bi_outbuf.add_char4 ob '\234' '\226' '\187' '\130';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ObjCAvailabilityCheckExpr x ->
        Bi_outbuf.add_char4 ob '\240' '\243' '}' '\150';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_obj_c_availability_check_expr_info
              ) ob x
            );
        ) ob x
      | ObjCBoolLiteralExpr x ->
        Bi_outbuf.add_char4 ob '\178' 'a' '\183' '\014';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                Bi_io.write_svint
              ) ob x
            );
        ) ob x
      | ObjCBoxedExpr x ->
        Bi_outbuf.add_char4 ob '\178' '\133' 'O' 'S';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_objc_boxed_expr_info
              ) ob x
            );
        ) ob x
      | ObjCDictionaryLiteral x ->
        Bi_outbuf.add_char4 ob '\240' '\221' '\202' 'M';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ObjCEncodeExpr x ->
        Bi_outbuf.add_char4 ob '\169' '\228' '\030' '\023';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_objc_encode_expr_info
              ) ob x
            );
        ) ob x
      | ObjCIndirectCopyRestoreExpr x ->
        Bi_outbuf.add_char4 ob '\246' '\224' '\241' '\148';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ObjCIsaExpr x ->
        Bi_outbuf.add_char4 ob '\143' '\205' '\030' '\224';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ObjCIvarRefExpr x ->
        Bi_outbuf.add_char4 ob '\251' '?' ' ' '~';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_obj_c_ivar_ref_expr_info
              ) ob x
            );
        ) ob x
      | ObjCMessageExpr x ->
        Bi_outbuf.add_char4 ob '\241' '\004' '\197' 'p';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_obj_c_message_expr_info
              ) ob x
            );
        ) ob x
      | ObjCPropertyRefExpr x ->
        Bi_outbuf.add_char4 ob '\233' '\200' '\221' '\'';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_obj_c_property_ref_expr_info
              ) ob x
            );
        ) ob x
      | ObjCProtocolExpr x ->
        Bi_outbuf.add_char4 ob '\226' 'h' '\014' 'Y';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_decl_ref
              ) ob x
            );
        ) ob x
      | ObjCSelectorExpr x ->
        Bi_outbuf.add_char4 ob '\136' 'M' 'Z' '\160';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_selector
              ) ob x
            );
        ) ob x
      | ObjCStringLiteral x ->
        Bi_outbuf.add_char4 ob '\255' 'k' '\168' 'r';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ObjCSubscriptRefExpr x ->
        Bi_outbuf.add_char4 ob '\242' '\138' '\216' '\137';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_obj_c_subscript_ref_expr_info
              ) ob x
            );
        ) ob x
      | OffsetOfExpr x ->
        Bi_outbuf.add_char4 ob '\234' 'x' ')' '\255';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | OpaqueValueExpr x ->
        Bi_outbuf.add_char4 ob '\141' 'g' '\156' '\005';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_opaque_value_expr_info
              ) ob x
            );
        ) ob x
      | UnresolvedLookupExpr x ->
        Bi_outbuf.add_char4 ob '\214' 's' '\019' '\160';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 5;
            (
              let x, _, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x, _ = x in (
                write_overload_expr_info
              ) ob x
            );
            (
              let _, _, _, _, x = x in (
                write_unresolved_lookup_expr_info
              ) ob x
            );
        ) ob x
      | UnresolvedMemberExpr x ->
        Bi_outbuf.add_char4 ob '\177' '\192' '\195' '\128';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_overload_expr_info
              ) ob x
            );
        ) ob x
      | PackExpansionExpr x ->
        Bi_outbuf.add_char4 ob '\134' '\175' '\129' '\027';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ParenExpr x ->
        Bi_outbuf.add_char4 ob '\130' '3' 'Z' '?';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ParenListExpr x ->
        Bi_outbuf.add_char4 ob '\150' '\156' 'v' '\189';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | PredefinedExpr x ->
        Bi_outbuf.add_char4 ob '\142' '\217' '\170' '{';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_predefined_expr_type
              ) ob x
            );
        ) ob x
      | PseudoObjectExpr x ->
        Bi_outbuf.add_char4 ob '\166' '\175' '\168' '\210';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ShuffleVectorExpr x ->
        Bi_outbuf.add_char4 ob '\227' '\162' '\146' '\209';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | SizeOfPackExpr x ->
        Bi_outbuf.add_char4 ob '\202' '\220' '\129' '&';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | StmtExpr x ->
        Bi_outbuf.add_char4 ob '\240' 'm' '\151' '\189';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | StringLiteral x ->
        Bi_outbuf.add_char4 ob '\178' '1' '$' '~';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write__3
              ) ob x
            );
        ) ob x
      | SubstNonTypeTemplateParmExpr x ->
        Bi_outbuf.add_char4 ob '\239' '\251' '\232' '!';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | SubstNonTypeTemplateParmPackExpr x ->
        Bi_outbuf.add_char4 ob '\172' '\139' '\177' '\154';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | TypeTraitExpr x ->
        Bi_outbuf.add_char4 ob '\154' '\142' '\209' '\233';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_type_trait_info
              ) ob x
            );
        ) ob x
      | TypoExpr x ->
        Bi_outbuf.add_char4 ob '\203' '\156' '\138' '9';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | UnaryExprOrTypeTraitExpr x ->
        Bi_outbuf.add_char4 ob '\234' 'y' ',' '\226';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_unary_expr_or_type_trait_expr_info
              ) ob x
            );
        ) ob x
      | UnaryOperator x ->
        Bi_outbuf.add_char4 ob '\176' '\218' 'D' 'S';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 4;
            (
              let x, _, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x, _ = x in (
                write_expr_info
              ) ob x
            );
            (
              let _, _, _, x = x in (
                write_unary_operator_info
              ) ob x
            );
        ) ob x
      | VAArgExpr x ->
        Bi_outbuf.add_char4 ob '\130' '\199' 'r' '\192';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_expr_info
              ) ob x
            );
        ) ob x
      | ForStmt x ->
        Bi_outbuf.add_char4 ob '\155' '^' '\193' '\209';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | GotoStmt x ->
        Bi_outbuf.add_char4 ob '\230' '\225' '}' '\171';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_goto_stmt_info
              ) ob x
            );
        ) ob x
      | IfStmt x ->
        Bi_outbuf.add_char4 ob '\162' '!' '\156' '\229';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | IndirectGotoStmt x ->
        Bi_outbuf.add_char4 ob '\240' '\146' '\248' '\153';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | LabelStmt x ->
        Bi_outbuf.add_char4 ob '\255' '\135' '\018' '<';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                Bi_io.write_string
              ) ob x
            );
        ) ob x
      | MSDependentExistsStmt x ->
        Bi_outbuf.add_char4 ob '\255' 'P' '\181' ']';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | NullStmt x ->
        Bi_outbuf.add_char4 ob '\131' '\180' '\196' '\143';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPAtomicDirective x ->
        Bi_outbuf.add_char4 ob '\128' '\184' '\202' '\146';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPBarrierDirective x ->
        Bi_outbuf.add_char4 ob '\180' 's' '\207' '\170';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPCancelDirective x ->
        Bi_outbuf.add_char4 ob '\159' '\188' '\158' '#';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPCancellationPointDirective x ->
        Bi_outbuf.add_char4 ob '\148' '\r' ']' '\020';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPCriticalDirective x ->
        Bi_outbuf.add_char4 ob '\214' '\248' 'y' '\222';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPFlushDirective x ->
        Bi_outbuf.add_char4 ob '\202' '\177' '\025' '\253';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPDistributeDirective x ->
        Bi_outbuf.add_char4 ob '\225' '\137' '4' '\156';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPDistributeParallelForDirective x ->
        Bi_outbuf.add_char4 ob '\198' '\155' '\n' '@';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPDistributeParallelForSimdDirective x ->
        Bi_outbuf.add_char4 ob '\173' '+' '\011' '\147';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPDistributeSimdDirective x ->
        Bi_outbuf.add_char4 ob '\164' 'S' '\147' '\239';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPForDirective x ->
        Bi_outbuf.add_char4 ob '\129' '\244' '\188' '\152';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPForSimdDirective x ->
        Bi_outbuf.add_char4 ob '\135' '\136' '\201' '\235';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPParallelForDirective x ->
        Bi_outbuf.add_char4 ob '\165' '(' '#' '\255';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPParallelForSimdDirective x ->
        Bi_outbuf.add_char4 ob '\212' 'A' 'p' '\210';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPSimdDirective x ->
        Bi_outbuf.add_char4 ob '\224' '\128' '8' 'P';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetParallelForSimdDirective x ->
        Bi_outbuf.add_char4 ob '\214' '\142' '\004' '\195';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetSimdDirective x ->
        Bi_outbuf.add_char4 ob '\217' '\224' '\172' '\191';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetTeamsDistributeDirective x ->
        Bi_outbuf.add_char4 ob '\215' '4' '\142' '\219';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetTeamsDistributeParallelForDirective x ->
        Bi_outbuf.add_char4 ob '\165' 'u' '\234' 'a';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetTeamsDistributeParallelForSimdDirective x ->
        Bi_outbuf.add_char4 ob '\195' '/' '\016' '4';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetTeamsDistributeSimdDirective x ->
        Bi_outbuf.add_char4 ob '\161' '\242' 'y' '\174';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTaskLoopDirective x ->
        Bi_outbuf.add_char4 ob '\132' '1' '\168' '\244';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTaskLoopSimdDirective x ->
        Bi_outbuf.add_char4 ob '\225' '\137' '\020' 'G';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTeamsDistributeDirective x ->
        Bi_outbuf.add_char4 ob '\212' '\231' '\250' '\234';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTeamsDistributeParallelForDirective x ->
        Bi_outbuf.add_char4 ob '\139' '\025' 'j' '\178';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTeamsDistributeParallelForSimdDirective x ->
        Bi_outbuf.add_char4 ob '\164' '\007' '\141' '\005';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTeamsDistributeSimdDirective x ->
        Bi_outbuf.add_char4 ob '\222' '\206' '\153' '=';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPMasterDirective x ->
        Bi_outbuf.add_char4 ob '\173' '\200' 'e' '\251';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPOrderedDirective x ->
        Bi_outbuf.add_char4 ob '\210' '\002' '\223' '\180';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPParallelDirective x ->
        Bi_outbuf.add_char4 ob '\177' '\152' '\214' '\182';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPParallelSectionsDirective x ->
        Bi_outbuf.add_char4 ob '\162' '\005' '\004' '\232';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPSectionDirective x ->
        Bi_outbuf.add_char4 ob '\237' 't' 's' '<';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPSectionsDirective x ->
        Bi_outbuf.add_char4 ob '\205' '+' '\161' '\175';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPSingleDirective x ->
        Bi_outbuf.add_char4 ob '\207' '\234' '\147' 'U';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetDataDirective x ->
        Bi_outbuf.add_char4 ob '\250' '\211' 'l' 'b';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetDirective x ->
        Bi_outbuf.add_char4 ob '\164' '\197' '\165' 'l';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetEnterDataDirective x ->
        Bi_outbuf.add_char4 ob '\222' '\017' '\'' '\208';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetExitDataDirective x ->
        Bi_outbuf.add_char4 ob '\203' '#' '\188' '\228';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetParallelDirective x ->
        Bi_outbuf.add_char4 ob '\191' '\189' '\174' '\165';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetParallelForDirective x ->
        Bi_outbuf.add_char4 ob '\192' ']' '\171' 'p';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetTeamsDirective x ->
        Bi_outbuf.add_char4 ob '\221' '\245' '\185' '\252';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTargetUpdateDirective x ->
        Bi_outbuf.add_char4 ob '\249' 'J' '\169' '\227';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTaskDirective x ->
        Bi_outbuf.add_char4 ob '\223' '\133' '\019' 'x';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTaskgroupDirective x ->
        Bi_outbuf.add_char4 ob '\184' '\255' 'a' '\'';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTaskwaitDirective x ->
        Bi_outbuf.add_char4 ob '\159' '\002' '\026' '\227';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTaskyieldDirective x ->
        Bi_outbuf.add_char4 ob '\216' '\161' '(' 'Y';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | OMPTeamsDirective x ->
        Bi_outbuf.add_char4 ob '\162' '\240' 'M' 'K';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ObjCAtCatchStmt x ->
        Bi_outbuf.add_char4 ob '\216' 'A' '\027' '\132';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 3;
            (
              let x, _, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x, _ = x in (
                write__28
              ) ob x
            );
            (
              let _, _, x = x in (
                write_obj_c_message_expr_kind
              ) ob x
            );
        ) ob x
      | ObjCAtFinallyStmt x ->
        Bi_outbuf.add_char4 ob '\213' 'W' 'E' '\012';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ObjCAtSynchronizedStmt x ->
        Bi_outbuf.add_char4 ob '\130' 'C' '\002' ';';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ObjCAtThrowStmt x ->
        Bi_outbuf.add_char4 ob '\134' '\202' 'M' '\239';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ObjCAtTryStmt x ->
        Bi_outbuf.add_char4 ob '\247' '\215' '>' 'D';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ObjCAutoreleasePoolStmt x ->
        Bi_outbuf.add_char4 ob '\154' '\029' 'Z' 'p';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ObjCForCollectionStmt x ->
        Bi_outbuf.add_char4 ob '\151' '\206' '\246' '\131';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | ReturnStmt x ->
        Bi_outbuf.add_char4 ob '\223' ';' '\219' '8';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | SEHExceptStmt x ->
        Bi_outbuf.add_char4 ob '\153' '\237' '\185' '\023';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | SEHFinallyStmt x ->
        Bi_outbuf.add_char4 ob '\240' 'i' '\231' '\149';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | SEHLeaveStmt x ->
        Bi_outbuf.add_char4 ob '\160' '\243' '\160' '\137';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | SEHTryStmt x ->
        Bi_outbuf.add_char4 ob '\229' '\209' '\168' 'M';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | CaseStmt x ->
        Bi_outbuf.add_char4 ob '\147' '\142' '\r' '8';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | DefaultStmt x ->
        Bi_outbuf.add_char4 ob '\130' 'M' '\127' '\137';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | SwitchStmt x ->
        Bi_outbuf.add_char4 ob '\225' '\253' 'r' '|';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
      | WhileStmt x ->
        Bi_outbuf.add_char4 ob '\136' '\015' 'j' 'y';
        (
          fun ob x ->
            Bi_io.write_tag ob Bi_io.tuple_tag;
            Bi_vint.write_uvint ob 2;
            (
              let x, _ = x in (
                write_stmt_info
              ) ob x
            );
            (
              let _, x = x in (
                write__28
              ) ob x
            );
        ) ob x
)
and write_stmt ob x =
  Bi_io.write_tag ob Bi_io.variant_tag;
  write_untagged_stmt ob x
and string_of_stmt ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_stmt ob x;
  Bi_outbuf.contents ob
and template_decl_info_tag = Bi_io.record_tag
and write_untagged_template_decl_info : Bi_outbuf.t -> template_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_tdi_specializations = x.tdi_specializations in
    if x_tdi_specializations != [] then incr len;
    Bi_vint.write_uvint ob !len;
    if x_tdi_specializations != [] then (
      Bi_outbuf.add_char4 ob '\223' '\224' '\142' '\b';
      (
        write__16
      ) ob x_tdi_specializations;
    );
)
and write_template_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_template_decl_info ob x
and string_of_template_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_template_decl_info ob x;
  Bi_outbuf.contents ob
and var_decl_info_tag = Bi_io.record_tag
and write_untagged_var_decl_info : Bi_outbuf.t -> var_decl_info -> unit = (
  fun ob x ->
    let len = ref 0 in
    let x_vdi_storage_class = x.vdi_storage_class in
    if x_vdi_storage_class != None then incr len;
    let x_vdi_tls_kind = x.vdi_tls_kind in
    if x_vdi_tls_kind != `Tls_none then incr len;
    let x_vdi_is_global = x.vdi_is_global in
    if x_vdi_is_global != false then incr len;
    let x_vdi_is_static_local = x.vdi_is_static_local in
    if x_vdi_is_static_local != false then incr len;
    let x_vdi_is_module_private = x.vdi_is_module_private in
    if x_vdi_is_module_private != false then incr len;
    let x_vdi_is_nrvo_variable = x.vdi_is_nrvo_variable in
    if x_vdi_is_nrvo_variable != false then incr len;
    let x_vdi_is_const_expr = x.vdi_is_const_expr in
    if x_vdi_is_const_expr != false then incr len;
    let x_vdi_init_expr = x.vdi_init_expr in
    if x_vdi_init_expr != None then incr len;
    let x_vdi_parm_index_in_function = x.vdi_parm_index_in_function in
    if x_vdi_parm_index_in_function != None then incr len;
    Bi_vint.write_uvint ob !len;
    (match x_vdi_storage_class with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\190' '\204' '<' '\244';
      (
        Bi_io.write_string
      ) ob x;
    );
    if x_vdi_tls_kind != `Tls_none then (
      Bi_outbuf.add_char4 ob '\235' '\015' 'K' 'X';
      (
        write_tls_kind
      ) ob x_vdi_tls_kind;
    );
    if x_vdi_is_global != false then (
      Bi_outbuf.add_char4 ob '\204' '\214' '\152' 'X';
      (
        Bi_io.write_bool
      ) ob x_vdi_is_global;
    );
    if x_vdi_is_static_local != false then (
      Bi_outbuf.add_char4 ob '\208' '7' '0' '\143';
      (
        Bi_io.write_bool
      ) ob x_vdi_is_static_local;
    );
    if x_vdi_is_module_private != false then (
      Bi_outbuf.add_char4 ob '\204' '\133' '+' '%';
      (
        Bi_io.write_bool
      ) ob x_vdi_is_module_private;
    );
    if x_vdi_is_nrvo_variable != false then (
      Bi_outbuf.add_char4 ob '\149' '\130' '\195' ')';
      (
        Bi_io.write_bool
      ) ob x_vdi_is_nrvo_variable;
    );
    if x_vdi_is_const_expr != false then (
      Bi_outbuf.add_char4 ob '\228' 'Z' '\190' 'F';
      (
        Bi_io.write_bool
      ) ob x_vdi_is_const_expr;
    );
    (match x_vdi_init_expr with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\254' '\147' '\196' '\004';
      (
        write_stmt
      ) ob x;
    );
    (match x_vdi_parm_index_in_function with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\131' 'p' '\177' '\178';
      (
        Bi_io.write_svint
      ) ob x;
    );
)
and write_var_decl_info ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_var_decl_info ob x
and string_of_var_decl_info ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_var_decl_info ob x;
  Bi_outbuf.contents ob
let rec get__16_reader tag = (
  Ag_ob_run.get_list_reader (
    get_decl_reader
  )
) tag
and read__16 ib = (
  Ag_ob_run.read_list (
    get_decl_reader
  )
) ib
and _16_of_string ?pos s =
  read__16 (Bi_inbuf.from_string ?pos s)
and get__19_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_decl
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
and read__19 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_decl
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
and _19_of_string ?pos s =
  read__19 (Bi_inbuf.from_string ?pos s)
and get__21_reader tag = (
  Ag_ob_run.get_list_reader (
    get_lambda_capture_info_reader
  )
) tag
and read__21 ib = (
  Ag_ob_run.read_list (
    get_lambda_capture_info_reader
  )
) ib
and _21_of_string ?pos s =
  read__21 (Bi_inbuf.from_string ?pos s)
and get__23_reader tag = (
  Ag_ob_run.get_list_reader (
    get_cxx_ctor_initializer_reader
  )
) tag
and read__23 ib = (
  Ag_ob_run.read_list (
    get_cxx_ctor_initializer_reader
  )
) ib
and _23_of_string ?pos s =
  read__23 (Bi_inbuf.from_string ?pos s)
and get__25_reader tag = (
  Ag_ob_run.get_list_reader (
    get_block_captured_variable_reader
  )
) tag
and read__25 ib = (
  Ag_ob_run.read_list (
    get_block_captured_variable_reader
  )
) ib
and _25_of_string ?pos s =
  read__25 (Bi_inbuf.from_string ?pos s)
and get__28_reader tag = (
  Ag_ob_run.get_list_reader (
    get_stmt_reader
  )
) tag
and read__28 ib = (
  Ag_ob_run.read_list (
    get_stmt_reader
  )
) ib
and _28_of_string ?pos s =
  read__28 (Bi_inbuf.from_string ?pos s)
and get__9_reader = (
  fun tag ->
    if tag <> 22 then Ag_ob_run.read_error () else
      fun ib ->
        match Char.code (Bi_inbuf.read_char ib) with
          | 0 -> None
          | 0x80 ->
            Some (
              (
                read_stmt
              )
                ib
            )
          | _ -> Ag_ob_run.read_error_at ib
)
and read__9 = (
  fun ib ->
    if Bi_io.read_tag ib <> 22 then Ag_ob_run.read_error_at ib;
    match Char.code (Bi_inbuf.read_char ib) with
      | 0 -> None
      | 0x80 ->
        Some (
          (
            read_stmt
          )
            ib
        )
      | _ -> Ag_ob_run.read_error_at ib
)
and _9_of_string ?pos s =
  read__9 (Bi_inbuf.from_string ?pos s)
and get_block_captured_variable_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_bcv_is_by_ref = ref (false) in
        let field_bcv_is_nested = ref (false) in
        let field_bcv_variable = ref (None) in
        let field_bcv_copy_expr = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 1052512928 ->
              field_bcv_is_by_ref := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 339383788 ->
              field_bcv_is_nested := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -385019332 ->
              field_bcv_variable := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -386085569 ->
              field_bcv_copy_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            bcv_is_by_ref = !field_bcv_is_by_ref;
            bcv_is_nested = !field_bcv_is_nested;
            bcv_variable = !field_bcv_variable;
            bcv_copy_expr = !field_bcv_copy_expr;
          }
         : block_captured_variable)
)
and read_block_captured_variable = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_bcv_is_by_ref = ref (false) in
    let field_bcv_is_nested = ref (false) in
    let field_bcv_variable = ref (None) in
    let field_bcv_copy_expr = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 1052512928 ->
          field_bcv_is_by_ref := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 339383788 ->
          field_bcv_is_nested := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -385019332 ->
          field_bcv_variable := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -386085569 ->
          field_bcv_copy_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        bcv_is_by_ref = !field_bcv_is_by_ref;
        bcv_is_nested = !field_bcv_is_nested;
        bcv_variable = !field_bcv_variable;
        bcv_copy_expr = !field_bcv_copy_expr;
      }
     : block_captured_variable)
)
and block_captured_variable_of_string ?pos s =
  read_block_captured_variable (Bi_inbuf.from_string ?pos s)
and get_block_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_bdi_parameters = ref ([]) in
        let field_bdi_is_variadic = ref (false) in
        let field_bdi_captures_cxx_this = ref (false) in
        let field_bdi_captured_variables = ref ([]) in
        let field_bdi_body = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -780222806 ->
              field_bdi_parameters := (
                (
                  read__16
                ) ib
              );
            | -313367980 ->
              field_bdi_is_variadic := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -1029832756 ->
              field_bdi_captures_cxx_this := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 276485398 ->
              field_bdi_captured_variables := (
                (
                  read__25
                ) ib
              );
            | -1055163742 ->
              field_bdi_body := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            bdi_parameters = !field_bdi_parameters;
            bdi_is_variadic = !field_bdi_is_variadic;
            bdi_captures_cxx_this = !field_bdi_captures_cxx_this;
            bdi_captured_variables = !field_bdi_captured_variables;
            bdi_body = !field_bdi_body;
          }
         : block_decl_info)
)
and read_block_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_bdi_parameters = ref ([]) in
    let field_bdi_is_variadic = ref (false) in
    let field_bdi_captures_cxx_this = ref (false) in
    let field_bdi_captured_variables = ref ([]) in
    let field_bdi_body = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -780222806 ->
          field_bdi_parameters := (
            (
              read__16
            ) ib
          );
        | -313367980 ->
          field_bdi_is_variadic := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -1029832756 ->
          field_bdi_captures_cxx_this := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 276485398 ->
          field_bdi_captured_variables := (
            (
              read__25
            ) ib
          );
        | -1055163742 ->
          field_bdi_body := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        bdi_parameters = !field_bdi_parameters;
        bdi_is_variadic = !field_bdi_is_variadic;
        bdi_captures_cxx_this = !field_bdi_captures_cxx_this;
        bdi_captured_variables = !field_bdi_captured_variables;
        bdi_body = !field_bdi_body;
      }
     : block_decl_info)
)
and block_decl_info_of_string ?pos s =
  read_block_decl_info (Bi_inbuf.from_string ?pos s)
and get_cxx_catch_stmt_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xcsi_variable = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -385019332 ->
              field_xcsi_variable := (
                Some (
                  (
                    read_decl
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            xcsi_variable = !field_xcsi_variable;
          }
         : cxx_catch_stmt_info)
)
and read_cxx_catch_stmt_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xcsi_variable = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -385019332 ->
          field_xcsi_variable := (
            Some (
              (
                read_decl
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        xcsi_variable = !field_xcsi_variable;
      }
     : cxx_catch_stmt_info)
)
and cxx_catch_stmt_info_of_string ?pos s =
  read_cxx_catch_stmt_info (Bi_inbuf.from_string ?pos s)
and get_cxx_ctor_initializer_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xci_subject = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_xci_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_xci_init_expr = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 696779180 ->
              field_xci_subject := (
                (
                  read_cxx_ctor_initializer_subject
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 561591321 ->
              field_xci_source_range := (
                (
                  read_source_range
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -23870460 ->
              field_xci_init_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "subject"; "source_range" |];
        (
          {
            xci_subject = !field_xci_subject;
            xci_source_range = !field_xci_source_range;
            xci_init_expr = !field_xci_init_expr;
          }
         : cxx_ctor_initializer)
)
and read_cxx_ctor_initializer = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xci_subject = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_xci_source_range = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_xci_init_expr = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 696779180 ->
          field_xci_subject := (
            (
              read_cxx_ctor_initializer_subject
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 561591321 ->
          field_xci_source_range := (
            (
              read_source_range
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -23870460 ->
          field_xci_init_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "subject"; "source_range" |];
    (
      {
        xci_subject = !field_xci_subject;
        xci_source_range = !field_xci_source_range;
        xci_init_expr = !field_xci_init_expr;
      }
     : cxx_ctor_initializer)
)
and cxx_ctor_initializer_of_string ?pos s =
  read_cxx_ctor_initializer (Bi_inbuf.from_string ?pos s)
and get_cxx_default_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xdaei_init_expr = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -23870460 ->
              field_xdaei_init_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            xdaei_init_expr = !field_xdaei_init_expr;
          }
         : cxx_default_expr_info)
)
and read_cxx_default_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xdaei_init_expr = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -23870460 ->
          field_xdaei_init_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        xdaei_init_expr = !field_xdaei_init_expr;
      }
     : cxx_default_expr_info)
)
and cxx_default_expr_info_of_string ?pos s =
  read_cxx_default_expr_info (Bi_inbuf.from_string ?pos s)
and get_cxx_method_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xmdi_is_virtual = ref (false) in
        let field_xmdi_is_static = ref (false) in
        let field_xmdi_is_constexpr = ref (false) in
        let field_xmdi_cxx_ctor_initializers = ref ([]) in
        let field_xmdi_overriden_methods = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -238596746 ->
              field_xmdi_is_virtual := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 723534755 ->
              field_xmdi_is_static := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -30899133 ->
              field_xmdi_is_constexpr := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -278377728 ->
              field_xmdi_cxx_ctor_initializers := (
                (
                  read__23
                ) ib
              );
            | -812664171 ->
              field_xmdi_overriden_methods := (
                (
                  read__8
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            xmdi_is_virtual = !field_xmdi_is_virtual;
            xmdi_is_static = !field_xmdi_is_static;
            xmdi_is_constexpr = !field_xmdi_is_constexpr;
            xmdi_cxx_ctor_initializers = !field_xmdi_cxx_ctor_initializers;
            xmdi_overriden_methods = !field_xmdi_overriden_methods;
          }
         : cxx_method_decl_info)
)
and read_cxx_method_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xmdi_is_virtual = ref (false) in
    let field_xmdi_is_static = ref (false) in
    let field_xmdi_is_constexpr = ref (false) in
    let field_xmdi_cxx_ctor_initializers = ref ([]) in
    let field_xmdi_overriden_methods = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -238596746 ->
          field_xmdi_is_virtual := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 723534755 ->
          field_xmdi_is_static := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -30899133 ->
          field_xmdi_is_constexpr := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -278377728 ->
          field_xmdi_cxx_ctor_initializers := (
            (
              read__23
            ) ib
          );
        | -812664171 ->
          field_xmdi_overriden_methods := (
            (
              read__8
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        xmdi_is_virtual = !field_xmdi_is_virtual;
        xmdi_is_static = !field_xmdi_is_static;
        xmdi_is_constexpr = !field_xmdi_is_constexpr;
        xmdi_cxx_ctor_initializers = !field_xmdi_cxx_ctor_initializers;
        xmdi_overriden_methods = !field_xmdi_overriden_methods;
      }
     : cxx_method_decl_info)
)
and cxx_method_decl_info_of_string ?pos s =
  read_cxx_method_decl_info (Bi_inbuf.from_string ?pos s)
and get_cxx_record_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_xrdi_bases = ref ([]) in
        let field_xrdi_vbases = ref ([]) in
        let field_xrdi_transitive_vbases = ref ([]) in
        let field_xrdi_is_pod = ref (false) in
        let field_xrdi_destructor = ref (None) in
        let field_xrdi_lambda_call_operator = ref (None) in
        let field_xrdi_lambda_captures = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 767174466 ->
              field_xrdi_bases := (
                (
                  read__20
                ) ib
              );
            | -606684404 ->
              field_xrdi_vbases := (
                (
                  read__20
                ) ib
              );
            | -896915546 ->
              field_xrdi_transitive_vbases := (
                (
                  read__20
                ) ib
              );
            | -240239760 ->
              field_xrdi_is_pod := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 336714553 ->
              field_xrdi_destructor := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -16205779 ->
              field_xrdi_lambda_call_operator := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | 923095205 ->
              field_xrdi_lambda_captures := (
                (
                  read__21
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            xrdi_bases = !field_xrdi_bases;
            xrdi_vbases = !field_xrdi_vbases;
            xrdi_transitive_vbases = !field_xrdi_transitive_vbases;
            xrdi_is_pod = !field_xrdi_is_pod;
            xrdi_destructor = !field_xrdi_destructor;
            xrdi_lambda_call_operator = !field_xrdi_lambda_call_operator;
            xrdi_lambda_captures = !field_xrdi_lambda_captures;
          }
         : cxx_record_decl_info)
)
and read_cxx_record_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_xrdi_bases = ref ([]) in
    let field_xrdi_vbases = ref ([]) in
    let field_xrdi_transitive_vbases = ref ([]) in
    let field_xrdi_is_pod = ref (false) in
    let field_xrdi_destructor = ref (None) in
    let field_xrdi_lambda_call_operator = ref (None) in
    let field_xrdi_lambda_captures = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 767174466 ->
          field_xrdi_bases := (
            (
              read__20
            ) ib
          );
        | -606684404 ->
          field_xrdi_vbases := (
            (
              read__20
            ) ib
          );
        | -896915546 ->
          field_xrdi_transitive_vbases := (
            (
              read__20
            ) ib
          );
        | -240239760 ->
          field_xrdi_is_pod := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 336714553 ->
          field_xrdi_destructor := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -16205779 ->
          field_xrdi_lambda_call_operator := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | 923095205 ->
          field_xrdi_lambda_captures := (
            (
              read__21
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        xrdi_bases = !field_xrdi_bases;
        xrdi_vbases = !field_xrdi_vbases;
        xrdi_transitive_vbases = !field_xrdi_transitive_vbases;
        xrdi_is_pod = !field_xrdi_is_pod;
        xrdi_destructor = !field_xrdi_destructor;
        xrdi_lambda_call_operator = !field_xrdi_lambda_call_operator;
        xrdi_lambda_captures = !field_xrdi_lambda_captures;
      }
     : cxx_record_decl_info)
)
and cxx_record_decl_info_of_string ?pos s =
  read_cxx_record_decl_info (Bi_inbuf.from_string ?pos s)
and get_decl_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 483769897, true -> (AccessSpecDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | -372769737, true -> (BlockDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_block_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 189945032, true -> (CapturedDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__16
                      ) ib
                    in
                    let x2 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -763774775, true -> (ClassScopeFunctionSpecializationDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | 554787191, true -> (EmptyDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | -813310946, true -> (ExportDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | -1024587786, true -> (ExternCContextDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | 339592909, true -> (FileScopeAsmDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 504979976, true -> (FriendDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_friend_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | -461117086, true -> (FriendTemplateDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | -1068484465, true -> (ImportDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 1068759626, true -> (LinkageSpecDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__16
                      ) ib
                    in
                    let x2 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -175016866, true -> (LabelDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | -629759867, true -> (NamespaceDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read__16
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_namespace_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | -797883361, true -> (NamespaceAliasDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_namespace_alias_decl_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -574735622, true -> (ObjCCompatibleAliasDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_obj_c_compatible_alias_decl_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | 976716084, true -> (ObjCCategoryDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read__16
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_obj_c_category_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | 233654580, true -> (ObjCCategoryImplDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read__16
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_obj_c_category_impl_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | 237509480, true -> (ObjCImplementationDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read__16
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_obj_c_implementation_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | 416436887, true -> (ObjCInterfaceDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read__16
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_obj_c_interface_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | -508534386, true -> (ObjCProtocolDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read__16
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_obj_c_protocol_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | 1020082071, true -> (ObjCMethodDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_obj_c_method_decl_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -978151925, true -> (ObjCPropertyDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_obj_c_property_decl_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -199575321, true -> (BuiltinTemplateDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 934871548, true -> (ClassTemplateDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_template_decl_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -980831972, true -> (FunctionTemplateDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_template_decl_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -764146886, true -> (TypeAliasTemplateDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 215448363, true -> (VarTemplateDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 559384906, true -> (TemplateTemplateParmDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 8370219, true -> (EnumDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 7 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    let x3 =
                      (
                        read__16
                      ) ib
                    in
                    let x4 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x5 =
                      (
                        read_tag_kind
                      ) ib
                    in
                    let x6 =
                      (
                        read_enum_decl_info
                      ) ib
                    in
                    for i = 7 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5, x6)
                ) ib
              ) : decl)
            | -848686149, true -> (RecordDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 7 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    let x3 =
                      (
                        read__16
                      ) ib
                    in
                    let x4 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x5 =
                      (
                        read_tag_kind
                      ) ib
                    in
                    let x6 =
                      (
                        read_record_decl_info
                      ) ib
                    in
                    for i = 7 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5, x6)
                ) ib
              ) : decl)
            | -183666306, true -> (CXXRecordDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 8 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6; 7 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    let x3 =
                      (
                        read__16
                      ) ib
                    in
                    let x4 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x5 =
                      (
                        read_tag_kind
                      ) ib
                    in
                    let x6 =
                      (
                        read_record_decl_info
                      ) ib
                    in
                    let x7 =
                      (
                        read_cxx_record_decl_info
                      ) ib
                    in
                    for i = 8 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5, x6, x7)
                ) ib
              ) : decl)
            | -524720345, true -> (ClassTemplateSpecializationDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 10 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    let x3 =
                      (
                        read__16
                      ) ib
                    in
                    let x4 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x5 =
                      (
                        read_tag_kind
                      ) ib
                    in
                    let x6 =
                      (
                        read_record_decl_info
                      ) ib
                    in
                    let x7 =
                      (
                        read_cxx_record_decl_info
                      ) ib
                    in
                    let x8 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    let x9 =
                      (
                        read_template_specialization_info
                      ) ib
                    in
                    for i = 10 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
                ) ib
              ) : decl)
            | 590996260, true -> (ClassTemplatePartialSpecializationDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 10 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    let x3 =
                      (
                        read__16
                      ) ib
                    in
                    let x4 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x5 =
                      (
                        read_tag_kind
                      ) ib
                    in
                    let x6 =
                      (
                        read_record_decl_info
                      ) ib
                    in
                    let x7 =
                      (
                        read_cxx_record_decl_info
                      ) ib
                    in
                    let x8 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    let x9 =
                      (
                        read_template_specialization_info
                      ) ib
                    in
                    for i = 10 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
                ) ib
              ) : decl)
            | -380580150, true -> (TemplateTypeParmDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -684301999, true -> (ObjCTypeParamDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | 556264416, true -> (TypeAliasDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | 255806773, true -> (TypedefDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    let x3 =
                      (
                        read_typedef_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | 215756226, true -> (UnresolvedUsingTypenameDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_type_ptr
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -1058683986, true -> (UsingDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | -943866731, true -> (UsingDirectiveDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_using_directive_decl_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | 203200807, true -> (UsingPackDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 693957294, true -> (UsingShadowDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 969192212, true -> (ConstructorUsingShadowDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 409413167, true -> (BindingDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -74983900, true -> (FieldDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_field_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | 730448183, true -> (ObjCAtDefsFieldDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_field_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | 118416980, true -> (ObjCIvarDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_field_decl_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_obj_c_ivar_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | -244064318, true -> (FunctionDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_function_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | -1049822140, true -> (CXXDeductionGuideDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_function_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | 701129166, true -> (CXXMethodDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_function_decl_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_cxx_method_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | -867594815, true -> (CXXConstructorDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_function_decl_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_cxx_method_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | 1061169667, true -> (CXXConversionDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_function_decl_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_cxx_method_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | -807108698, true -> (CXXDestructorDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_function_decl_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_cxx_method_decl_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : decl)
            | 333980645, true -> (MSPropertyDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -733054665, true -> (NonTypeTemplateParmDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | 297894609, true -> (VarDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_var_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | 15828211, true -> (DecompositionDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_var_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | -791131758, true -> (ImplicitParamDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_var_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | 336526607, true -> (OMPCapturedExprDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_var_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | -42611643, true -> (ParmVarDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_var_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | -150211434, true -> (VarTemplateSpecializationDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_var_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | -253595243, true -> (VarTemplatePartialSpecializationDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_var_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | -138653521, true -> (EnumConstantDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read_enum_constant_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | -316544138, true -> (IndirectFieldDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x3 =
                      (
                        read__8
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | 1064053061, true -> (OMPDeclareReductionDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | 1057778152, true -> (UnresolvedUsingValueDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_named_decl_info
                      ) ib
                    in
                    let x2 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : decl)
            | -996209007, true -> (OMPThreadPrivateDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | -1045883509, true -> (ObjCPropertyImplDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read_obj_c_property_impl_decl_info
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : decl)
            | 602842861, true -> (PragmaCommentDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | -1068773673, true -> (PragmaDetectMismatchDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | -25935682, true -> (StaticAssertDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    for i = 1 to len - 1 do Bi_io.skip ib done;
                    (x0)
                ) ib
              ) : decl)
            | 52434687, true -> (TranslationUnitDecl (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_decl_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__16
                      ) ib
                    in
                    let x2 =
                      (
                        read_decl_context_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_translation_unit_decl_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : decl)
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
and read_decl = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 483769897, true -> (AccessSpecDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | -372769737, true -> (BlockDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_block_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 189945032, true -> (CapturedDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read__16
                  ) ib
                in
                let x2 =
                  (
                    read_decl_context_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -763774775, true -> (ClassScopeFunctionSpecializationDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | 554787191, true -> (EmptyDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | -813310946, true -> (ExportDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | -1024587786, true -> (ExternCContextDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | 339592909, true -> (FileScopeAsmDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 504979976, true -> (FriendDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_friend_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | -461117086, true -> (FriendTemplateDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | -1068484465, true -> (ImportDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 1068759626, true -> (LinkageSpecDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read__16
                  ) ib
                in
                let x2 =
                  (
                    read_decl_context_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -175016866, true -> (LabelDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | -629759867, true -> (NamespaceDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read__16
                  ) ib
                in
                let x3 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x4 =
                  (
                    read_namespace_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | -797883361, true -> (NamespaceAliasDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_namespace_alias_decl_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -574735622, true -> (ObjCCompatibleAliasDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_obj_c_compatible_alias_decl_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | 976716084, true -> (ObjCCategoryDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read__16
                  ) ib
                in
                let x3 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x4 =
                  (
                    read_obj_c_category_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | 233654580, true -> (ObjCCategoryImplDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read__16
                  ) ib
                in
                let x3 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x4 =
                  (
                    read_obj_c_category_impl_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | 237509480, true -> (ObjCImplementationDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read__16
                  ) ib
                in
                let x3 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x4 =
                  (
                    read_obj_c_implementation_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | 416436887, true -> (ObjCInterfaceDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read__16
                  ) ib
                in
                let x3 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x4 =
                  (
                    read_obj_c_interface_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | -508534386, true -> (ObjCProtocolDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read__16
                  ) ib
                in
                let x3 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x4 =
                  (
                    read_obj_c_protocol_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | 1020082071, true -> (ObjCMethodDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_obj_c_method_decl_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -978151925, true -> (ObjCPropertyDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_obj_c_property_decl_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -199575321, true -> (BuiltinTemplateDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 934871548, true -> (ClassTemplateDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_template_decl_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -980831972, true -> (FunctionTemplateDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_template_decl_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -764146886, true -> (TypeAliasTemplateDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 215448363, true -> (VarTemplateDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 559384906, true -> (TemplateTemplateParmDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 8370219, true -> (EnumDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 7 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                let x3 =
                  (
                    read__16
                  ) ib
                in
                let x4 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x5 =
                  (
                    read_tag_kind
                  ) ib
                in
                let x6 =
                  (
                    read_enum_decl_info
                  ) ib
                in
                for i = 7 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5, x6)
            ) ib
          ) : decl)
        | -848686149, true -> (RecordDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 7 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                let x3 =
                  (
                    read__16
                  ) ib
                in
                let x4 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x5 =
                  (
                    read_tag_kind
                  ) ib
                in
                let x6 =
                  (
                    read_record_decl_info
                  ) ib
                in
                for i = 7 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5, x6)
            ) ib
          ) : decl)
        | -183666306, true -> (CXXRecordDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 8 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6; 7 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                let x3 =
                  (
                    read__16
                  ) ib
                in
                let x4 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x5 =
                  (
                    read_tag_kind
                  ) ib
                in
                let x6 =
                  (
                    read_record_decl_info
                  ) ib
                in
                let x7 =
                  (
                    read_cxx_record_decl_info
                  ) ib
                in
                for i = 8 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5, x6, x7)
            ) ib
          ) : decl)
        | -524720345, true -> (ClassTemplateSpecializationDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 10 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                let x3 =
                  (
                    read__16
                  ) ib
                in
                let x4 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x5 =
                  (
                    read_tag_kind
                  ) ib
                in
                let x6 =
                  (
                    read_record_decl_info
                  ) ib
                in
                let x7 =
                  (
                    read_cxx_record_decl_info
                  ) ib
                in
                let x8 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                let x9 =
                  (
                    read_template_specialization_info
                  ) ib
                in
                for i = 10 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
            ) ib
          ) : decl)
        | 590996260, true -> (ClassTemplatePartialSpecializationDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 10 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                let x3 =
                  (
                    read__16
                  ) ib
                in
                let x4 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x5 =
                  (
                    read_tag_kind
                  ) ib
                in
                let x6 =
                  (
                    read_record_decl_info
                  ) ib
                in
                let x7 =
                  (
                    read_cxx_record_decl_info
                  ) ib
                in
                let x8 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                let x9 =
                  (
                    read_template_specialization_info
                  ) ib
                in
                for i = 10 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9)
            ) ib
          ) : decl)
        | -380580150, true -> (TemplateTypeParmDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -684301999, true -> (ObjCTypeParamDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | 556264416, true -> (TypeAliasDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | 255806773, true -> (TypedefDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                let x3 =
                  (
                    read_typedef_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | 215756226, true -> (UnresolvedUsingTypenameDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_type_ptr
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -1058683986, true -> (UsingDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | -943866731, true -> (UsingDirectiveDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_using_directive_decl_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | 203200807, true -> (UsingPackDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 693957294, true -> (UsingShadowDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 969192212, true -> (ConstructorUsingShadowDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 409413167, true -> (BindingDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -74983900, true -> (FieldDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_field_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | 730448183, true -> (ObjCAtDefsFieldDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_field_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | 118416980, true -> (ObjCIvarDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_field_decl_info
                  ) ib
                in
                let x4 =
                  (
                    read_obj_c_ivar_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | -244064318, true -> (FunctionDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_function_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | -1049822140, true -> (CXXDeductionGuideDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_function_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | 701129166, true -> (CXXMethodDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_function_decl_info
                  ) ib
                in
                let x4 =
                  (
                    read_cxx_method_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | -867594815, true -> (CXXConstructorDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_function_decl_info
                  ) ib
                in
                let x4 =
                  (
                    read_cxx_method_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | 1061169667, true -> (CXXConversionDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_function_decl_info
                  ) ib
                in
                let x4 =
                  (
                    read_cxx_method_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | -807108698, true -> (CXXDestructorDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_function_decl_info
                  ) ib
                in
                let x4 =
                  (
                    read_cxx_method_decl_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : decl)
        | 333980645, true -> (MSPropertyDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -733054665, true -> (NonTypeTemplateParmDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | 297894609, true -> (VarDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_var_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | 15828211, true -> (DecompositionDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_var_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | -791131758, true -> (ImplicitParamDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_var_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | 336526607, true -> (OMPCapturedExprDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_var_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | -42611643, true -> (ParmVarDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_var_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | -150211434, true -> (VarTemplateSpecializationDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_var_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | -253595243, true -> (VarTemplatePartialSpecializationDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_var_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | -138653521, true -> (EnumConstantDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read_enum_constant_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | -316544138, true -> (IndirectFieldDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                let x3 =
                  (
                    read__8
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | 1064053061, true -> (OMPDeclareReductionDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | 1057778152, true -> (UnresolvedUsingValueDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_named_decl_info
                  ) ib
                in
                let x2 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : decl)
        | -996209007, true -> (OMPThreadPrivateDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | -1045883509, true -> (ObjCPropertyImplDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read_obj_c_property_impl_decl_info
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : decl)
        | 602842861, true -> (PragmaCommentDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | -1068773673, true -> (PragmaDetectMismatchDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | -25935682, true -> (StaticAssertDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 1 then Ag_ob_run.missing_tuple_fields len [ 0 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                for i = 1 to len - 1 do Bi_io.skip ib done;
                (x0)
            ) ib
          ) : decl)
        | 52434687, true -> (TranslationUnitDecl (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_decl_info
                  ) ib
                in
                let x1 =
                  (
                    read__16
                  ) ib
                in
                let x2 =
                  (
                    read_decl_context_info
                  ) ib
                in
                let x3 =
                  (
                    read_translation_unit_decl_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : decl)
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
and decl_of_string ?pos s =
  read_decl (Bi_inbuf.from_string ?pos s)
and get_enum_constant_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ecdi_init_expr = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -23870460 ->
              field_ecdi_init_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ecdi_init_expr = !field_ecdi_init_expr;
          }
         : enum_constant_decl_info)
)
and read_enum_constant_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ecdi_init_expr = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -23870460 ->
          field_ecdi_init_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ecdi_init_expr = !field_ecdi_init_expr;
      }
     : enum_constant_decl_info)
)
and enum_constant_decl_info_of_string ?pos s =
  read_enum_constant_decl_info (Bi_inbuf.from_string ?pos s)
and get_field_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_fldi_is_mutable = ref (false) in
        let field_fldi_is_module_private = ref (false) in
        let field_fldi_init_expr = ref (None) in
        let field_fldi_bit_width_expr = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -503435503 ->
              field_fldi_is_mutable := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -863687899 ->
              field_fldi_is_module_private := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -23870460 ->
              field_fldi_init_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | -504255808 ->
              field_fldi_bit_width_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            fldi_is_mutable = !field_fldi_is_mutable;
            fldi_is_module_private = !field_fldi_is_module_private;
            fldi_init_expr = !field_fldi_init_expr;
            fldi_bit_width_expr = !field_fldi_bit_width_expr;
          }
         : field_decl_info)
)
and read_field_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_fldi_is_mutable = ref (false) in
    let field_fldi_is_module_private = ref (false) in
    let field_fldi_init_expr = ref (None) in
    let field_fldi_bit_width_expr = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -503435503 ->
          field_fldi_is_mutable := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -863687899 ->
          field_fldi_is_module_private := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -23870460 ->
          field_fldi_init_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | -504255808 ->
          field_fldi_bit_width_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        fldi_is_mutable = !field_fldi_is_mutable;
        fldi_is_module_private = !field_fldi_is_module_private;
        fldi_init_expr = !field_fldi_init_expr;
        fldi_bit_width_expr = !field_fldi_bit_width_expr;
      }
     : field_decl_info)
)
and field_decl_info_of_string ?pos s =
  read_field_decl_info (Bi_inbuf.from_string ?pos s)
and get_friend_info_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 937565914, true -> (`Type (
                (
                  read_type_ptr
                ) ib
              ))
            | 759135370, true -> (`Decl (
                (
                  read_decl
                ) ib
              ))
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
and read_friend_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 937565914, true -> (`Type (
            (
              read_type_ptr
            ) ib
          ))
        | 759135370, true -> (`Decl (
            (
              read_decl
            ) ib
          ))
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
and friend_info_of_string ?pos s =
  read_friend_info (Bi_inbuf.from_string ?pos s)
and get_function_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_fdi_mangled_name = ref (None) in
        let field_fdi_storage_class = ref (None) in
        let field_fdi_is_inline = ref (false) in
        let field_fdi_is_module_private = ref (false) in
        let field_fdi_is_pure = ref (false) in
        let field_fdi_is_delete_as_written = ref (false) in
        let field_fdi_is_no_throw = ref (false) in
        let field_fdi_parameters = ref ([]) in
        let field_fdi_decl_ptr_with_body = ref (None) in
        let field_fdi_body = ref (None) in
        let field_fdi_template_specialization = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -756435956 ->
              field_fdi_mangled_name := (
                Some (
                  (
                    Ag_ob_run.read_string
                  ) ib
                )
              );
            | 1053572340 ->
              field_fdi_storage_class := (
                Some (
                  (
                    Ag_ob_run.read_string
                  ) ib
                )
              );
            | 1046753614 ->
              field_fdi_is_inline := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -863687899 ->
              field_fdi_is_module_private := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 113926317 ->
              field_fdi_is_pure := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -554629303 ->
              field_fdi_is_delete_as_written := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 725023133 ->
              field_fdi_is_no_throw := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -780222806 ->
              field_fdi_parameters := (
                (
                  read__16
                ) ib
              );
            | -337394667 ->
              field_fdi_decl_ptr_with_body := (
                Some (
                  (
                    read_pointer
                  ) ib
                )
              );
            | -1055163742 ->
              field_fdi_body := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | -205345360 ->
              field_fdi_template_specialization := (
                Some (
                  (
                    read_template_specialization_info
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            fdi_mangled_name = !field_fdi_mangled_name;
            fdi_storage_class = !field_fdi_storage_class;
            fdi_is_inline = !field_fdi_is_inline;
            fdi_is_module_private = !field_fdi_is_module_private;
            fdi_is_pure = !field_fdi_is_pure;
            fdi_is_delete_as_written = !field_fdi_is_delete_as_written;
            fdi_is_no_throw = !field_fdi_is_no_throw;
            fdi_parameters = !field_fdi_parameters;
            fdi_decl_ptr_with_body = !field_fdi_decl_ptr_with_body;
            fdi_body = !field_fdi_body;
            fdi_template_specialization = !field_fdi_template_specialization;
          }
         : function_decl_info)
)
and read_function_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_fdi_mangled_name = ref (None) in
    let field_fdi_storage_class = ref (None) in
    let field_fdi_is_inline = ref (false) in
    let field_fdi_is_module_private = ref (false) in
    let field_fdi_is_pure = ref (false) in
    let field_fdi_is_delete_as_written = ref (false) in
    let field_fdi_is_no_throw = ref (false) in
    let field_fdi_parameters = ref ([]) in
    let field_fdi_decl_ptr_with_body = ref (None) in
    let field_fdi_body = ref (None) in
    let field_fdi_template_specialization = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -756435956 ->
          field_fdi_mangled_name := (
            Some (
              (
                Ag_ob_run.read_string
              ) ib
            )
          );
        | 1053572340 ->
          field_fdi_storage_class := (
            Some (
              (
                Ag_ob_run.read_string
              ) ib
            )
          );
        | 1046753614 ->
          field_fdi_is_inline := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -863687899 ->
          field_fdi_is_module_private := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 113926317 ->
          field_fdi_is_pure := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -554629303 ->
          field_fdi_is_delete_as_written := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 725023133 ->
          field_fdi_is_no_throw := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -780222806 ->
          field_fdi_parameters := (
            (
              read__16
            ) ib
          );
        | -337394667 ->
          field_fdi_decl_ptr_with_body := (
            Some (
              (
                read_pointer
              ) ib
            )
          );
        | -1055163742 ->
          field_fdi_body := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | -205345360 ->
          field_fdi_template_specialization := (
            Some (
              (
                read_template_specialization_info
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        fdi_mangled_name = !field_fdi_mangled_name;
        fdi_storage_class = !field_fdi_storage_class;
        fdi_is_inline = !field_fdi_is_inline;
        fdi_is_module_private = !field_fdi_is_module_private;
        fdi_is_pure = !field_fdi_is_pure;
        fdi_is_delete_as_written = !field_fdi_is_delete_as_written;
        fdi_is_no_throw = !field_fdi_is_no_throw;
        fdi_parameters = !field_fdi_parameters;
        fdi_decl_ptr_with_body = !field_fdi_decl_ptr_with_body;
        fdi_body = !field_fdi_body;
        fdi_template_specialization = !field_fdi_template_specialization;
      }
     : function_decl_info)
)
and function_decl_info_of_string ?pos s =
  read_function_decl_info (Bi_inbuf.from_string ?pos s)
and get_lambda_capture_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_lci_capture_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_lci_capture_this = ref (false) in
        let field_lci_capture_variable = ref (false) in
        let field_lci_capture_VLAtype = ref (false) in
        let field_lci_init_captured_vardecl = ref (None) in
        let field_lci_captured_var = ref (None) in
        let field_lci_is_implicit = ref (false) in
        let field_lci_location = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_lci_is_pack_expansion = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -66484499 ->
              field_lci_capture_kind := (
                (
                  read_lambda_capture_kind
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 33270775 ->
              field_lci_capture_this := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 1066530901 ->
              field_lci_capture_variable := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 1059133580 ->
              field_lci_capture_VLAtype := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -415777601 ->
              field_lci_init_captured_vardecl := (
                Some (
                  (
                    read_decl
                  ) ib
                )
              );
            | -718950394 ->
              field_lci_captured_var := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -343269542 ->
              field_lci_is_implicit := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -448369099 ->
              field_lci_location := (
                (
                  read_source_range
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -558504242 ->
              field_lci_is_pack_expansion := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "capture_kind"; "location" |];
        (
          {
            lci_capture_kind = !field_lci_capture_kind;
            lci_capture_this = !field_lci_capture_this;
            lci_capture_variable = !field_lci_capture_variable;
            lci_capture_VLAtype = !field_lci_capture_VLAtype;
            lci_init_captured_vardecl = !field_lci_init_captured_vardecl;
            lci_captured_var = !field_lci_captured_var;
            lci_is_implicit = !field_lci_is_implicit;
            lci_location = !field_lci_location;
            lci_is_pack_expansion = !field_lci_is_pack_expansion;
          }
         : lambda_capture_info)
)
and read_lambda_capture_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_lci_capture_kind = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_lci_capture_this = ref (false) in
    let field_lci_capture_variable = ref (false) in
    let field_lci_capture_VLAtype = ref (false) in
    let field_lci_init_captured_vardecl = ref (None) in
    let field_lci_captured_var = ref (None) in
    let field_lci_is_implicit = ref (false) in
    let field_lci_location = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_lci_is_pack_expansion = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -66484499 ->
          field_lci_capture_kind := (
            (
              read_lambda_capture_kind
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 33270775 ->
          field_lci_capture_this := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 1066530901 ->
          field_lci_capture_variable := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 1059133580 ->
          field_lci_capture_VLAtype := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -415777601 ->
          field_lci_init_captured_vardecl := (
            Some (
              (
                read_decl
              ) ib
            )
          );
        | -718950394 ->
          field_lci_captured_var := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -343269542 ->
          field_lci_is_implicit := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -448369099 ->
          field_lci_location := (
            (
              read_source_range
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -558504242 ->
          field_lci_is_pack_expansion := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "capture_kind"; "location" |];
    (
      {
        lci_capture_kind = !field_lci_capture_kind;
        lci_capture_this = !field_lci_capture_this;
        lci_capture_variable = !field_lci_capture_variable;
        lci_capture_VLAtype = !field_lci_capture_VLAtype;
        lci_init_captured_vardecl = !field_lci_init_captured_vardecl;
        lci_captured_var = !field_lci_captured_var;
        lci_is_implicit = !field_lci_is_implicit;
        lci_location = !field_lci_location;
        lci_is_pack_expansion = !field_lci_is_pack_expansion;
      }
     : lambda_capture_info)
)
and lambda_capture_info_of_string ?pos s =
  read_lambda_capture_info (Bi_inbuf.from_string ?pos s)
and get_lambda_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_lei_lambda_decl = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -325197854 ->
              field_lei_lambda_decl := (
                (
                  read_decl
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "lambda_decl" |];
        (
          {
            lei_lambda_decl = !field_lei_lambda_decl;
          }
         : lambda_expr_info)
)
and read_lambda_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_lei_lambda_decl = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -325197854 ->
          field_lei_lambda_decl := (
            (
              read_decl
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "lambda_decl" |];
    (
      {
        lei_lambda_decl = !field_lei_lambda_decl;
      }
     : lambda_expr_info)
)
and lambda_expr_info_of_string ?pos s =
  read_lambda_expr_info (Bi_inbuf.from_string ?pos s)
and get_obj_c_implementation_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_oidi_super = ref (None) in
        let field_oidi_class_interface = ref (None) in
        let field_oidi_ivar_initializers = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 79692155 ->
              field_oidi_super := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | 784505778 ->
              field_oidi_class_interface := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | 68147986 ->
              field_oidi_ivar_initializers := (
                (
                  read__23
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            oidi_super = !field_oidi_super;
            oidi_class_interface = !field_oidi_class_interface;
            oidi_ivar_initializers = !field_oidi_ivar_initializers;
          }
         : obj_c_implementation_decl_info)
)
and read_obj_c_implementation_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_oidi_super = ref (None) in
    let field_oidi_class_interface = ref (None) in
    let field_oidi_ivar_initializers = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 79692155 ->
          field_oidi_super := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | 784505778 ->
          field_oidi_class_interface := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | 68147986 ->
          field_oidi_ivar_initializers := (
            (
              read__23
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        oidi_super = !field_oidi_super;
        oidi_class_interface = !field_oidi_class_interface;
        oidi_ivar_initializers = !field_oidi_ivar_initializers;
      }
     : obj_c_implementation_decl_info)
)
and obj_c_implementation_decl_info_of_string ?pos s =
  read_obj_c_implementation_decl_info (Bi_inbuf.from_string ?pos s)
and get_obj_c_message_expr_kind_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 641679986, true -> (`CatchParam (
                (
                  read_decl
                ) ib
              ))
            | -522778682, false -> `CatchAll
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
and read_obj_c_message_expr_kind = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 641679986, true -> (`CatchParam (
            (
              read_decl
            ) ib
          ))
        | -522778682, false -> `CatchAll
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
and obj_c_message_expr_kind_of_string ?pos s =
  read_obj_c_message_expr_kind (Bi_inbuf.from_string ?pos s)
and get_obj_c_method_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_omdi_is_instance_method = ref (false) in
        let field_omdi_result_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_omdi_is_property_accessor = ref (false) in
        let field_omdi_property_decl = ref (None) in
        let field_omdi_parameters = ref ([]) in
        let field_omdi_implicit_parameters = ref ([]) in
        let field_omdi_is_variadic = ref (false) in
        let field_omdi_body = ref (None) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 1000523766 ->
              field_omdi_is_instance_method := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 326853788 ->
              field_omdi_result_type := (
                (
                  read_qual_type
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 1992540 ->
              field_omdi_is_property_accessor := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 747622356 ->
              field_omdi_property_decl := (
                Some (
                  (
                    read_decl_ref
                  ) ib
                )
              );
            | -780222806 ->
              field_omdi_parameters := (
                (
                  read__16
                ) ib
              );
            | 685552324 ->
              field_omdi_implicit_parameters := (
                (
                  read__16
                ) ib
              );
            | -313367980 ->
              field_omdi_is_variadic := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -1055163742 ->
              field_omdi_body := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "result_type" |];
        (
          {
            omdi_is_instance_method = !field_omdi_is_instance_method;
            omdi_result_type = !field_omdi_result_type;
            omdi_is_property_accessor = !field_omdi_is_property_accessor;
            omdi_property_decl = !field_omdi_property_decl;
            omdi_parameters = !field_omdi_parameters;
            omdi_implicit_parameters = !field_omdi_implicit_parameters;
            omdi_is_variadic = !field_omdi_is_variadic;
            omdi_body = !field_omdi_body;
          }
         : obj_c_method_decl_info)
)
and read_obj_c_method_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_omdi_is_instance_method = ref (false) in
    let field_omdi_result_type = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_omdi_is_property_accessor = ref (false) in
    let field_omdi_property_decl = ref (None) in
    let field_omdi_parameters = ref ([]) in
    let field_omdi_implicit_parameters = ref ([]) in
    let field_omdi_is_variadic = ref (false) in
    let field_omdi_body = ref (None) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 1000523766 ->
          field_omdi_is_instance_method := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 326853788 ->
          field_omdi_result_type := (
            (
              read_qual_type
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 1992540 ->
          field_omdi_is_property_accessor := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 747622356 ->
          field_omdi_property_decl := (
            Some (
              (
                read_decl_ref
              ) ib
            )
          );
        | -780222806 ->
          field_omdi_parameters := (
            (
              read__16
            ) ib
          );
        | 685552324 ->
          field_omdi_implicit_parameters := (
            (
              read__16
            ) ib
          );
        | -313367980 ->
          field_omdi_is_variadic := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -1055163742 ->
          field_omdi_body := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x1 then Ag_ob_run.missing_fields [| !bits0 |] [| "result_type" |];
    (
      {
        omdi_is_instance_method = !field_omdi_is_instance_method;
        omdi_result_type = !field_omdi_result_type;
        omdi_is_property_accessor = !field_omdi_is_property_accessor;
        omdi_property_decl = !field_omdi_property_decl;
        omdi_parameters = !field_omdi_parameters;
        omdi_implicit_parameters = !field_omdi_implicit_parameters;
        omdi_is_variadic = !field_omdi_is_variadic;
        omdi_body = !field_omdi_body;
      }
     : obj_c_method_decl_info)
)
and obj_c_method_decl_info_of_string ?pos s =
  read_obj_c_method_decl_info (Bi_inbuf.from_string ?pos s)
and get_opaque_value_expr_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_ovei_source_expr = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 302476889 ->
              field_ovei_source_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            ovei_source_expr = !field_ovei_source_expr;
          }
         : opaque_value_expr_info)
)
and read_opaque_value_expr_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_ovei_source_expr = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 302476889 ->
          field_ovei_source_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        ovei_source_expr = !field_ovei_source_expr;
      }
     : opaque_value_expr_info)
)
and opaque_value_expr_info_of_string ?pos s =
  read_opaque_value_expr_info (Bi_inbuf.from_string ?pos s)
and get_stmt_reader = (
  fun tag ->
    if tag <> 23 then Ag_ob_run.read_error () else
      fun ib ->
        Bi_io.read_hashtag ib (fun ib h has_arg ->
          match h, has_arg with
            | 99193660, true -> (GCCAsmStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 30904413, true -> (MSAsmStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -15443120, true -> (AttributedStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read__12
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -564204921, true -> (BreakStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 40072096, true -> (CXXCatchStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_cxx_catch_stmt_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 145111807, true -> (CXXForRangeStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 473700192, true -> (CXXTryStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 357036710, true -> (CapturedStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -745227405, true -> (CompoundStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -985266577, true -> (ContinueStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -32175900, true -> (CoreturnStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -364489758, true -> (CoroutineBodyStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 355378162, true -> (DeclStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read__16
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -789313645, true -> (DoStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 453323113, true -> (BinaryConditionalOperator (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 651043050, true -> (ConditionalOperator (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -755296328, true -> (AddrLabelExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_addr_label_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -389729538, true -> (ArrayInitIndexExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 694440962, true -> (ArrayInitLoopExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -508355289, true -> (ArraySubscriptExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -1053279024, true -> (ArrayTypeTraitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 519395393, true -> (AsTypeExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 334137824, true -> (AtomicExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -728526619, true -> (BinaryOperator (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_binary_operator_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 464156126, true -> (CompoundAssignOperator (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_binary_operator_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_compound_assign_operator_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : stmt)
            | -360732414, true -> (BlockExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -763379738, true -> (CXXBindTemporaryExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_bind_temporary_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 185410935, true -> (CXXBoolLiteralExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        Ag_ob_run.read_int
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -452559127, true -> (CXXConstructExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_construct_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 456884802, true -> (CXXTemporaryObjectExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_construct_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 553712461, true -> (CXXDefaultArgExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_default_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 502581635, true -> (CXXDefaultInitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_default_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 884950243, true -> (CXXDeleteExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_delete_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -375239353, true -> (CXXDependentScopeMemberExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -218548999, true -> (CXXFoldExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 910772688, true -> (CXXInheritedCtorInitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -1072921614, true -> (CXXNewExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_new_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -775036654, true -> (CXXNoexceptExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cxx_noexcept_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -281547584, true -> (CXXNullPtrLiteralExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 1039702223, true -> (CXXPseudoDestructorExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 603250663, true -> (CXXScalarValueInitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 274875253, true -> (CXXStdInitializerListExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -527052330, true -> (CXXThisExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 665761016, true -> (CXXThrowExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 532230861, true -> (CXXTypeidExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -360174824, true -> (CXXUnresolvedConstructExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -415710134, true -> (CXXUuidofExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -979458797, true -> (CallExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -584266017, true -> (CUDAKernelCallExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -300414768, true -> (CXXMemberCallExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 274561754, true -> (CXXOperatorCallExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 933080177, true -> (UserDefinedLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -895504478, true -> (CStyleCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : stmt)
            | 1059620250, true -> (CXXFunctionalCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : stmt)
            | 181144084, true -> (CXXConstCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x5 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 6 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5)
                ) ib
              ) : stmt)
            | -1015782032, true -> (CXXDynamicCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x5 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 6 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5)
                ) ib
              ) : stmt)
            | -111975061, true -> (CXXReinterpretCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x5 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 6 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5)
                ) ib
              ) : stmt)
            | 466788805, true -> (CXXStaticCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_qual_type
                      ) ib
                    in
                    let x5 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 6 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4, x5)
                ) ib
              ) : stmt)
            | 589384515, true -> (ObjCBridgedCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_qual_type
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : stmt)
            | -1011799559, true -> (ImplicitCastExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_cast_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -274429722, true -> (CharacterLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        Ag_ob_run.read_int
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 716718028, true -> (ChooseExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -575032199, true -> (CompoundLiteralExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 275695435, true -> (ConvertVectorExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -738642081, true -> (CoawaitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 483883478, true -> (CoyieldExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -371500866, true -> (DeclRefExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_ref_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 362404832, true -> (DependentCoawaitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -280876119, true -> (DependentScopeDeclRefExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 579674101, true -> (DesignatedInitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 576756382, true -> (DesignatedInitUpdateExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -791814934, true -> (ExprWithCleanups (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_expr_with_cleanups_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -414838965, true -> (ExpressionTraitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 79898701, true -> (ExtVectorElementExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -776770263, true -> (FloatingLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -348392430, true -> (FunctionParmPackExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -654379574, true -> (GNUNullExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -936001750, true -> (GenericSelectionExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 487641334, true -> (ImaginaryLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 1020353649, true -> (ImplicitValueInitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 266051587, true -> (InitListExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 263781233, true -> (IntegerLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_integer_literal_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -859049988, true -> (LambdaExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_lambda_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -303959155, true -> (MSPropertyRefExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 772589445, true -> (MSPropertySubscriptExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -1032086983, true -> (MaterializeTemporaryExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_materialize_temporary_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 151471311, true -> (MemberExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_member_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 786691558, true -> (NoInitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 953543219, true -> (OMPArraySectionExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -354239614, true -> (ObjCArrayLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -252478058, true -> (ObjCAvailabilityCheckExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_obj_c_availability_check_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 845264654, true -> (ObjCBoolLiteralExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        Ag_ob_run.read_int
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 847597395, true -> (ObjCBoxedExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_objc_boxed_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -253900211, true -> (ObjCDictionaryLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 702815767, true -> (ObjCEncodeExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_objc_encode_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -153030252, true -> (ObjCIndirectCopyRestoreExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 265101024, true -> (ObjCIsaExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -79748994, true -> (ObjCIvarRefExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_obj_c_ivar_ref_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -251345552, true -> (ObjCMessageExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_obj_c_message_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -372712153, true -> (ObjCPropertyRefExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_obj_c_property_ref_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -496497063, true -> (ObjCProtocolExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_decl_ref
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 139287200, true -> (ObjCSelectorExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_selector
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -9721742, true -> (ObjCStringLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -225781623, true -> (ObjCSubscriptRefExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_obj_c_subscript_ref_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -361223681, true -> (OffsetOfExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 224893957, true -> (OpaqueValueExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_opaque_value_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -697101408, true -> (UnresolvedLookupExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_overload_expr_info
                      ) ib
                    in
                    let x4 =
                      (
                        read_unresolved_lookup_expr_info
                      ) ib
                    in
                    for i = 5 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3, x4)
                ) ib
              ) : stmt)
            | 834716544, true -> (UnresolvedMemberExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_overload_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 112165147, true -> (PackExpansionExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 36919871, true -> (ParenExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 379352765, true -> (ParenListExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 249145979, true -> (PredefinedExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_predefined_expr_type
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 649046226, true -> (PseudoObjectExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -475884847, true -> (ShuffleVectorExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -891518682, true -> (SizeOfPackExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -261253187, true -> (StmtExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 842081406, true -> (StringLiteral (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read__3
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -268703711, true -> (SubstNonTypeTemplateParmExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 747352474, true -> (SubstNonTypeTemplateParmPackExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 445567465, true -> (TypeTraitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_type_trait_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | -878933447, true -> (TypoExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -361157406, true -> (UnaryExprOrTypeTraitExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_unary_expr_or_type_trait_expr_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 819610707, true -> (UnaryOperator (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    let x3 =
                      (
                        read_unary_operator_info
                      ) ib
                    in
                    for i = 4 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2, x3)
                ) ib
              ) : stmt)
            | 46625472, true -> (VAArgExpr (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_expr_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 459194833, true -> (ForStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -421429845, true -> (GotoStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_goto_stmt_info
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | 572628197, true -> (IfStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -258803559, true -> (IndirectGotoStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -7925188, true -> (LabelStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        Ag_ob_run.read_string
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -11487907, true -> (MSDependentExistsStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 62178447, true -> (NullStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 12110482, true -> (OMPAtomicDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 880005034, true -> (OMPBarrierDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 532454947, true -> (OMPCancelDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 336420116, true -> (OMPCancellationPointDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -688358946, true -> (OMPCriticalDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -894363139, true -> (OMPFlushDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -511101796, true -> (OMPDistributeDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -962917824, true -> (OMPDistributeParallelForDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 757795731, true -> (OMPDistributeParallelForSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 609457135, true -> (OMPDistributeSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 32816280, true -> (OMPForDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 126405099, true -> (OMPForSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 623387647, true -> (OMPParallelForDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -733908782, true -> (OMPParallelForSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -528467888, true -> (OMPSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -695335741, true -> (OMPTargetParallelForSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -639587137, true -> (OMPTargetSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -684421413, true -> (OMPTargetTeamsDistributeDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 628484705, true -> (OMPTargetTeamsDistributeParallelForDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -1020325836, true -> (OMPTargetTeamsDistributeParallelForSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 569538990, true -> (OMPTargetTeamsDistributeSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 70363380, true -> (OMPTaskLoopDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -511110073, true -> (OMPTaskLoopSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -722994454, true -> (OMPTeamsDistributeDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 186215090, true -> (OMPTeamsDistributeParallelForDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 604474629, true -> (OMPTeamsDistributeParallelForSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -556885699, true -> (OMPTeamsDistributeSimdDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 768108027, true -> (OMPMasterDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -771563596, true -> (OMPOrderedDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 832100022, true -> (OMPParallelDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 570754280, true -> (OMPParallelSectionsDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -311135428, true -> (OMPSectionDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -852778577, true -> (OMPSectionsDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -806710443, true -> (OMPSingleDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -86807454, true -> (OMPTargetDataDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 616932716, true -> (OMPTargetDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -569301040, true -> (OMPTargetEnterDataDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -886850332, true -> (OMPTargetExitDataDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 1069395621, true -> (OMPTargetParallelDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -1067603088, true -> (OMPTargetParallelForDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -571098628, true -> (OMPTargetTeamsDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -112547357, true -> (OMPTargetUpdateDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -544926856, true -> (OMPTaskDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 956260647, true -> (OMPTaskgroupDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 520231651, true -> (OMPTaskwaitDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -660527015, true -> (OMPTaskyieldDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 586173771, true -> (OMPTeamsDirective (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -666821756, true -> (ObjCAtCatchStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    let x2 =
                      (
                        read_obj_c_message_expr_kind
                      ) ib
                    in
                    for i = 3 to len - 1 do Bi_io.skip ib done;
                    (x0, x1, x2)
                ) ib
              ) : stmt)
            | -715700980, true -> (ObjCAtFinallyStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 37945915, true -> (ObjCAtSynchronizedStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 113921519, true -> (ObjCAtThrowStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -136888764, true -> (ObjCAtTryStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 438131312, true -> (ObjCAutoreleasePoolStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 399439491, true -> (ObjCForCollectionStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -549725384, true -> (ReturnStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 435009815, true -> (SEHExceptStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -261494891, true -> (SEHFinallyStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 552837257, true -> (SEHLeaveStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -439244723, true -> (SEHTryStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 328076600, true -> (CaseStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 38633353, true -> (DefaultStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | -503483780, true -> (SwitchStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | 135228025, true -> (WhileStmt (
                (
                  fun ib ->
                    if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                    let len = Bi_vint.read_uvint ib in
                    if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                    let x0 =
                      (
                        read_stmt_info
                      ) ib
                    in
                    let x1 =
                      (
                        read__28
                      ) ib
                    in
                    for i = 2 to len - 1 do Bi_io.skip ib done;
                    (x0, x1)
                ) ib
              ) : stmt)
            | _ -> Ag_ob_run.unsupported_variant h has_arg
        )
)
and read_stmt = (
  fun ib ->
    if Bi_io.read_tag ib <> 23 then Ag_ob_run.read_error_at ib;
    Bi_io.read_hashtag ib (fun ib h has_arg ->
      match h, has_arg with
        | 99193660, true -> (GCCAsmStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 30904413, true -> (MSAsmStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -15443120, true -> (AttributedStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read__12
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -564204921, true -> (BreakStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 40072096, true -> (CXXCatchStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_cxx_catch_stmt_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 145111807, true -> (CXXForRangeStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 473700192, true -> (CXXTryStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 357036710, true -> (CapturedStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -745227405, true -> (CompoundStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -985266577, true -> (ContinueStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -32175900, true -> (CoreturnStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -364489758, true -> (CoroutineBodyStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 355378162, true -> (DeclStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read__16
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -789313645, true -> (DoStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 453323113, true -> (BinaryConditionalOperator (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 651043050, true -> (ConditionalOperator (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -755296328, true -> (AddrLabelExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_addr_label_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -389729538, true -> (ArrayInitIndexExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 694440962, true -> (ArrayInitLoopExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -508355289, true -> (ArraySubscriptExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -1053279024, true -> (ArrayTypeTraitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 519395393, true -> (AsTypeExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 334137824, true -> (AtomicExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -728526619, true -> (BinaryOperator (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_binary_operator_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 464156126, true -> (CompoundAssignOperator (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_binary_operator_info
                  ) ib
                in
                let x4 =
                  (
                    read_compound_assign_operator_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : stmt)
        | -360732414, true -> (BlockExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_decl
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -763379738, true -> (CXXBindTemporaryExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_bind_temporary_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 185410935, true -> (CXXBoolLiteralExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    Ag_ob_run.read_int
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -452559127, true -> (CXXConstructExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_construct_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 456884802, true -> (CXXTemporaryObjectExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_construct_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 553712461, true -> (CXXDefaultArgExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_default_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 502581635, true -> (CXXDefaultInitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_default_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 884950243, true -> (CXXDeleteExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_delete_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -375239353, true -> (CXXDependentScopeMemberExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -218548999, true -> (CXXFoldExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 910772688, true -> (CXXInheritedCtorInitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -1072921614, true -> (CXXNewExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_new_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -775036654, true -> (CXXNoexceptExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cxx_noexcept_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -281547584, true -> (CXXNullPtrLiteralExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 1039702223, true -> (CXXPseudoDestructorExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 603250663, true -> (CXXScalarValueInitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 274875253, true -> (CXXStdInitializerListExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -527052330, true -> (CXXThisExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 665761016, true -> (CXXThrowExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 532230861, true -> (CXXTypeidExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -360174824, true -> (CXXUnresolvedConstructExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -415710134, true -> (CXXUuidofExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -979458797, true -> (CallExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -584266017, true -> (CUDAKernelCallExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -300414768, true -> (CXXMemberCallExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 274561754, true -> (CXXOperatorCallExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 933080177, true -> (UserDefinedLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -895504478, true -> (CStyleCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : stmt)
        | 1059620250, true -> (CXXFunctionalCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : stmt)
        | 181144084, true -> (CXXConstCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_qual_type
                  ) ib
                in
                let x5 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 6 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5)
            ) ib
          ) : stmt)
        | -1015782032, true -> (CXXDynamicCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_qual_type
                  ) ib
                in
                let x5 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 6 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5)
            ) ib
          ) : stmt)
        | -111975061, true -> (CXXReinterpretCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_qual_type
                  ) ib
                in
                let x5 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 6 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5)
            ) ib
          ) : stmt)
        | 466788805, true -> (CXXStaticCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 6 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4; 5 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_qual_type
                  ) ib
                in
                let x5 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 6 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4, x5)
            ) ib
          ) : stmt)
        | 589384515, true -> (ObjCBridgedCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_qual_type
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : stmt)
        | -1011799559, true -> (ImplicitCastExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_cast_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -274429722, true -> (CharacterLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    Ag_ob_run.read_int
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 716718028, true -> (ChooseExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -575032199, true -> (CompoundLiteralExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 275695435, true -> (ConvertVectorExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -738642081, true -> (CoawaitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 483883478, true -> (CoyieldExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -371500866, true -> (DeclRefExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_decl_ref_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 362404832, true -> (DependentCoawaitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -280876119, true -> (DependentScopeDeclRefExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 579674101, true -> (DesignatedInitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 576756382, true -> (DesignatedInitUpdateExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -791814934, true -> (ExprWithCleanups (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_expr_with_cleanups_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -414838965, true -> (ExpressionTraitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 79898701, true -> (ExtVectorElementExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -776770263, true -> (FloatingLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -348392430, true -> (FunctionParmPackExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -654379574, true -> (GNUNullExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -936001750, true -> (GenericSelectionExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 487641334, true -> (ImaginaryLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 1020353649, true -> (ImplicitValueInitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 266051587, true -> (InitListExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 263781233, true -> (IntegerLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_integer_literal_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -859049988, true -> (LambdaExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_lambda_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -303959155, true -> (MSPropertyRefExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 772589445, true -> (MSPropertySubscriptExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -1032086983, true -> (MaterializeTemporaryExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_materialize_temporary_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 151471311, true -> (MemberExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_member_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 786691558, true -> (NoInitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 953543219, true -> (OMPArraySectionExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -354239614, true -> (ObjCArrayLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -252478058, true -> (ObjCAvailabilityCheckExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_obj_c_availability_check_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 845264654, true -> (ObjCBoolLiteralExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    Ag_ob_run.read_int
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 847597395, true -> (ObjCBoxedExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_objc_boxed_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -253900211, true -> (ObjCDictionaryLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 702815767, true -> (ObjCEncodeExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_objc_encode_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -153030252, true -> (ObjCIndirectCopyRestoreExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 265101024, true -> (ObjCIsaExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -79748994, true -> (ObjCIvarRefExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_obj_c_ivar_ref_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -251345552, true -> (ObjCMessageExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_obj_c_message_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -372712153, true -> (ObjCPropertyRefExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_obj_c_property_ref_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -496497063, true -> (ObjCProtocolExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_decl_ref
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 139287200, true -> (ObjCSelectorExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_selector
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -9721742, true -> (ObjCStringLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -225781623, true -> (ObjCSubscriptRefExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_obj_c_subscript_ref_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -361223681, true -> (OffsetOfExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 224893957, true -> (OpaqueValueExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_opaque_value_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -697101408, true -> (UnresolvedLookupExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 5 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3; 4 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_overload_expr_info
                  ) ib
                in
                let x4 =
                  (
                    read_unresolved_lookup_expr_info
                  ) ib
                in
                for i = 5 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3, x4)
            ) ib
          ) : stmt)
        | 834716544, true -> (UnresolvedMemberExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_overload_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 112165147, true -> (PackExpansionExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 36919871, true -> (ParenExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 379352765, true -> (ParenListExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 249145979, true -> (PredefinedExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_predefined_expr_type
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 649046226, true -> (PseudoObjectExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -475884847, true -> (ShuffleVectorExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -891518682, true -> (SizeOfPackExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -261253187, true -> (StmtExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 842081406, true -> (StringLiteral (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read__3
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -268703711, true -> (SubstNonTypeTemplateParmExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 747352474, true -> (SubstNonTypeTemplateParmPackExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 445567465, true -> (TypeTraitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_type_trait_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | -878933447, true -> (TypoExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -361157406, true -> (UnaryExprOrTypeTraitExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_unary_expr_or_type_trait_expr_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 819610707, true -> (UnaryOperator (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 4 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2; 3 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                let x3 =
                  (
                    read_unary_operator_info
                  ) ib
                in
                for i = 4 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2, x3)
            ) ib
          ) : stmt)
        | 46625472, true -> (VAArgExpr (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_expr_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 459194833, true -> (ForStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -421429845, true -> (GotoStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_goto_stmt_info
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | 572628197, true -> (IfStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -258803559, true -> (IndirectGotoStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -7925188, true -> (LabelStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    Ag_ob_run.read_string
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -11487907, true -> (MSDependentExistsStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 62178447, true -> (NullStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 12110482, true -> (OMPAtomicDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 880005034, true -> (OMPBarrierDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 532454947, true -> (OMPCancelDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 336420116, true -> (OMPCancellationPointDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -688358946, true -> (OMPCriticalDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -894363139, true -> (OMPFlushDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -511101796, true -> (OMPDistributeDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -962917824, true -> (OMPDistributeParallelForDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 757795731, true -> (OMPDistributeParallelForSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 609457135, true -> (OMPDistributeSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 32816280, true -> (OMPForDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 126405099, true -> (OMPForSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 623387647, true -> (OMPParallelForDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -733908782, true -> (OMPParallelForSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -528467888, true -> (OMPSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -695335741, true -> (OMPTargetParallelForSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -639587137, true -> (OMPTargetSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -684421413, true -> (OMPTargetTeamsDistributeDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 628484705, true -> (OMPTargetTeamsDistributeParallelForDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -1020325836, true -> (OMPTargetTeamsDistributeParallelForSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 569538990, true -> (OMPTargetTeamsDistributeSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 70363380, true -> (OMPTaskLoopDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -511110073, true -> (OMPTaskLoopSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -722994454, true -> (OMPTeamsDistributeDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 186215090, true -> (OMPTeamsDistributeParallelForDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 604474629, true -> (OMPTeamsDistributeParallelForSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -556885699, true -> (OMPTeamsDistributeSimdDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 768108027, true -> (OMPMasterDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -771563596, true -> (OMPOrderedDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 832100022, true -> (OMPParallelDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 570754280, true -> (OMPParallelSectionsDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -311135428, true -> (OMPSectionDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -852778577, true -> (OMPSectionsDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -806710443, true -> (OMPSingleDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -86807454, true -> (OMPTargetDataDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 616932716, true -> (OMPTargetDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -569301040, true -> (OMPTargetEnterDataDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -886850332, true -> (OMPTargetExitDataDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 1069395621, true -> (OMPTargetParallelDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -1067603088, true -> (OMPTargetParallelForDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -571098628, true -> (OMPTargetTeamsDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -112547357, true -> (OMPTargetUpdateDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -544926856, true -> (OMPTaskDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 956260647, true -> (OMPTaskgroupDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 520231651, true -> (OMPTaskwaitDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -660527015, true -> (OMPTaskyieldDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 586173771, true -> (OMPTeamsDirective (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -666821756, true -> (ObjCAtCatchStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 3 then Ag_ob_run.missing_tuple_fields len [ 0; 1; 2 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                let x2 =
                  (
                    read_obj_c_message_expr_kind
                  ) ib
                in
                for i = 3 to len - 1 do Bi_io.skip ib done;
                (x0, x1, x2)
            ) ib
          ) : stmt)
        | -715700980, true -> (ObjCAtFinallyStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 37945915, true -> (ObjCAtSynchronizedStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 113921519, true -> (ObjCAtThrowStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -136888764, true -> (ObjCAtTryStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 438131312, true -> (ObjCAutoreleasePoolStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 399439491, true -> (ObjCForCollectionStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -549725384, true -> (ReturnStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 435009815, true -> (SEHExceptStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -261494891, true -> (SEHFinallyStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 552837257, true -> (SEHLeaveStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -439244723, true -> (SEHTryStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 328076600, true -> (CaseStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 38633353, true -> (DefaultStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | -503483780, true -> (SwitchStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | 135228025, true -> (WhileStmt (
            (
              fun ib ->
                if Bi_io.read_tag ib <> 20 then Ag_ob_run.read_error_at ib;
                let len = Bi_vint.read_uvint ib in
                if len < 2 then Ag_ob_run.missing_tuple_fields len [ 0; 1 ];
                let x0 =
                  (
                    read_stmt_info
                  ) ib
                in
                let x1 =
                  (
                    read__28
                  ) ib
                in
                for i = 2 to len - 1 do Bi_io.skip ib done;
                (x0, x1)
            ) ib
          ) : stmt)
        | _ -> Ag_ob_run.unsupported_variant h has_arg
    )
)
and stmt_of_string ?pos s =
  read_stmt (Bi_inbuf.from_string ?pos s)
and get_template_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_tdi_specializations = ref ([]) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -538931704 ->
              field_tdi_specializations := (
                (
                  read__16
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            tdi_specializations = !field_tdi_specializations;
          }
         : template_decl_info)
)
and read_template_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_tdi_specializations = ref ([]) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -538931704 ->
          field_tdi_specializations := (
            (
              read__16
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        tdi_specializations = !field_tdi_specializations;
      }
     : template_decl_info)
)
and template_decl_info_of_string ?pos s =
  read_template_decl_info (Bi_inbuf.from_string ?pos s)
and get_var_decl_info_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_vdi_storage_class = ref (None) in
        let field_vdi_tls_kind = ref (`Tls_none) in
        let field_vdi_is_global = ref (false) in
        let field_vdi_is_static_local = ref (false) in
        let field_vdi_is_module_private = ref (false) in
        let field_vdi_is_nrvo_variable = ref (false) in
        let field_vdi_is_const_expr = ref (false) in
        let field_vdi_init_expr = ref (None) in
        let field_vdi_parm_index_in_function = ref (None) in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 1053572340 ->
              field_vdi_storage_class := (
                Some (
                  (
                    Ag_ob_run.read_string
                  ) ib
                )
              );
            | -351319208 ->
              field_vdi_tls_kind := (
                (
                  read_tls_kind
                ) ib
              );
            | -858351528 ->
              field_vdi_is_global := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -801689457 ->
              field_vdi_is_static_local := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -863687899 ->
              field_vdi_is_module_private := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | 360891177 ->
              field_vdi_is_nrvo_variable := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -463815098 ->
              field_vdi_is_const_expr := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | -23870460 ->
              field_vdi_init_expr := (
                Some (
                  (
                    read_stmt
                  ) ib
                )
              );
            | 57717170 ->
              field_vdi_parm_index_in_function := (
                Some (
                  (
                    Ag_ob_run.read_int
                  ) ib
                )
              );
            | _ -> Bi_io.skip ib
        done;
        (
          {
            vdi_storage_class = !field_vdi_storage_class;
            vdi_tls_kind = !field_vdi_tls_kind;
            vdi_is_global = !field_vdi_is_global;
            vdi_is_static_local = !field_vdi_is_static_local;
            vdi_is_module_private = !field_vdi_is_module_private;
            vdi_is_nrvo_variable = !field_vdi_is_nrvo_variable;
            vdi_is_const_expr = !field_vdi_is_const_expr;
            vdi_init_expr = !field_vdi_init_expr;
            vdi_parm_index_in_function = !field_vdi_parm_index_in_function;
          }
         : var_decl_info)
)
and read_var_decl_info = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_vdi_storage_class = ref (None) in
    let field_vdi_tls_kind = ref (`Tls_none) in
    let field_vdi_is_global = ref (false) in
    let field_vdi_is_static_local = ref (false) in
    let field_vdi_is_module_private = ref (false) in
    let field_vdi_is_nrvo_variable = ref (false) in
    let field_vdi_is_const_expr = ref (false) in
    let field_vdi_init_expr = ref (None) in
    let field_vdi_parm_index_in_function = ref (None) in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 1053572340 ->
          field_vdi_storage_class := (
            Some (
              (
                Ag_ob_run.read_string
              ) ib
            )
          );
        | -351319208 ->
          field_vdi_tls_kind := (
            (
              read_tls_kind
            ) ib
          );
        | -858351528 ->
          field_vdi_is_global := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -801689457 ->
          field_vdi_is_static_local := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -863687899 ->
          field_vdi_is_module_private := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | 360891177 ->
          field_vdi_is_nrvo_variable := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -463815098 ->
          field_vdi_is_const_expr := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | -23870460 ->
          field_vdi_init_expr := (
            Some (
              (
                read_stmt
              ) ib
            )
          );
        | 57717170 ->
          field_vdi_parm_index_in_function := (
            Some (
              (
                Ag_ob_run.read_int
              ) ib
            )
          );
        | _ -> Bi_io.skip ib
    done;
    (
      {
        vdi_storage_class = !field_vdi_storage_class;
        vdi_tls_kind = !field_vdi_tls_kind;
        vdi_is_global = !field_vdi_is_global;
        vdi_is_static_local = !field_vdi_is_static_local;
        vdi_is_module_private = !field_vdi_is_module_private;
        vdi_is_nrvo_variable = !field_vdi_is_nrvo_variable;
        vdi_is_const_expr = !field_vdi_is_const_expr;
        vdi_init_expr = !field_vdi_init_expr;
        vdi_parm_index_in_function = !field_vdi_parm_index_in_function;
      }
     : var_decl_info)
)
and var_decl_info_of_string ?pos s =
  read_var_decl_info (Bi_inbuf.from_string ?pos s)
let lookup_tag = Bi_io.record_tag
let write_untagged_lookup : Bi_outbuf.t -> lookup -> unit = (
  fun ob x ->
    Bi_vint.write_uvint ob 2;
    Bi_outbuf.add_char4 ob '\182' '\156' '}' '\128';
    (
      Bi_io.write_string
    ) ob x.lup_decl_name;
    Bi_outbuf.add_char4 ob '\185' 'D' 'Z' '\245';
    (
      write__8
    ) ob x.lup_decl_refs;
)
let write_lookup ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_lookup ob x
let string_of_lookup ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_lookup ob x;
  Bi_outbuf.contents ob
let get_lookup_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_lup_decl_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_lup_decl_refs = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | 916225408 ->
              field_lup_decl_name := (
                (
                  Ag_ob_run.read_string
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | 960781045 ->
              field_lup_decl_refs := (
                (
                  read__8
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_name"; "decl_refs" |];
        (
          {
            lup_decl_name = !field_lup_decl_name;
            lup_decl_refs = !field_lup_decl_refs;
          }
         : lookup)
)
let read_lookup = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_lup_decl_name = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_lup_decl_refs = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | 916225408 ->
          field_lup_decl_name := (
            (
              Ag_ob_run.read_string
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | 960781045 ->
          field_lup_decl_refs := (
            (
              read__8
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_name"; "decl_refs" |];
    (
      {
        lup_decl_name = !field_lup_decl_name;
        lup_decl_refs = !field_lup_decl_refs;
      }
     : lookup)
)
let lookup_of_string ?pos s =
  read_lookup (Bi_inbuf.from_string ?pos s)
let _7_tag = Bi_io.array_tag
let write_untagged__7 = (
  Ag_ob_run.write_untagged_list
    lookup_tag
    (
      write_untagged_lookup
    )
)
let write__7 ob x =
  Bi_io.write_tag ob Bi_io.array_tag;
  write_untagged__7 ob x
let string_of__7 ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write__7 ob x;
  Bi_outbuf.contents ob
let get__7_reader = (
  Ag_ob_run.get_list_reader (
    get_lookup_reader
  )
)
let read__7 = (
  Ag_ob_run.read_list (
    get_lookup_reader
  )
)
let _7_of_string ?pos s =
  read__7 (Bi_inbuf.from_string ?pos s)
let lookups_tag = Bi_io.record_tag
let write_untagged_lookups : Bi_outbuf.t -> lookups -> unit = (
  fun ob x ->
    let len = ref 2 in
    let x_lups_primary_context_pointer = x.lups_primary_context_pointer in
    if x_lups_primary_context_pointer != None then incr len;
    let x_lups_has_undeserialized_decls = x.lups_has_undeserialized_decls in
    if x_lups_has_undeserialized_decls != false then incr len;
    Bi_vint.write_uvint ob !len;
    Bi_outbuf.add_char4 ob '\195' 'i' '\235' '\190';
    (
      write_decl_ref
    ) ob x.lups_decl_ref;
    (match x_lups_primary_context_pointer with None -> () | Some x ->
      Bi_outbuf.add_char4 ob '\200' '\158' ']' 'p';
      (
        write_pointer
      ) ob x;
    );
    Bi_outbuf.add_char4 ob '\157' '8' '\136' '\185';
    (
      write__7
    ) ob x.lups_lookups;
    if x_lups_has_undeserialized_decls != false then (
      Bi_outbuf.add_char4 ob '\216' '\233' '\127' '\237';
      (
        Bi_io.write_bool
      ) ob x_lups_has_undeserialized_decls;
    );
)
let write_lookups ob x =
  Bi_io.write_tag ob Bi_io.record_tag;
  write_untagged_lookups ob x
let string_of_lookups ?(len = 1024) x =
  let ob = Bi_outbuf.create len in
  write_lookups ob x;
  Bi_outbuf.contents ob
let get_lookups_reader = (
  fun tag ->
    if tag <> 21 then Ag_ob_run.read_error () else
      fun ib ->
        let field_lups_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_lups_primary_context_pointer = ref (None) in
        let field_lups_lookups = ref (Obj.magic (Sys.opaque_identity 0.0)) in
        let field_lups_has_undeserialized_decls = ref (false) in
        let bits0 = ref 0 in
        let len = Bi_vint.read_uvint ib in
        for i = 1 to len do
          match Bi_io.read_field_hashtag ib with
            | -1016468546 ->
              field_lups_decl_ref := (
                (
                  read_decl_ref
                ) ib
              );
              bits0 := !bits0 lor 0x1;
            | -929145488 ->
              field_lups_primary_context_pointer := (
                Some (
                  (
                    read_pointer
                  ) ib
                )
              );
            | 490244281 ->
              field_lups_lookups := (
                (
                  read__7
                ) ib
              );
              bits0 := !bits0 lor 0x2;
            | -655786003 ->
              field_lups_has_undeserialized_decls := (
                (
                  Ag_ob_run.read_bool
                ) ib
              );
            | _ -> Bi_io.skip ib
        done;
        if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_ref"; "lookups" |];
        (
          {
            lups_decl_ref = !field_lups_decl_ref;
            lups_primary_context_pointer = !field_lups_primary_context_pointer;
            lups_lookups = !field_lups_lookups;
            lups_has_undeserialized_decls = !field_lups_has_undeserialized_decls;
          }
         : lookups)
)
let read_lookups = (
  fun ib ->
    if Bi_io.read_tag ib <> 21 then Ag_ob_run.read_error_at ib;
    let field_lups_decl_ref = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_lups_primary_context_pointer = ref (None) in
    let field_lups_lookups = ref (Obj.magic (Sys.opaque_identity 0.0)) in
    let field_lups_has_undeserialized_decls = ref (false) in
    let bits0 = ref 0 in
    let len = Bi_vint.read_uvint ib in
    for i = 1 to len do
      match Bi_io.read_field_hashtag ib with
        | -1016468546 ->
          field_lups_decl_ref := (
            (
              read_decl_ref
            ) ib
          );
          bits0 := !bits0 lor 0x1;
        | -929145488 ->
          field_lups_primary_context_pointer := (
            Some (
              (
                read_pointer
              ) ib
            )
          );
        | 490244281 ->
          field_lups_lookups := (
            (
              read__7
            ) ib
          );
          bits0 := !bits0 lor 0x2;
        | -655786003 ->
          field_lups_has_undeserialized_decls := (
            (
              Ag_ob_run.read_bool
            ) ib
          );
        | _ -> Bi_io.skip ib
    done;
    if !bits0 <> 0x3 then Ag_ob_run.missing_fields [| !bits0 |] [| "decl_ref"; "lookups" |];
    (
      {
        lups_decl_ref = !field_lups_decl_ref;
        lups_primary_context_pointer = !field_lups_primary_context_pointer;
        lups_lookups = !field_lups_lookups;
        lups_has_undeserialized_decls = !field_lups_has_undeserialized_decls;
      }
     : lookups)
)
let lookups_of_string ?pos s =
  read_lookups (Bi_inbuf.from_string ?pos s)
